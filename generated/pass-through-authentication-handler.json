{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/pass-through-authentication-handlers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Pass Through Authentication Handler objects",
                    "type": "pass-through-authentication-handler-list-response",
                    "nickname": "list-pass-through-authentication-handlers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Pass Through Authentication Handler to the config",
                    "nickname": "add-pass-through-authentication-handler",
                    "type": "pass-through-authentication-handler-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Pass Through Authentication Handler to add",
                            "name": "add-pass-through-authentication-handler-request",
                            "type": "add-pass-through-authentication-handler-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/pass-through-authentication-handlers/{pass-through-authentication-handler-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Pass Through Authentication Handler",
                    "type": "pass-through-authentication-handler-response",
                    "nickname": "get-pass-through-authentication-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "pass-through-authentication-handler-name",
                          "description": "Name of the Pass Through Authentication Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Pass Through Authentication Handler by name, replacing any attributes specified in the request body",
                    "type": "pass-through-authentication-handler-response",
                    "nickname": "put-pass-through-authentication-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "pass-through-authentication-handler-name",
                          "description": "Name of the Pass Through Authentication Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Pass Through Authentication Handler attributes to update",
                            "name": "pass-through-authentication-handler-properties",
                            "type": "pass-through-authentication-handler-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Pass Through Authentication Handler by name, using a SCIM patch request",
                    "type": "pass-through-authentication-handler-response",
                    "nickname": "patch-pass-through-authentication-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "pass-through-authentication-handler-name",
                          "description": "Name of the Pass Through Authentication Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Pass Through Authentication Handler",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Pass Through Authentication Handler",
                    "nickname": "delete-pass-through-authentication-handler",
                    "parameters": [
                        {
                          "name": "pass-through-authentication-handler-name",
                          "description": "Name of the Pass Through Authentication Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "pass-through-authentication-handler-list-response": {
            "id": "pass-through-authentication-handler-list-response",
            "description": "Pass Through Authentication Handler list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "pass-through-authentication-handler-response"
                    }
                }
            }
        },
        "add-pass-through-authentication-handler-request": {
            "id": "add-pass-through-authentication-handler-request",
            "description": "A Pass Through Authentication Handler resource request",
            "required": [
                "handlerName"
            ],
            "properties": {
                "handlerName": {
                    "type": "string",
                    "description": "Name of the new Pass Through Authentication Handler"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:third-party"
                        ]
                    }
                },
                "server": {
                    "description": "Specifies the LDAP external server(s) to which authentication attempts should be forwarded.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "serverAccessMode": {
                    "description": "Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.",
                    "type": "string"
                    , "enum": [
                        "round-robin"
                        ,
                        "failover-on-unavailable"
                        ,
                        "failover-on-any-failure"
                    ]
                }
                ,
                "usePasswordPolicyControl": {
                    "description": "Indicates whether to include the password policy request control (as defined in draft-behera-ldap-password-policy-10) in bind requests sent to the external server.",
                    "type": "boolean"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Pass Through Authentication Handler.",
                    "type": "string"
                }
                ,
                "dnMap": {
                    "description": "Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "initialConnections": {
                    "description": "Specifies the initial number of connections to establish to each external server against which authentication may be attempted.",
                    "type": "integer"
                }
                ,
                "description": {
                    "description": "A description for this Pass Through Authentication Handler",
                    "type": "string"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Pass Through Authentication Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "useLocation": {
                    "description": "Indicates whether to take server locations into account when prioritizing the servers to use for pass-through authentication attempts.",
                    "type": "boolean"
                }
                ,
                "searchFilterPattern": {
                    "description": "A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.",
                    "type": "string"
                }
                ,
                "maximumAllowedLocalResponseTime": {
                    "description": "The maximum length of time to wait for a response from an external server in the same location as this Directory Server before considering it unavailable.",
                    "type": "string"
                }
                ,
                "maximumAllowedNonlocalResponseTime": {
                    "description": "The maximum length of time to wait for a response from an external server in a different location from this Directory Server before considering it unavailable.",
                    "type": "string"
                }
                ,
                "bindDNPattern": {
                    "description": "A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.",
                    "type": "string"
                }
                ,
                "searchBaseDN": {
                    "description": "The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.",
                    "type": "string"
                }
                ,
                "maxConnections": {
                    "description": "Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.",
                    "type": "integer"
                }
            }
        },
        "pass-through-authentication-handler-response": {
            "id": "pass-through-authentication-handler-response",
            "description": "A Pass Through Authentication Handler resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:third-party"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Pass Through Authentication Handler"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "server": {
                    "description": "Specifies the LDAP external server(s) to which authentication attempts should be forwarded.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "serverAccessMode": {
                    "description": "Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.",
                    "type": "string"
                    , "enum": [
                        "round-robin"
                        ,
                        "failover-on-unavailable"
                        ,
                        "failover-on-any-failure"
                    ]
                }
                ,
                "usePasswordPolicyControl": {
                    "description": "Indicates whether to include the password policy request control (as defined in draft-behera-ldap-password-policy-10) in bind requests sent to the external server.",
                    "type": "boolean"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Pass Through Authentication Handler.",
                    "type": "string"
                }
                ,
                "dnMap": {
                    "description": "Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "initialConnections": {
                    "description": "Specifies the initial number of connections to establish to each external server against which authentication may be attempted.",
                    "type": "integer"
                }
                ,
                "description": {
                    "description": "A description for this Pass Through Authentication Handler",
                    "type": "string"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Pass Through Authentication Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "useLocation": {
                    "description": "Indicates whether to take server locations into account when prioritizing the servers to use for pass-through authentication attempts.",
                    "type": "boolean"
                }
                ,
                "searchFilterPattern": {
                    "description": "A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.",
                    "type": "string"
                }
                ,
                "maximumAllowedLocalResponseTime": {
                    "description": "The maximum length of time to wait for a response from an external server in the same location as this Directory Server before considering it unavailable.",
                    "type": "string"
                }
                ,
                "maximumAllowedNonlocalResponseTime": {
                    "description": "The maximum length of time to wait for a response from an external server in a different location from this Directory Server before considering it unavailable.",
                    "type": "string"
                }
                ,
                "bindDNPattern": {
                    "description": "A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.",
                    "type": "string"
                }
                ,
                "searchBaseDN": {
                    "description": "The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.",
                    "type": "string"
                }
                ,
                "maxConnections": {
                    "description": "Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.",
                    "type": "integer"
                }
            }
        },
        "pass-through-authentication-handler-properties": {
            "id": "pass-through-authentication-handler-properties",
            "description": "Pass Through Authentication Handler properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:third-party"
                        ]
                    }
                },
                "server": {
                    "description": "Specifies the LDAP external server(s) to which authentication attempts should be forwarded.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "serverAccessMode": {
                    "description": "Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.",
                    "type": "string"
                    , "enum": [
                        "round-robin"
                        ,
                        "failover-on-unavailable"
                        ,
                        "failover-on-any-failure"
                    ]
                }
                ,
                "usePasswordPolicyControl": {
                    "description": "Indicates whether to include the password policy request control (as defined in draft-behera-ldap-password-policy-10) in bind requests sent to the external server.",
                    "type": "boolean"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Pass Through Authentication Handler.",
                    "type": "string"
                }
                ,
                "dnMap": {
                    "description": "Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "initialConnections": {
                    "description": "Specifies the initial number of connections to establish to each external server against which authentication may be attempted.",
                    "type": "integer"
                }
                ,
                "description": {
                    "description": "A description for this Pass Through Authentication Handler",
                    "type": "string"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Pass Through Authentication Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "useLocation": {
                    "description": "Indicates whether to take server locations into account when prioritizing the servers to use for pass-through authentication attempts.",
                    "type": "boolean"
                }
                ,
                "searchFilterPattern": {
                    "description": "A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.",
                    "type": "string"
                }
                ,
                "maximumAllowedLocalResponseTime": {
                    "description": "The maximum length of time to wait for a response from an external server in the same location as this Directory Server before considering it unavailable.",
                    "type": "string"
                }
                ,
                "maximumAllowedNonlocalResponseTime": {
                    "description": "The maximum length of time to wait for a response from an external server in a different location from this Directory Server before considering it unavailable.",
                    "type": "string"
                }
                ,
                "bindDNPattern": {
                    "description": "A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.",
                    "type": "string"
                }
                ,
                "searchBaseDN": {
                    "description": "The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.",
                    "type": "string"
                }
                ,
                "maxConnections": {
                    "description": "Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.",
                    "type": "integer"
                }
            }
        }
    }
}
