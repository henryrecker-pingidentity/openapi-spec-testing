{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/external-servers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all External Server objects",
                    "type": "external-server-list-response",
                    "nickname": "list-external-servers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new External Server to the config",
                    "nickname": "add-external-server",
                    "type": "external-server-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "External Server to add",
                            "name": "add-external-server-request",
                            "type": "add-external-server-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/external-servers/{external-server-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single External Server",
                    "type": "external-server-response",
                    "nickname": "get-external-server",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "external-server-name",
                          "description": "Name of the External Server",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing External Server by name, replacing any attributes specified in the request body",
                    "type": "external-server-response",
                    "nickname": "put-external-server",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "external-server-name",
                          "description": "Name of the External Server",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "External Server attributes to update",
                            "name": "external-server-properties",
                            "type": "external-server-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing External Server by name, using a SCIM patch request",
                    "type": "external-server-response",
                    "nickname": "patch-external-server",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "external-server-name",
                          "description": "Name of the External Server",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the External Server",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a External Server",
                    "nickname": "delete-external-server",
                    "parameters": [
                        {
                          "name": "external-server-name",
                          "description": "Name of the External Server",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "external-server-list-response": {
            "id": "external-server-list-response",
            "description": "External Server list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "external-server-response"
                    }
                }
            }
        },
        "add-external-server-request": {
            "id": "add-external-server-request",
            "description": "A External Server resource request",
            "required": [
                "serverName"
            ],
            "properties": {
                "serverName": {
                    "type": "string",
                    "description": "Name of the new External Server"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:external-server:smtp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-ds"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-ds"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:active-directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:jdbc"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:syslog"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-proxy-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:http-proxy"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-proxy-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:opendj"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-one-http"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:http"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:oracle-unified-directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:conjur"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:amazon-aws"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:vault"
                        ]
                    }
                },
                "maxConnectionAge": {
                    "description": "Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.",
                    "type": "string"
                }
                ,
                "databaseName": {
                    "description": "Specifies which database to connect to. This is ignored if jdbc-driver-url is specified.",
                    "type": "string"
                }
                ,
                "awsAccessKeyID": {
                    "description": "The access key ID that will be used if authentication should use an access key. If this is provided, then an aws-secret-access-key must also be provided.",
                    "type": "string"
                }
                ,
                "serverHostName": {
                    "description": "The host name of the smtp server.",
                    "type": "string"
                }
                ,
                "transactionIsolationLevel": {
                    "description": "This property specifies the default transaction isolation level for connections to this JDBC External Server.",
                    "type": "string"
                    , "enum": [
                        "read-committed"
                        ,
                        "read-uncommitted"
                        ,
                        "repeatable-read"
                        ,
                        "serializable"
                    ]
                }
                ,
                "password": {
                    "description": "The login password for the specified user name. Both username and password must be supplied if this attribute is set.",
                    "type": "string"
                }
                ,
                "maxResponseSize": {
                    "description": "Specifies the maximum response size that should be supported for messages received from the LDAP external server.",
                    "type": "string"
                }
                ,
                "connectionSecurity": {
                    "description": "The mechanism to use to secure communication with the directory server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "healthCheckConnectTimeout": {
                    "description": "Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.",
                    "type": "string"
                }
                ,
                "connectTimeout": {
                    "description": "Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.",
                    "type": "string"
                }
                ,
                "jdbcConnectionProperties": {
                    "description": "Specifies the connection properties for the JDBC datasource.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "hostnameVerificationMethod": {
                    "description": "The mechanism for checking if the hostname in the PingOne ID Token Validator's base-url value matches the name(s) stored inside the X.509 certificate presented by PingOne.",
                    "type": "string"
                    , "enum": [
                        "allow-all"
                        ,
                        "strict"
                    ]
                }
                ,
                "vaultAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Vault server.",
                    "type": "string"
                }
                ,
                "trustStoreType": {
                    "description": "The store type for the specified trust store file. The value should likely be one of "JKS", "PKCS12", or "BCFKS".",
                    "type": "string"
                }
                ,
                "basicAuthenticationPassphraseProvider": {
                    "description": "A passphrase provider that provides access to the password to use to authenticate to the HTTP Proxy External Server.",
                    "type": "string"
                }
                ,
                "responseTimeout": {
                    "description": "Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to PingOne.",
                    "type": "string"
                }
                ,
                "conjurAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Conjur server.",
                    "type": "string"
                }
                ,
                "trustManagerProvider": {
                    "description": "The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.",
                    "type": "string"
                }
                ,
                "initialConnections": {
                    "description": "The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.",
                    "type": "integer"
                }
                ,
                "useAdministrativeOperationControl": {
                    "description": "Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.",
                    "type": "boolean"
                }
                ,
                "sslCertNickname": {
                    "description": "The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.",
                    "type": "string"
                }
                ,
                "defunctConnectionResultCode": {
                    "description": "Specifies the operation result code values that should cause the associated connection should be considered defunct. If an operation fails with one of these result codes, then it will be terminated and an attempt will be made to establish a new connection in its place.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "success"
                            ,
                            "operations-error"
                            ,
                            "protocol-error"
                            ,
                            "time-limit-exceeded"
                            ,
                            "size-limit-exceeded"
                            ,
                            "compare-false"
                            ,
                            "compare-true"
                            ,
                            "auth-method-not-supported"
                            ,
                            "strong-auth-required"
                            ,
                            "referral"
                            ,
                            "admin-limit-exceeded"
                            ,
                            "unavailable-critical-extension"
                            ,
                            "confidentiality-required"
                            ,
                            "sasl-bind-in-progress"
                            ,
                            "no-such-attribute"
                            ,
                            "undefined-attribute-type"
                            ,
                            "inappropriate-matching"
                            ,
                            "constraint-violation"
                            ,
                            "attribute-or-value-exists"
                            ,
                            "invalid-attribute-syntax"
                            ,
                            "no-such-object"
                            ,
                            "alias-problem"
                            ,
                            "invalid-dn-syntax"
                            ,
                            "alias-dereferencing-problem"
                            ,
                            "inappropriate-authentication"
                            ,
                            "invalid-credentials"
                            ,
                            "insufficient-access-rights"
                            ,
                            "busy"
                            ,
                            "unavailable"
                            ,
                            "unwilling-to-perform"
                            ,
                            "loop-detect"
                            ,
                            "sort-control-missing"
                            ,
                            "offset-range-error"
                            ,
                            "naming-violation"
                            ,
                            "object-class-violation"
                            ,
                            "not-allowed-on-nonleaf"
                            ,
                            "not-allowed-on-rdn"
                            ,
                            "entry-already-exists"
                            ,
                            "object-class-mods-prohibited"
                            ,
                            "affects-multiple-dsas"
                            ,
                            "virtual-list-view-error"
                            ,
                            "other"
                            ,
                            "server-down"
                            ,
                            "local-error"
                            ,
                            "encoding-error"
                            ,
                            "decoding-error"
                            ,
                            "timeout"
                            ,
                            "auth-unknown"
                            ,
                            "filter-error"
                            ,
                            "user-canceled"
                            ,
                            "param-error"
                            ,
                            "no-memory"
                            ,
                            "connect-error"
                            ,
                            "not-supported"
                            ,
                            "control-not-found"
                            ,
                            "no-results-returned"
                            ,
                            "more-results-to-return"
                            ,
                            "client-loop"
                            ,
                            "referral-limit-exceeded"
                            ,
                            "canceled"
                            ,
                            "no-such-operation"
                            ,
                            "too-late"
                            ,
                            "cannot-cancel"
                            ,
                            "assertion-failed"
                            ,
                            "authorization-denied"
                            ,
                            "no-operation"
                            ,
                            "interactive-transaction-aborted"
                        ]
                    }
                }
                ,
                "minExpiredConnectionDisconnectInterval": {
                    "description": "Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.",
                    "type": "string"
                }
                ,
                "bindDN": {
                    "description": "The DN to use to bind to the target LDAP server if simple authentication is required.",
                    "type": "string"
                }
                ,
                "authenticationMethod": {
                    "description": "The mechanism to use to authenticate to the target server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "simple"
                        ,
                        "external"
                        ,
                        "inter-server"
                    ]
                }
                ,
                "validationQueryTimeout": {
                    "description": "Specifies the amount of time to wait for a response from the database when executing the validation query, if one is set. If the timeout is exceeded, the Directory Server will drop the connection and obtain a new one. A value of zero indicates no timeout.",
                    "type": "string"
                }
                ,
                "conjurAccountName": {
                    "description": "The name of the account with which the desired secrets are associated.",
                    "type": "string"
                }
                ,
                "validationQuery": {
                    "description": "The SQL query that will be used to validate connections to the database before making them available to the Directory Server.",
                    "type": "string"
                }
                ,
                "smtpTimeout": {
                    "description": "Specifies the maximum length of time that a connection or attempted connection to a SMTP server may take.",
                    "type": "string"
                }
                ,
                "vaultServerBaseURI": {
                    "description": "The base URL needed to access the Vault server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://vault.example.com:8200/".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this External Server",
                    "type": "string"
                }
                ,
                "serverPort": {
                    "description": "The port number where the smtp server listens for requests.",
                    "type": "integer"
                }
                ,
                "passphraseProvider": {
                    "description": "The passphrase provider to use to obtain the login password for the specified user.",
                    "type": "string"
                }
                ,
                "conjurServerBaseURI": {
                    "description": "The base URL needed to access the CyberArk Conjur server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://conjur.example.com:8443/".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "trustStoreFile": {
                    "description": "The path to a file containing the information needed to trust the certificate presented by the Conjur servers.",
                    "type": "string"
                }
                ,
                "keyManagerProvider": {
                    "description": "The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.",
                    "type": "string"
                }
                ,
                "basicAuthenticationUsername": {
                    "description": "The username to use to authenticate to the HTTP Proxy External Server.",
                    "type": "string"
                }
                ,
                "trustStorePin": {
                    "description": "The PIN needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.",
                    "type": "string"
                }
                ,
                "verifyCredentialsMethod": {
                    "description": "The mechanism to use to verify user credentials while ensuring that the ability to process other operations is not impacted by an alternate authorization identity.",
                    "type": "string"
                    , "enum": [
                        "separate-connections"
                        ,
                        "retain-identity-control"
                        ,
                        "bind-on-existing-connections"
                    ]
                }
                ,
                "maxConnections": {
                    "description": "The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.",
                    "type": "integer"
                }
                ,
                "awsSecretAccessKey": {
                    "description": "The secret access key that will be used if authentication should use an access key. If this is provided, then an aws-access-key-id must also be provided.",
                    "type": "string"
                }
                ,
                "awsRegionName": {
                    "description": "The name of the AWS region containing the resources that will be accessed.",
                    "type": "string"
                }
                ,
                "smtpSecurity": {
                    "description": "This property specifies type of connection security to use when connecting to the outgoing mail server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "starttls"
                        ,
                        "ssl"
                    ]
                }
                ,
                "jdbcDriverType": {
                    "description": "Specifies a supported database driver type. The driver class will be automatically selected based on this selection. We highly recommend using a JDBC 4 driver that is suitable for the current Java platform.",
                    "type": "string"
                    , "enum": [
                        "oraclethin"
                        ,
                        "oracleoci"
                        ,
                        "mysql"
                        ,
                        "db2"
                        ,
                        "sqlserver"
                        ,
                        "postgres"
                        ,
                        "other"
                    ]
                }
                ,
                "smtpConnectionProperties": {
                    "description": "Specifies the connection properties for the smtp server.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "userName": {
                    "description": "The name of the login account to use when connecting to the smtp server. Both username and password must be supplied if this attribute is set.",
                    "type": "string"
                }
                ,
                "transportMechanism": {
                    "description": "The transport mechanism that should be used when communicating with the syslog server.",
                    "type": "string"
                    , "enum": [
                        "unencrypted-udp"
                        ,
                        "unencrypted-tcp"
                        ,
                        "tls-encrypted-tcp"
                    ]
                }
                ,
                "baseURL": {
                    "description": "The base URL of the external server, optionally including port number, for example "https://externalService:9031".",
                    "type": "string"
                }
                ,
                "abandonOnTimeout": {
                    "description": "Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.",
                    "type": "boolean"
                }
                ,
                "jdbcDriverURL": {
                    "description": "Specify the complete JDBC URL which will be used instead of the automatic URL format. You must select type 'other' for the jdbc-driver-type.",
                    "type": "string"
                }
                ,
                "location": {
                    "description": "Specifies the location for the LDAP External Server.",
                    "type": "string"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the AWS service.",
                    "type": "string"
                }
            }
        },
        "external-server-response": {
            "id": "external-server-response",
            "description": "A External Server resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:external-server:smtp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-ds"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-ds"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:active-directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:jdbc"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:syslog"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-proxy-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:http-proxy"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-proxy-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:opendj"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-one-http"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:http"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:oracle-unified-directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:conjur"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:amazon-aws"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:vault"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the External Server"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "maxConnectionAge": {
                    "description": "Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.",
                    "type": "string"
                }
                ,
                "databaseName": {
                    "description": "Specifies which database to connect to. This is ignored if jdbc-driver-url is specified.",
                    "type": "string"
                }
                ,
                "awsAccessKeyID": {
                    "description": "The access key ID that will be used if authentication should use an access key. If this is provided, then an aws-secret-access-key must also be provided.",
                    "type": "string"
                }
                ,
                "serverHostName": {
                    "description": "The host name of the smtp server.",
                    "type": "string"
                }
                ,
                "transactionIsolationLevel": {
                    "description": "This property specifies the default transaction isolation level for connections to this JDBC External Server.",
                    "type": "string"
                    , "enum": [
                        "read-committed"
                        ,
                        "read-uncommitted"
                        ,
                        "repeatable-read"
                        ,
                        "serializable"
                    ]
                }
                ,
                "password": {
                    "description": "The login password for the specified user name. Both username and password must be supplied if this attribute is set.",
                    "type": "string"
                }
                ,
                "maxResponseSize": {
                    "description": "Specifies the maximum response size that should be supported for messages received from the LDAP external server.",
                    "type": "string"
                }
                ,
                "connectionSecurity": {
                    "description": "The mechanism to use to secure communication with the directory server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "healthCheckConnectTimeout": {
                    "description": "Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.",
                    "type": "string"
                }
                ,
                "connectTimeout": {
                    "description": "Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.",
                    "type": "string"
                }
                ,
                "jdbcConnectionProperties": {
                    "description": "Specifies the connection properties for the JDBC datasource.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "hostnameVerificationMethod": {
                    "description": "The mechanism for checking if the hostname in the PingOne ID Token Validator's base-url value matches the name(s) stored inside the X.509 certificate presented by PingOne.",
                    "type": "string"
                    , "enum": [
                        "allow-all"
                        ,
                        "strict"
                    ]
                }
                ,
                "vaultAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Vault server.",
                    "type": "string"
                }
                ,
                "trustStoreType": {
                    "description": "The store type for the specified trust store file. The value should likely be one of "JKS", "PKCS12", or "BCFKS".",
                    "type": "string"
                }
                ,
                "basicAuthenticationPassphraseProvider": {
                    "description": "A passphrase provider that provides access to the password to use to authenticate to the HTTP Proxy External Server.",
                    "type": "string"
                }
                ,
                "responseTimeout": {
                    "description": "Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to PingOne.",
                    "type": "string"
                }
                ,
                "conjurAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Conjur server.",
                    "type": "string"
                }
                ,
                "trustManagerProvider": {
                    "description": "The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.",
                    "type": "string"
                }
                ,
                "initialConnections": {
                    "description": "The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.",
                    "type": "integer"
                }
                ,
                "useAdministrativeOperationControl": {
                    "description": "Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.",
                    "type": "boolean"
                }
                ,
                "sslCertNickname": {
                    "description": "The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.",
                    "type": "string"
                }
                ,
                "defunctConnectionResultCode": {
                    "description": "Specifies the operation result code values that should cause the associated connection should be considered defunct. If an operation fails with one of these result codes, then it will be terminated and an attempt will be made to establish a new connection in its place.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "success"
                            ,
                            "operations-error"
                            ,
                            "protocol-error"
                            ,
                            "time-limit-exceeded"
                            ,
                            "size-limit-exceeded"
                            ,
                            "compare-false"
                            ,
                            "compare-true"
                            ,
                            "auth-method-not-supported"
                            ,
                            "strong-auth-required"
                            ,
                            "referral"
                            ,
                            "admin-limit-exceeded"
                            ,
                            "unavailable-critical-extension"
                            ,
                            "confidentiality-required"
                            ,
                            "sasl-bind-in-progress"
                            ,
                            "no-such-attribute"
                            ,
                            "undefined-attribute-type"
                            ,
                            "inappropriate-matching"
                            ,
                            "constraint-violation"
                            ,
                            "attribute-or-value-exists"
                            ,
                            "invalid-attribute-syntax"
                            ,
                            "no-such-object"
                            ,
                            "alias-problem"
                            ,
                            "invalid-dn-syntax"
                            ,
                            "alias-dereferencing-problem"
                            ,
                            "inappropriate-authentication"
                            ,
                            "invalid-credentials"
                            ,
                            "insufficient-access-rights"
                            ,
                            "busy"
                            ,
                            "unavailable"
                            ,
                            "unwilling-to-perform"
                            ,
                            "loop-detect"
                            ,
                            "sort-control-missing"
                            ,
                            "offset-range-error"
                            ,
                            "naming-violation"
                            ,
                            "object-class-violation"
                            ,
                            "not-allowed-on-nonleaf"
                            ,
                            "not-allowed-on-rdn"
                            ,
                            "entry-already-exists"
                            ,
                            "object-class-mods-prohibited"
                            ,
                            "affects-multiple-dsas"
                            ,
                            "virtual-list-view-error"
                            ,
                            "other"
                            ,
                            "server-down"
                            ,
                            "local-error"
                            ,
                            "encoding-error"
                            ,
                            "decoding-error"
                            ,
                            "timeout"
                            ,
                            "auth-unknown"
                            ,
                            "filter-error"
                            ,
                            "user-canceled"
                            ,
                            "param-error"
                            ,
                            "no-memory"
                            ,
                            "connect-error"
                            ,
                            "not-supported"
                            ,
                            "control-not-found"
                            ,
                            "no-results-returned"
                            ,
                            "more-results-to-return"
                            ,
                            "client-loop"
                            ,
                            "referral-limit-exceeded"
                            ,
                            "canceled"
                            ,
                            "no-such-operation"
                            ,
                            "too-late"
                            ,
                            "cannot-cancel"
                            ,
                            "assertion-failed"
                            ,
                            "authorization-denied"
                            ,
                            "no-operation"
                            ,
                            "interactive-transaction-aborted"
                        ]
                    }
                }
                ,
                "minExpiredConnectionDisconnectInterval": {
                    "description": "Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.",
                    "type": "string"
                }
                ,
                "bindDN": {
                    "description": "The DN to use to bind to the target LDAP server if simple authentication is required.",
                    "type": "string"
                }
                ,
                "authenticationMethod": {
                    "description": "The mechanism to use to authenticate to the target server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "simple"
                        ,
                        "external"
                        ,
                        "inter-server"
                    ]
                }
                ,
                "validationQueryTimeout": {
                    "description": "Specifies the amount of time to wait for a response from the database when executing the validation query, if one is set. If the timeout is exceeded, the Directory Server will drop the connection and obtain a new one. A value of zero indicates no timeout.",
                    "type": "string"
                }
                ,
                "conjurAccountName": {
                    "description": "The name of the account with which the desired secrets are associated.",
                    "type": "string"
                }
                ,
                "validationQuery": {
                    "description": "The SQL query that will be used to validate connections to the database before making them available to the Directory Server.",
                    "type": "string"
                }
                ,
                "smtpTimeout": {
                    "description": "Specifies the maximum length of time that a connection or attempted connection to a SMTP server may take.",
                    "type": "string"
                }
                ,
                "vaultServerBaseURI": {
                    "description": "The base URL needed to access the Vault server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://vault.example.com:8200/".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this External Server",
                    "type": "string"
                }
                ,
                "serverPort": {
                    "description": "The port number where the smtp server listens for requests.",
                    "type": "integer"
                }
                ,
                "passphraseProvider": {
                    "description": "The passphrase provider to use to obtain the login password for the specified user.",
                    "type": "string"
                }
                ,
                "conjurServerBaseURI": {
                    "description": "The base URL needed to access the CyberArk Conjur server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://conjur.example.com:8443/".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "trustStoreFile": {
                    "description": "The path to a file containing the information needed to trust the certificate presented by the Conjur servers.",
                    "type": "string"
                }
                ,
                "keyManagerProvider": {
                    "description": "The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.",
                    "type": "string"
                }
                ,
                "basicAuthenticationUsername": {
                    "description": "The username to use to authenticate to the HTTP Proxy External Server.",
                    "type": "string"
                }
                ,
                "trustStorePin": {
                    "description": "The PIN needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.",
                    "type": "string"
                }
                ,
                "verifyCredentialsMethod": {
                    "description": "The mechanism to use to verify user credentials while ensuring that the ability to process other operations is not impacted by an alternate authorization identity.",
                    "type": "string"
                    , "enum": [
                        "separate-connections"
                        ,
                        "retain-identity-control"
                        ,
                        "bind-on-existing-connections"
                    ]
                }
                ,
                "maxConnections": {
                    "description": "The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.",
                    "type": "integer"
                }
                ,
                "awsSecretAccessKey": {
                    "description": "The secret access key that will be used if authentication should use an access key. If this is provided, then an aws-access-key-id must also be provided.",
                    "type": "string"
                }
                ,
                "awsRegionName": {
                    "description": "The name of the AWS region containing the resources that will be accessed.",
                    "type": "string"
                }
                ,
                "smtpSecurity": {
                    "description": "This property specifies type of connection security to use when connecting to the outgoing mail server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "starttls"
                        ,
                        "ssl"
                    ]
                }
                ,
                "jdbcDriverType": {
                    "description": "Specifies a supported database driver type. The driver class will be automatically selected based on this selection. We highly recommend using a JDBC 4 driver that is suitable for the current Java platform.",
                    "type": "string"
                    , "enum": [
                        "oraclethin"
                        ,
                        "oracleoci"
                        ,
                        "mysql"
                        ,
                        "db2"
                        ,
                        "sqlserver"
                        ,
                        "postgres"
                        ,
                        "other"
                    ]
                }
                ,
                "smtpConnectionProperties": {
                    "description": "Specifies the connection properties for the smtp server.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "userName": {
                    "description": "The name of the login account to use when connecting to the smtp server. Both username and password must be supplied if this attribute is set.",
                    "type": "string"
                }
                ,
                "transportMechanism": {
                    "description": "The transport mechanism that should be used when communicating with the syslog server.",
                    "type": "string"
                    , "enum": [
                        "unencrypted-udp"
                        ,
                        "unencrypted-tcp"
                        ,
                        "tls-encrypted-tcp"
                    ]
                }
                ,
                "baseURL": {
                    "description": "The base URL of the external server, optionally including port number, for example "https://externalService:9031".",
                    "type": "string"
                }
                ,
                "abandonOnTimeout": {
                    "description": "Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.",
                    "type": "boolean"
                }
                ,
                "jdbcDriverURL": {
                    "description": "Specify the complete JDBC URL which will be used instead of the automatic URL format. You must select type 'other' for the jdbc-driver-type.",
                    "type": "string"
                }
                ,
                "location": {
                    "description": "Specifies the location for the LDAP External Server.",
                    "type": "string"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the AWS service.",
                    "type": "string"
                }
            }
        },
        "external-server-properties": {
            "id": "external-server-properties",
            "description": "External Server properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:external-server:smtp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-ds"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-ds"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:active-directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:jdbc"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:syslog"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-proxy-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:http-proxy"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-proxy-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:opendj"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:ping-one-http"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:http"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:oracle-unified-directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:conjur"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:amazon-aws"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:external-server:vault"
                        ]
                    }
                },
                "maxConnectionAge": {
                    "description": "Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.",
                    "type": "string"
                }
                ,
                "databaseName": {
                    "description": "Specifies which database to connect to. This is ignored if jdbc-driver-url is specified.",
                    "type": "string"
                }
                ,
                "awsAccessKeyID": {
                    "description": "The access key ID that will be used if authentication should use an access key. If this is provided, then an aws-secret-access-key must also be provided.",
                    "type": "string"
                }
                ,
                "serverHostName": {
                    "description": "The host name of the smtp server.",
                    "type": "string"
                }
                ,
                "transactionIsolationLevel": {
                    "description": "This property specifies the default transaction isolation level for connections to this JDBC External Server.",
                    "type": "string"
                    , "enum": [
                        "read-committed"
                        ,
                        "read-uncommitted"
                        ,
                        "repeatable-read"
                        ,
                        "serializable"
                    ]
                }
                ,
                "password": {
                    "description": "The login password for the specified user name. Both username and password must be supplied if this attribute is set.",
                    "type": "string"
                }
                ,
                "maxResponseSize": {
                    "description": "Specifies the maximum response size that should be supported for messages received from the LDAP external server.",
                    "type": "string"
                }
                ,
                "connectionSecurity": {
                    "description": "The mechanism to use to secure communication with the directory server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "healthCheckConnectTimeout": {
                    "description": "Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.",
                    "type": "string"
                }
                ,
                "connectTimeout": {
                    "description": "Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.",
                    "type": "string"
                }
                ,
                "jdbcConnectionProperties": {
                    "description": "Specifies the connection properties for the JDBC datasource.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "hostnameVerificationMethod": {
                    "description": "The mechanism for checking if the hostname in the PingOne ID Token Validator's base-url value matches the name(s) stored inside the X.509 certificate presented by PingOne.",
                    "type": "string"
                    , "enum": [
                        "allow-all"
                        ,
                        "strict"
                    ]
                }
                ,
                "vaultAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Vault server.",
                    "type": "string"
                }
                ,
                "trustStoreType": {
                    "description": "The store type for the specified trust store file. The value should likely be one of "JKS", "PKCS12", or "BCFKS".",
                    "type": "string"
                }
                ,
                "basicAuthenticationPassphraseProvider": {
                    "description": "A passphrase provider that provides access to the password to use to authenticate to the HTTP Proxy External Server.",
                    "type": "string"
                }
                ,
                "responseTimeout": {
                    "description": "Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to PingOne.",
                    "type": "string"
                }
                ,
                "conjurAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Conjur server.",
                    "type": "string"
                }
                ,
                "trustManagerProvider": {
                    "description": "The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.",
                    "type": "string"
                }
                ,
                "initialConnections": {
                    "description": "The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.",
                    "type": "integer"
                }
                ,
                "useAdministrativeOperationControl": {
                    "description": "Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.",
                    "type": "boolean"
                }
                ,
                "sslCertNickname": {
                    "description": "The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.",
                    "type": "string"
                }
                ,
                "defunctConnectionResultCode": {
                    "description": "Specifies the operation result code values that should cause the associated connection should be considered defunct. If an operation fails with one of these result codes, then it will be terminated and an attempt will be made to establish a new connection in its place.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "success"
                            ,
                            "operations-error"
                            ,
                            "protocol-error"
                            ,
                            "time-limit-exceeded"
                            ,
                            "size-limit-exceeded"
                            ,
                            "compare-false"
                            ,
                            "compare-true"
                            ,
                            "auth-method-not-supported"
                            ,
                            "strong-auth-required"
                            ,
                            "referral"
                            ,
                            "admin-limit-exceeded"
                            ,
                            "unavailable-critical-extension"
                            ,
                            "confidentiality-required"
                            ,
                            "sasl-bind-in-progress"
                            ,
                            "no-such-attribute"
                            ,
                            "undefined-attribute-type"
                            ,
                            "inappropriate-matching"
                            ,
                            "constraint-violation"
                            ,
                            "attribute-or-value-exists"
                            ,
                            "invalid-attribute-syntax"
                            ,
                            "no-such-object"
                            ,
                            "alias-problem"
                            ,
                            "invalid-dn-syntax"
                            ,
                            "alias-dereferencing-problem"
                            ,
                            "inappropriate-authentication"
                            ,
                            "invalid-credentials"
                            ,
                            "insufficient-access-rights"
                            ,
                            "busy"
                            ,
                            "unavailable"
                            ,
                            "unwilling-to-perform"
                            ,
                            "loop-detect"
                            ,
                            "sort-control-missing"
                            ,
                            "offset-range-error"
                            ,
                            "naming-violation"
                            ,
                            "object-class-violation"
                            ,
                            "not-allowed-on-nonleaf"
                            ,
                            "not-allowed-on-rdn"
                            ,
                            "entry-already-exists"
                            ,
                            "object-class-mods-prohibited"
                            ,
                            "affects-multiple-dsas"
                            ,
                            "virtual-list-view-error"
                            ,
                            "other"
                            ,
                            "server-down"
                            ,
                            "local-error"
                            ,
                            "encoding-error"
                            ,
                            "decoding-error"
                            ,
                            "timeout"
                            ,
                            "auth-unknown"
                            ,
                            "filter-error"
                            ,
                            "user-canceled"
                            ,
                            "param-error"
                            ,
                            "no-memory"
                            ,
                            "connect-error"
                            ,
                            "not-supported"
                            ,
                            "control-not-found"
                            ,
                            "no-results-returned"
                            ,
                            "more-results-to-return"
                            ,
                            "client-loop"
                            ,
                            "referral-limit-exceeded"
                            ,
                            "canceled"
                            ,
                            "no-such-operation"
                            ,
                            "too-late"
                            ,
                            "cannot-cancel"
                            ,
                            "assertion-failed"
                            ,
                            "authorization-denied"
                            ,
                            "no-operation"
                            ,
                            "interactive-transaction-aborted"
                        ]
                    }
                }
                ,
                "minExpiredConnectionDisconnectInterval": {
                    "description": "Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.",
                    "type": "string"
                }
                ,
                "bindDN": {
                    "description": "The DN to use to bind to the target LDAP server if simple authentication is required.",
                    "type": "string"
                }
                ,
                "authenticationMethod": {
                    "description": "The mechanism to use to authenticate to the target server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "simple"
                        ,
                        "external"
                        ,
                        "inter-server"
                    ]
                }
                ,
                "validationQueryTimeout": {
                    "description": "Specifies the amount of time to wait for a response from the database when executing the validation query, if one is set. If the timeout is exceeded, the Directory Server will drop the connection and obtain a new one. A value of zero indicates no timeout.",
                    "type": "string"
                }
                ,
                "conjurAccountName": {
                    "description": "The name of the account with which the desired secrets are associated.",
                    "type": "string"
                }
                ,
                "validationQuery": {
                    "description": "The SQL query that will be used to validate connections to the database before making them available to the Directory Server.",
                    "type": "string"
                }
                ,
                "smtpTimeout": {
                    "description": "Specifies the maximum length of time that a connection or attempted connection to a SMTP server may take.",
                    "type": "string"
                }
                ,
                "vaultServerBaseURI": {
                    "description": "The base URL needed to access the Vault server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://vault.example.com:8200/".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this External Server",
                    "type": "string"
                }
                ,
                "serverPort": {
                    "description": "The port number where the smtp server listens for requests.",
                    "type": "integer"
                }
                ,
                "passphraseProvider": {
                    "description": "The passphrase provider to use to obtain the login password for the specified user.",
                    "type": "string"
                }
                ,
                "conjurServerBaseURI": {
                    "description": "The base URL needed to access the CyberArk Conjur server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://conjur.example.com:8443/".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "trustStoreFile": {
                    "description": "The path to a file containing the information needed to trust the certificate presented by the Conjur servers.",
                    "type": "string"
                }
                ,
                "keyManagerProvider": {
                    "description": "The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.",
                    "type": "string"
                }
                ,
                "basicAuthenticationUsername": {
                    "description": "The username to use to authenticate to the HTTP Proxy External Server.",
                    "type": "string"
                }
                ,
                "trustStorePin": {
                    "description": "The PIN needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.",
                    "type": "string"
                }
                ,
                "verifyCredentialsMethod": {
                    "description": "The mechanism to use to verify user credentials while ensuring that the ability to process other operations is not impacted by an alternate authorization identity.",
                    "type": "string"
                    , "enum": [
                        "separate-connections"
                        ,
                        "retain-identity-control"
                        ,
                        "bind-on-existing-connections"
                    ]
                }
                ,
                "maxConnections": {
                    "description": "The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.",
                    "type": "integer"
                }
                ,
                "awsSecretAccessKey": {
                    "description": "The secret access key that will be used if authentication should use an access key. If this is provided, then an aws-access-key-id must also be provided.",
                    "type": "string"
                }
                ,
                "awsRegionName": {
                    "description": "The name of the AWS region containing the resources that will be accessed.",
                    "type": "string"
                }
                ,
                "smtpSecurity": {
                    "description": "This property specifies type of connection security to use when connecting to the outgoing mail server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "starttls"
                        ,
                        "ssl"
                    ]
                }
                ,
                "jdbcDriverType": {
                    "description": "Specifies a supported database driver type. The driver class will be automatically selected based on this selection. We highly recommend using a JDBC 4 driver that is suitable for the current Java platform.",
                    "type": "string"
                    , "enum": [
                        "oraclethin"
                        ,
                        "oracleoci"
                        ,
                        "mysql"
                        ,
                        "db2"
                        ,
                        "sqlserver"
                        ,
                        "postgres"
                        ,
                        "other"
                    ]
                }
                ,
                "smtpConnectionProperties": {
                    "description": "Specifies the connection properties for the smtp server.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "userName": {
                    "description": "The name of the login account to use when connecting to the smtp server. Both username and password must be supplied if this attribute is set.",
                    "type": "string"
                }
                ,
                "transportMechanism": {
                    "description": "The transport mechanism that should be used when communicating with the syslog server.",
                    "type": "string"
                    , "enum": [
                        "unencrypted-udp"
                        ,
                        "unencrypted-tcp"
                        ,
                        "tls-encrypted-tcp"
                    ]
                }
                ,
                "baseURL": {
                    "description": "The base URL of the external server, optionally including port number, for example "https://externalService:9031".",
                    "type": "string"
                }
                ,
                "abandonOnTimeout": {
                    "description": "Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.",
                    "type": "boolean"
                }
                ,
                "jdbcDriverURL": {
                    "description": "Specify the complete JDBC URL which will be used instead of the automatic URL format. You must select type 'other' for the jdbc-driver-type.",
                    "type": "string"
                }
                ,
                "location": {
                    "description": "Specifies the location for the LDAP External Server.",
                    "type": "string"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the AWS service.",
                    "type": "string"
                }
            }
        }
    }
}
