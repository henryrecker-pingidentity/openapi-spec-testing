{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/id-token-validators",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all ID Token Validator objects",
                    "type": "id-token-validator-list-response",
                    "nickname": "list-id-token-validators",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new ID Token Validator to the config",
                    "nickname": "add-id-token-validator",
                    "type": "id-token-validator-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "ID Token Validator to add",
                            "name": "add-id-token-validator-request",
                            "type": "add-id-token-validator-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/id-token-validators/{id-token-validator-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single ID Token Validator",
                    "type": "id-token-validator-response",
                    "nickname": "get-id-token-validator",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "id-token-validator-name",
                          "description": "Name of the ID Token Validator",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing ID Token Validator by name, replacing any attributes specified in the request body",
                    "type": "id-token-validator-response",
                    "nickname": "put-id-token-validator",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "id-token-validator-name",
                          "description": "Name of the ID Token Validator",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "ID Token Validator attributes to update",
                            "name": "id-token-validator-properties",
                            "type": "id-token-validator-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing ID Token Validator by name, using a SCIM patch request",
                    "type": "id-token-validator-response",
                    "nickname": "patch-id-token-validator",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "id-token-validator-name",
                          "description": "Name of the ID Token Validator",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the ID Token Validator",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a ID Token Validator",
                    "nickname": "delete-id-token-validator",
                    "parameters": [
                        {
                          "name": "id-token-validator-name",
                          "description": "Name of the ID Token Validator",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/id-token-validators/{id-token-validator-name}/token-claim-validations",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Token Claim Validation objects",
                    "type": "token-claim-validation-list-response",
                    "nickname": "list-token-claim-validations",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "id-token-validator-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Token Claim Validation to the config",
                    "nickname": "add-token-claim-validation",
                    "type": "token-claim-validation-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "id-token-validator-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Token Claim Validation to add",
                            "name": "add-token-claim-validation-request",
                            "type": "add-token-claim-validation-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/id-token-validators/{id-token-validator-name}/token-claim-validations/{token-claim-validation-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Token Claim Validation",
                    "type": "token-claim-validation-response",
                    "nickname": "get-token-claim-validation",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "id-token-validator-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "token-claim-validation-name",
                          "description": "Name of the Token Claim Validation",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Token Claim Validation by name, replacing any attributes specified in the request body",
                    "type": "token-claim-validation-response",
                    "nickname": "put-token-claim-validation",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "id-token-validator-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "token-claim-validation-name",
                          "description": "Name of the Token Claim Validation",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Token Claim Validation attributes to update",
                            "name": "token-claim-validation-properties",
                            "type": "token-claim-validation-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Token Claim Validation by name, using a SCIM patch request",
                    "type": "token-claim-validation-response",
                    "nickname": "patch-token-claim-validation",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "id-token-validator-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "token-claim-validation-name",
                          "description": "Name of the Token Claim Validation",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Token Claim Validation",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Token Claim Validation",
                    "nickname": "delete-token-claim-validation",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "id-token-validator-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "token-claim-validation-name",
                          "description": "Name of the Token Claim Validation",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "id-token-validator-list-response": {
            "id": "id-token-validator-list-response",
            "description": "ID Token Validator list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "id-token-validator-response"
                    }
                }
            }
        },
        "add-id-token-validator-request": {
            "id": "add-id-token-validator-request",
            "description": "A ID Token Validator resource request",
            "required": [
                "validatorName"
            ],
            "properties": {
                "validatorName": {
                    "type": "string",
                    "description": "Name of the new ID Token Validator"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:id-token-validator:ping-one"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:id-token-validator:openid-connect"
                        ]
                    }
                },
                "OpenIDConnectMetadataCacheDuration": {
                    "description": "How often the PingOne ID Token Validator should refresh its stored cache of OpenID Connect-related metadata.",
                    "type": "string"
                }
                ,
                "subjectClaimName": {
                    "description": "The name of the token claim that contains the subject; i.e., the authenticated user.",
                    "type": "string"
                }
                ,
                "signingCertificate": {
                    "description": "Specifies the locally stored certificates that may be used to validate the signature of an incoming ID token. This property may be specified if a JWKS endpoint should not be used to retrieve public signing keys.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "OpenIDConnectProvider": {
                    "description": "Specifies HTTPS connection settings for the PingOne OpenID Connect provider.",
                    "type": "string"
                }
                ,
                "issuerURL": {
                    "description": "Specifies a PingOne base issuer URL.",
                    "type": "string"
                }
                ,
                "jwksEndpointPath": {
                    "description": "The relative path to the JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming ID token. This path is relative to the base_url property defined for the validator's OpenID Connect provider. If jwks-endpoint-path is specified, the OpenID Connect ID Token Validator will not consult locally stored certificates for validating token signatures.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this ID Token Validator",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this ID Token Validator is enabled for use in the Directory Server.",
                    "type": "boolean"
                }
                ,
                "evaluationOrderIndex": {
                    "description": "When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.",
                    "type": "integer"
                }
                ,
                "identityMapper": {
                    "description": "Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.",
                    "type": "string"
                }
                ,
                "jwksCacheDuration": {
                    "description": "How often the ID Token Validator should refresh its cache of JWKS token signing keys.",
                    "type": "string"
                }
                ,
                "allowedSigningAlgorithm": {
                    "description": "Specifies an allow list of JWT signing algorithms that will be accepted by the OpenID Connect ID Token Validator.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "RS256"
                            ,
                            "RS384"
                            ,
                            "RS512"
                            ,
                            "ES256"
                            ,
                            "ES384"
                            ,
                            "ES512"
                        ]
                    }
                }
                ,
                "clockSkewGracePeriod": {
                    "description": "Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.",
                    "type": "string"
                }
            }
        },
        "id-token-validator-response": {
            "id": "id-token-validator-response",
            "description": "A ID Token Validator resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:id-token-validator:ping-one"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:id-token-validator:openid-connect"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the ID Token Validator"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "OpenIDConnectMetadataCacheDuration": {
                    "description": "How often the PingOne ID Token Validator should refresh its stored cache of OpenID Connect-related metadata.",
                    "type": "string"
                }
                ,
                "subjectClaimName": {
                    "description": "The name of the token claim that contains the subject; i.e., the authenticated user.",
                    "type": "string"
                }
                ,
                "signingCertificate": {
                    "description": "Specifies the locally stored certificates that may be used to validate the signature of an incoming ID token. This property may be specified if a JWKS endpoint should not be used to retrieve public signing keys.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "OpenIDConnectProvider": {
                    "description": "Specifies HTTPS connection settings for the PingOne OpenID Connect provider.",
                    "type": "string"
                }
                ,
                "issuerURL": {
                    "description": "Specifies a PingOne base issuer URL.",
                    "type": "string"
                }
                ,
                "jwksEndpointPath": {
                    "description": "The relative path to the JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming ID token. This path is relative to the base_url property defined for the validator's OpenID Connect provider. If jwks-endpoint-path is specified, the OpenID Connect ID Token Validator will not consult locally stored certificates for validating token signatures.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this ID Token Validator",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this ID Token Validator is enabled for use in the Directory Server.",
                    "type": "boolean"
                }
                ,
                "evaluationOrderIndex": {
                    "description": "When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.",
                    "type": "integer"
                }
                ,
                "identityMapper": {
                    "description": "Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.",
                    "type": "string"
                }
                ,
                "jwksCacheDuration": {
                    "description": "How often the ID Token Validator should refresh its cache of JWKS token signing keys.",
                    "type": "string"
                }
                ,
                "allowedSigningAlgorithm": {
                    "description": "Specifies an allow list of JWT signing algorithms that will be accepted by the OpenID Connect ID Token Validator.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "RS256"
                            ,
                            "RS384"
                            ,
                            "RS512"
                            ,
                            "ES256"
                            ,
                            "ES384"
                            ,
                            "ES512"
                        ]
                    }
                }
                ,
                "clockSkewGracePeriod": {
                    "description": "Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.",
                    "type": "string"
                }
            }
        },
        "id-token-validator-properties": {
            "id": "id-token-validator-properties",
            "description": "ID Token Validator properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:id-token-validator:ping-one"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:id-token-validator:openid-connect"
                        ]
                    }
                },
                "OpenIDConnectMetadataCacheDuration": {
                    "description": "How often the PingOne ID Token Validator should refresh its stored cache of OpenID Connect-related metadata.",
                    "type": "string"
                }
                ,
                "subjectClaimName": {
                    "description": "The name of the token claim that contains the subject; i.e., the authenticated user.",
                    "type": "string"
                }
                ,
                "signingCertificate": {
                    "description": "Specifies the locally stored certificates that may be used to validate the signature of an incoming ID token. This property may be specified if a JWKS endpoint should not be used to retrieve public signing keys.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "OpenIDConnectProvider": {
                    "description": "Specifies HTTPS connection settings for the PingOne OpenID Connect provider.",
                    "type": "string"
                }
                ,
                "issuerURL": {
                    "description": "Specifies a PingOne base issuer URL.",
                    "type": "string"
                }
                ,
                "jwksEndpointPath": {
                    "description": "The relative path to the JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming ID token. This path is relative to the base_url property defined for the validator's OpenID Connect provider. If jwks-endpoint-path is specified, the OpenID Connect ID Token Validator will not consult locally stored certificates for validating token signatures.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this ID Token Validator",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this ID Token Validator is enabled for use in the Directory Server.",
                    "type": "boolean"
                }
                ,
                "evaluationOrderIndex": {
                    "description": "When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.",
                    "type": "integer"
                }
                ,
                "identityMapper": {
                    "description": "Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.",
                    "type": "string"
                }
                ,
                "jwksCacheDuration": {
                    "description": "How often the ID Token Validator should refresh its cache of JWKS token signing keys.",
                    "type": "string"
                }
                ,
                "allowedSigningAlgorithm": {
                    "description": "Specifies an allow list of JWT signing algorithms that will be accepted by the OpenID Connect ID Token Validator.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "RS256"
                            ,
                            "RS384"
                            ,
                            "RS512"
                            ,
                            "ES256"
                            ,
                            "ES384"
                            ,
                            "ES512"
                        ]
                    }
                }
                ,
                "clockSkewGracePeriod": {
                    "description": "Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.",
                    "type": "string"
                }
            }
        }
        ,
        "token-claim-validation-list-response": {
            "id": "token-claim-validation-list-response",
            "description": "Token Claim Validation list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "token-claim-validation-response"
                    }
                }
            }
        },
        "add-token-claim-validation-request": {
            "id": "add-token-claim-validation-request",
            "description": "A Token Claim Validation resource request",
            "required": [
                "validationName"
            ],
            "properties": {
                "validationName": {
                    "type": "string",
                    "description": "Name of the new Token Claim Validation"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string-array"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:boolean"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string"
                        ]
                    }
                },
                "claimName": {
                    "description": "The name of the claim to be validated.",
                    "type": "string"
                }
                ,
                "allRequiredValue": {
                    "description": "The set of all values that the claim must have to be considered valid.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "anyRequiredValue": {
                    "description": "The set of values that the claim may have to be considered valid.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Token Claim Validation",
                    "type": "string"
                }
                ,
                "requiredValue": {
                    "description": "Specifies the boolean claim's required value.",
                    "type": "string"
                    , "enum": [
                        "true"
                        ,
                        "false"
                    ]
                }
            }
        },
        "token-claim-validation-response": {
            "id": "token-claim-validation-response",
            "description": "A Token Claim Validation resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string-array"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:boolean"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Token Claim Validation"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "claimName": {
                    "description": "The name of the claim to be validated.",
                    "type": "string"
                }
                ,
                "allRequiredValue": {
                    "description": "The set of all values that the claim must have to be considered valid.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "anyRequiredValue": {
                    "description": "The set of values that the claim may have to be considered valid.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Token Claim Validation",
                    "type": "string"
                }
                ,
                "requiredValue": {
                    "description": "Specifies the boolean claim's required value.",
                    "type": "string"
                    , "enum": [
                        "true"
                        ,
                        "false"
                    ]
                }
            }
        },
        "token-claim-validation-properties": {
            "id": "token-claim-validation-properties",
            "description": "Token Claim Validation properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string-array"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:boolean"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string"
                        ]
                    }
                },
                "claimName": {
                    "description": "The name of the claim to be validated.",
                    "type": "string"
                }
                ,
                "allRequiredValue": {
                    "description": "The set of all values that the claim must have to be considered valid.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "anyRequiredValue": {
                    "description": "The set of values that the claim may have to be considered valid.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Token Claim Validation",
                    "type": "string"
                }
                ,
                "requiredValue": {
                    "description": "Specifies the boolean claim's required value.",
                    "type": "string"
                    , "enum": [
                        "true"
                        ,
                        "false"
                    ]
                }
            }
        }
    }
}
