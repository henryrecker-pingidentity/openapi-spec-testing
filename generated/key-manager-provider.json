{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/key-manager-providers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Key Manager Provider objects",
                    "type": "key-manager-provider-list-response",
                    "nickname": "list-key-manager-providers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Key Manager Provider to the config",
                    "nickname": "add-key-manager-provider",
                    "type": "key-manager-provider-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Key Manager Provider to add",
                            "name": "add-key-manager-provider-request",
                            "type": "add-key-manager-provider-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/key-manager-providers/{key-manager-provider-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Key Manager Provider",
                    "type": "key-manager-provider-response",
                    "nickname": "get-key-manager-provider",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "key-manager-provider-name",
                          "description": "Name of the Key Manager Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Key Manager Provider by name, replacing any attributes specified in the request body",
                    "type": "key-manager-provider-response",
                    "nickname": "put-key-manager-provider",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "key-manager-provider-name",
                          "description": "Name of the Key Manager Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Key Manager Provider attributes to update",
                            "name": "key-manager-provider-properties",
                            "type": "key-manager-provider-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Key Manager Provider by name, using a SCIM patch request",
                    "type": "key-manager-provider-response",
                    "nickname": "patch-key-manager-provider",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "key-manager-provider-name",
                          "description": "Name of the Key Manager Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Key Manager Provider",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Key Manager Provider",
                    "nickname": "delete-key-manager-provider",
                    "parameters": [
                        {
                          "name": "key-manager-provider-name",
                          "description": "Name of the Key Manager Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "key-manager-provider-list-response": {
            "id": "key-manager-provider-list-response",
            "description": "Key Manager Provider list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "key-manager-provider-response"
                    }
                }
            }
        },
        "add-key-manager-provider-request": {
            "id": "add-key-manager-provider-request",
            "description": "A Key Manager Provider resource request",
            "required": [
                "providerName"
            ],
            "properties": {
                "providerName": {
                    "type": "string",
                    "description": "Name of the new Key Manager Provider"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:file-based"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:pkcs11"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:third-party"
                        ]
                    }
                },
                "keyStoreType": {
                    "description": "Specifies the format for the data in the key store file.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Key Manager Provider.",
                    "type": "string"
                }
                ,
                "keyStoreFile": {
                    "description": "Specifies the path to the file that contains the private key information. This may be an absolute path, or a path that is relative to the Directory Server instance root.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Key Manager Provider",
                    "type": "string"
                }
                ,
                "privateKeyPinFile": {
                    "description": "Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Key Manager Provider is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Key Manager Provider. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "keyStorePin": {
                    "description": "Specifies the PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "privateKeyPinPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "keyStorePinPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "keyStorePinFile": {
                    "description": "Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "pkcs11ProviderClass": {
                    "description": "The fully-qualified name of the Java security provider class that implements support for interacting with PKCS #11 tokens.",
                    "type": "string"
                }
                ,
                "pkcs11KeyStoreType": {
                    "description": "The key store type to use when obtaining an instance of a key store for interacting with a PKCS #11 token.",
                    "type": "string"
                }
                ,
                "privateKeyPin": {
                    "description": "Specifies the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "pkcs11ProviderConfigurationFile": {
                    "description": "The path to the file to use to configure the security provider that implements support for interacting with PKCS #11 tokens.",
                    "type": "string"
                }
            }
        },
        "key-manager-provider-response": {
            "id": "key-manager-provider-response",
            "description": "A Key Manager Provider resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:file-based"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:pkcs11"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:third-party"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Key Manager Provider"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "keyStoreType": {
                    "description": "Specifies the format for the data in the key store file.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Key Manager Provider.",
                    "type": "string"
                }
                ,
                "keyStoreFile": {
                    "description": "Specifies the path to the file that contains the private key information. This may be an absolute path, or a path that is relative to the Directory Server instance root.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Key Manager Provider",
                    "type": "string"
                }
                ,
                "privateKeyPinFile": {
                    "description": "Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Key Manager Provider is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Key Manager Provider. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "keyStorePin": {
                    "description": "Specifies the PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "privateKeyPinPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "keyStorePinPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "keyStorePinFile": {
                    "description": "Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "pkcs11ProviderClass": {
                    "description": "The fully-qualified name of the Java security provider class that implements support for interacting with PKCS #11 tokens.",
                    "type": "string"
                }
                ,
                "pkcs11KeyStoreType": {
                    "description": "The key store type to use when obtaining an instance of a key store for interacting with a PKCS #11 token.",
                    "type": "string"
                }
                ,
                "privateKeyPin": {
                    "description": "Specifies the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "pkcs11ProviderConfigurationFile": {
                    "description": "The path to the file to use to configure the security provider that implements support for interacting with PKCS #11 tokens.",
                    "type": "string"
                }
            }
        },
        "key-manager-provider-properties": {
            "id": "key-manager-provider-properties",
            "description": "Key Manager Provider properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:file-based"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:pkcs11"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:third-party"
                        ]
                    }
                },
                "keyStoreType": {
                    "description": "Specifies the format for the data in the key store file.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Key Manager Provider.",
                    "type": "string"
                }
                ,
                "keyStoreFile": {
                    "description": "Specifies the path to the file that contains the private key information. This may be an absolute path, or a path that is relative to the Directory Server instance root.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Key Manager Provider",
                    "type": "string"
                }
                ,
                "privateKeyPinFile": {
                    "description": "Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Key Manager Provider is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Key Manager Provider. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "keyStorePin": {
                    "description": "Specifies the PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "privateKeyPinPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "keyStorePinPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "keyStorePinFile": {
                    "description": "Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider.",
                    "type": "string"
                }
                ,
                "pkcs11ProviderClass": {
                    "description": "The fully-qualified name of the Java security provider class that implements support for interacting with PKCS #11 tokens.",
                    "type": "string"
                }
                ,
                "pkcs11KeyStoreType": {
                    "description": "The key store type to use when obtaining an instance of a key store for interacting with a PKCS #11 token.",
                    "type": "string"
                }
                ,
                "privateKeyPin": {
                    "description": "Specifies the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.",
                    "type": "string"
                }
                ,
                "pkcs11ProviderConfigurationFile": {
                    "description": "The path to the file to use to configure the security provider that implements support for interacting with PKCS #11 tokens.",
                    "type": "string"
                }
            }
        }
    }
}
