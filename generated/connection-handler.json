{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/connection-handlers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Connection Handler objects",
                    "type": "connection-handler-list-response",
                    "nickname": "list-connection-handlers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Connection Handler to the config",
                    "nickname": "add-connection-handler",
                    "type": "connection-handler-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Connection Handler to add",
                            "name": "add-connection-handler-request",
                            "type": "add-connection-handler-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/connection-handlers/{connection-handler-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Connection Handler",
                    "type": "connection-handler-response",
                    "nickname": "get-connection-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "connection-handler-name",
                          "description": "Name of the Connection Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Connection Handler by name, replacing any attributes specified in the request body",
                    "type": "connection-handler-response",
                    "nickname": "put-connection-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "connection-handler-name",
                          "description": "Name of the Connection Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Connection Handler attributes to update",
                            "name": "connection-handler-properties",
                            "type": "connection-handler-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Connection Handler by name, using a SCIM patch request",
                    "type": "connection-handler-response",
                    "nickname": "patch-connection-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "connection-handler-name",
                          "description": "Name of the Connection Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Connection Handler",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Connection Handler",
                    "nickname": "delete-connection-handler",
                    "parameters": [
                        {
                          "name": "connection-handler-name",
                          "description": "Name of the Connection Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "connection-handler-list-response": {
            "id": "connection-handler-list-response",
            "description": "Connection Handler list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "connection-handler-response"
                    }
                }
            }
        },
        "add-connection-handler-request": {
            "id": "add-connection-handler-request",
            "description": "A Connection Handler resource request",
            "required": [
                "handlerName"
            ],
            "properties": {
                "handlerName": {
                    "type": "string",
                    "description": "Name of the new Connection Handler"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:jmx"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldif"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:http"
                        ]
                    }
                },
                "correlationIDRequestHeader": {
                    "description": "Specifies the set of HTTP request headers that may contain a value to be used as the correlation ID. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numRequestHandlers": {
                    "description": "Specifies the number of request handlers that are used to read requests from clients.",
                    "type": "integer"
                }
                ,
                "enableMultipartMIMEParameters": {
                    "description": "Determines whether request form parameters submitted in multipart/ form-data (RFC 2388) format should be processed as request parameters.",
                    "type": "boolean"
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for all requests.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Connection Handler",
                    "type": "string"
                }
                ,
                "httpRequestHeaderSize": {
                    "description": "Specifies the maximum buffer size of an http request including the request uri and all of the request headers.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Connection Handler is enabled.",
                    "type": "boolean"
                }
                ,
                "idleTimeLimit": {
                    "description": "Specifies the maximum idle time for a connection. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.",
                    "type": "string"
                }
                ,
                "lowResourcesConnectionThreshold": {
                    "description": "Specifies the number of connections, which if exceeded, places this handler in a low resource state where a different idle time limit is applied on the connections.",
                    "type": "integer"
                }
                ,
                "keyManagerProvider": {
                    "description": "Specifies the name of the key manager that should be used with this JMX Connection Handler .",
                    "type": "string"
                }
                ,
                "listenAddress": {
                    "description": "Specifies the address or set of addresses on which this LDAP Connection Handler should listen for connections from LDAP clients.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "ldifDirectory": {
                    "description": "Specifies the path to the directory in which the LDIF files should be placed.",
                    "type": "string"
                }
                ,
                "correlationIDResponseHeader": {
                    "description": "Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "string"
                }
                ,
                "acceptBacklog": {
                    "description": "Specifies the maximum number of pending connection attempts that are allowed to queue up in the accept backlog before the server starts rejecting new connection attempts.",
                    "type": "integer"
                }
                ,
                "autoAuthenticateUsingClientCertificate": {
                    "description": "Indicates whether to attempt to automatically authenticate a client connection that has established a secure communication channel (using either SSL or StartTLS) and presented its own client certificate. Generally, clients should use the SASL EXTERNAL mechanism to authenticate using a client certificate, but some clients may not support that capability and/or may expect automatic authentication.",
                    "type": "boolean"
                }
                ,
                "lowResourcesIdleTimeLimit": {
                    "description": "Specifies the maximum idle time for a connection when this handler is in a low resource state as defined by low-resource-connections. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.",
                    "type": "string"
                }
                ,
                "closeConnectionsOnExplicitGC": {
                    "description": "Indicates whether all connections associated with this LDAP Connection Handler should be closed before an explicit garbage collection is performed to allow clients to route requests to another server.",
                    "type": "boolean"
                }
                ,
                "webApplicationExtension": {
                    "description": "Specifies information about web applications that will be provided via this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "useTCPKeepAlive": {
                    "description": "Indicates whether the LDAP Connection Handler should use TCP keep-alive.",
                    "type": "boolean"
                }
                ,
                "allowTCPReuseAddress": {
                    "description": "Indicates whether the server should attempt to reuse socket descriptors. This may be useful in environments with a high rate of connection establishment and termination.",
                    "type": "boolean"
                }
                ,
                "httpOperationLogPublisher": {
                    "description": "Specifies the set of HTTP operation loggers that should be used to log information about requests and responses for operations processed through this HTTP Connection Handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "maxRequestSize": {
                    "description": "Specifies the size of the largest LDAP request message that will be allowed by this LDAP Connection handler.",
                    "type": "string"
                }
                ,
                "useForwardedHeaders": {
                    "description": "Indicates whether to use "Forwarded" and "X-Forwarded-*" request headers to override corresponding HTTP request information available during request processing.",
                    "type": "boolean"
                }
                ,
                "trustManagerProvider": {
                    "description": "Specifies the name of the trust manager that should be used with the LDAP Connection Handler .",
                    "type": "string"
                }
                ,
                "httpServletExtension": {
                    "description": "Specifies information about servlets that will be provided via this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sslCertNickname": {
                    "description": "Specifies the nickname (also called the alias) of the certificate that the JMX Connection Handler should use when performing SSL communication.",
                    "type": "string"
                }
                ,
                "useCorrelationIDHeader": {
                    "description": "If enabled, a correlation ID header will be added to outgoing HTTP responses.",
                    "type": "boolean"
                }
                ,
                "allowedClient": {
                    "description": "Specifies a set of address masks that determines the addresses of the clients that are allowed to establish connections to this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numAcceptHandlers": {
                    "description": "Specifies the number of threads that are used to accept new client connections, and to perform any initial preparation on those connections that may be needed before the connection can be used to read requests and send responses.",
                    "type": "integer"
                }
                ,
                "useSSL": {
                    "description": "Indicates whether the JMX Connection Handler should use SSL.",
                    "type": "boolean"
                }
                ,
                "sendRejectionNotice": {
                    "description": "Indicates whether the LDAP Connection Handler should send a notice of disconnection extended response message to the client if a new connection is rejected for some reason.",
                    "type": "boolean"
                }
                ,
                "maxBlockedWriteTimeLimit": {
                    "description": "Specifies the maximum length of time that attempts to write data to LDAP clients should be allowed to block.",
                    "type": "string"
                }
                ,
                "closeConnectionsWhenUnavailable": {
                    "description": "Indicates whether all connections associated with this LDAP Connection Handler should be closed and no new connections accepted when the server has determined that it is "unavailable." This allows clients (or a network load balancer) to route requests to another server.",
                    "type": "boolean"
                }
                ,
                "pollInterval": {
                    "description": "Specifies how frequently the LDIF connection handler should check the LDIF directory to determine whether a new LDIF file has been added.",
                    "type": "string"
                }
                ,
                "allowStartTLS": {
                    "description": "Indicates whether clients are allowed to use StartTLS.",
                    "type": "boolean"
                }
                ,
                "failedBindResponseDelay": {
                    "description": "Specifies the length of time that the server should delay the response to non-successful bind operations. A value of zero milliseconds indicates that non-successful bind operations should not be delayed.",
                    "type": "string"
                }
                ,
                "keepStats": {
                    "description": "Indicates whether to enable statistics collection for this connection handler.",
                    "type": "boolean"
                }
                ,
                "sslClientAuthPolicy": {
                    "description": "Specifies the policy that the LDAP Connection Handler should use regarding client SSL certificates.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "optional"
                        ,
                        "required"
                    ]
                }
                ,
                "sslProtocol": {
                    "description": "Specifies the names of the SSL protocols that are allowed for use in SSL or StartTLS communication. The set of supported ssl protocols can be viewed via the ssl context monitor entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "deniedClient": {
                    "description": "Specifies a set of address masks that determines the addresses of the clients that are not allowed to establish connections to this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowLDAPV2": {
                    "description": "Indicates whether connections from LDAPv2 clients are allowed.",
                    "type": "boolean"
                }
                ,
                "maxCancelHandlers": {
                    "description": "Specifies the maximum number of threads that are used to process cancel and abandon requests from clients.",
                    "type": "integer"
                }
                ,
                "sslCipherSuite": {
                    "description": "Specifies the names of the SSL cipher suites that are allowed for use in SSL or StartTLS communication. The set of supported cipher suites can be viewed via the ssl context monitor entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "listenPort": {
                    "description": "Specifies the port number on which the JMX Connection Handler will listen for connections from clients.",
                    "type": "integer"
                }
            }
        },
        "connection-handler-response": {
            "id": "connection-handler-response",
            "description": "A Connection Handler resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:jmx"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldif"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:http"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Connection Handler"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "correlationIDRequestHeader": {
                    "description": "Specifies the set of HTTP request headers that may contain a value to be used as the correlation ID. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numRequestHandlers": {
                    "description": "Specifies the number of request handlers that are used to read requests from clients.",
                    "type": "integer"
                }
                ,
                "enableMultipartMIMEParameters": {
                    "description": "Determines whether request form parameters submitted in multipart/ form-data (RFC 2388) format should be processed as request parameters.",
                    "type": "boolean"
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for all requests.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Connection Handler",
                    "type": "string"
                }
                ,
                "httpRequestHeaderSize": {
                    "description": "Specifies the maximum buffer size of an http request including the request uri and all of the request headers.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Connection Handler is enabled.",
                    "type": "boolean"
                }
                ,
                "idleTimeLimit": {
                    "description": "Specifies the maximum idle time for a connection. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.",
                    "type": "string"
                }
                ,
                "lowResourcesConnectionThreshold": {
                    "description": "Specifies the number of connections, which if exceeded, places this handler in a low resource state where a different idle time limit is applied on the connections.",
                    "type": "integer"
                }
                ,
                "keyManagerProvider": {
                    "description": "Specifies the name of the key manager that should be used with this JMX Connection Handler .",
                    "type": "string"
                }
                ,
                "listenAddress": {
                    "description": "Specifies the address or set of addresses on which this LDAP Connection Handler should listen for connections from LDAP clients.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "ldifDirectory": {
                    "description": "Specifies the path to the directory in which the LDIF files should be placed.",
                    "type": "string"
                }
                ,
                "correlationIDResponseHeader": {
                    "description": "Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "string"
                }
                ,
                "acceptBacklog": {
                    "description": "Specifies the maximum number of pending connection attempts that are allowed to queue up in the accept backlog before the server starts rejecting new connection attempts.",
                    "type": "integer"
                }
                ,
                "autoAuthenticateUsingClientCertificate": {
                    "description": "Indicates whether to attempt to automatically authenticate a client connection that has established a secure communication channel (using either SSL or StartTLS) and presented its own client certificate. Generally, clients should use the SASL EXTERNAL mechanism to authenticate using a client certificate, but some clients may not support that capability and/or may expect automatic authentication.",
                    "type": "boolean"
                }
                ,
                "lowResourcesIdleTimeLimit": {
                    "description": "Specifies the maximum idle time for a connection when this handler is in a low resource state as defined by low-resource-connections. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.",
                    "type": "string"
                }
                ,
                "closeConnectionsOnExplicitGC": {
                    "description": "Indicates whether all connections associated with this LDAP Connection Handler should be closed before an explicit garbage collection is performed to allow clients to route requests to another server.",
                    "type": "boolean"
                }
                ,
                "webApplicationExtension": {
                    "description": "Specifies information about web applications that will be provided via this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "useTCPKeepAlive": {
                    "description": "Indicates whether the LDAP Connection Handler should use TCP keep-alive.",
                    "type": "boolean"
                }
                ,
                "allowTCPReuseAddress": {
                    "description": "Indicates whether the server should attempt to reuse socket descriptors. This may be useful in environments with a high rate of connection establishment and termination.",
                    "type": "boolean"
                }
                ,
                "httpOperationLogPublisher": {
                    "description": "Specifies the set of HTTP operation loggers that should be used to log information about requests and responses for operations processed through this HTTP Connection Handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "maxRequestSize": {
                    "description": "Specifies the size of the largest LDAP request message that will be allowed by this LDAP Connection handler.",
                    "type": "string"
                }
                ,
                "useForwardedHeaders": {
                    "description": "Indicates whether to use "Forwarded" and "X-Forwarded-*" request headers to override corresponding HTTP request information available during request processing.",
                    "type": "boolean"
                }
                ,
                "trustManagerProvider": {
                    "description": "Specifies the name of the trust manager that should be used with the LDAP Connection Handler .",
                    "type": "string"
                }
                ,
                "httpServletExtension": {
                    "description": "Specifies information about servlets that will be provided via this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sslCertNickname": {
                    "description": "Specifies the nickname (also called the alias) of the certificate that the JMX Connection Handler should use when performing SSL communication.",
                    "type": "string"
                }
                ,
                "useCorrelationIDHeader": {
                    "description": "If enabled, a correlation ID header will be added to outgoing HTTP responses.",
                    "type": "boolean"
                }
                ,
                "allowedClient": {
                    "description": "Specifies a set of address masks that determines the addresses of the clients that are allowed to establish connections to this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numAcceptHandlers": {
                    "description": "Specifies the number of threads that are used to accept new client connections, and to perform any initial preparation on those connections that may be needed before the connection can be used to read requests and send responses.",
                    "type": "integer"
                }
                ,
                "useSSL": {
                    "description": "Indicates whether the JMX Connection Handler should use SSL.",
                    "type": "boolean"
                }
                ,
                "sendRejectionNotice": {
                    "description": "Indicates whether the LDAP Connection Handler should send a notice of disconnection extended response message to the client if a new connection is rejected for some reason.",
                    "type": "boolean"
                }
                ,
                "maxBlockedWriteTimeLimit": {
                    "description": "Specifies the maximum length of time that attempts to write data to LDAP clients should be allowed to block.",
                    "type": "string"
                }
                ,
                "closeConnectionsWhenUnavailable": {
                    "description": "Indicates whether all connections associated with this LDAP Connection Handler should be closed and no new connections accepted when the server has determined that it is "unavailable." This allows clients (or a network load balancer) to route requests to another server.",
                    "type": "boolean"
                }
                ,
                "pollInterval": {
                    "description": "Specifies how frequently the LDIF connection handler should check the LDIF directory to determine whether a new LDIF file has been added.",
                    "type": "string"
                }
                ,
                "allowStartTLS": {
                    "description": "Indicates whether clients are allowed to use StartTLS.",
                    "type": "boolean"
                }
                ,
                "failedBindResponseDelay": {
                    "description": "Specifies the length of time that the server should delay the response to non-successful bind operations. A value of zero milliseconds indicates that non-successful bind operations should not be delayed.",
                    "type": "string"
                }
                ,
                "keepStats": {
                    "description": "Indicates whether to enable statistics collection for this connection handler.",
                    "type": "boolean"
                }
                ,
                "sslClientAuthPolicy": {
                    "description": "Specifies the policy that the LDAP Connection Handler should use regarding client SSL certificates.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "optional"
                        ,
                        "required"
                    ]
                }
                ,
                "sslProtocol": {
                    "description": "Specifies the names of the SSL protocols that are allowed for use in SSL or StartTLS communication. The set of supported ssl protocols can be viewed via the ssl context monitor entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "deniedClient": {
                    "description": "Specifies a set of address masks that determines the addresses of the clients that are not allowed to establish connections to this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowLDAPV2": {
                    "description": "Indicates whether connections from LDAPv2 clients are allowed.",
                    "type": "boolean"
                }
                ,
                "maxCancelHandlers": {
                    "description": "Specifies the maximum number of threads that are used to process cancel and abandon requests from clients.",
                    "type": "integer"
                }
                ,
                "sslCipherSuite": {
                    "description": "Specifies the names of the SSL cipher suites that are allowed for use in SSL or StartTLS communication. The set of supported cipher suites can be viewed via the ssl context monitor entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "listenPort": {
                    "description": "Specifies the port number on which the JMX Connection Handler will listen for connections from clients.",
                    "type": "integer"
                }
            }
        },
        "connection-handler-properties": {
            "id": "connection-handler-properties",
            "description": "Connection Handler properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:jmx"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldif"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:connection-handler:http"
                        ]
                    }
                },
                "correlationIDRequestHeader": {
                    "description": "Specifies the set of HTTP request headers that may contain a value to be used as the correlation ID. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numRequestHandlers": {
                    "description": "Specifies the number of request handlers that are used to read requests from clients.",
                    "type": "integer"
                }
                ,
                "enableMultipartMIMEParameters": {
                    "description": "Determines whether request form parameters submitted in multipart/ form-data (RFC 2388) format should be processed as request parameters.",
                    "type": "boolean"
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for all requests.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Connection Handler",
                    "type": "string"
                }
                ,
                "httpRequestHeaderSize": {
                    "description": "Specifies the maximum buffer size of an http request including the request uri and all of the request headers.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Connection Handler is enabled.",
                    "type": "boolean"
                }
                ,
                "idleTimeLimit": {
                    "description": "Specifies the maximum idle time for a connection. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.",
                    "type": "string"
                }
                ,
                "lowResourcesConnectionThreshold": {
                    "description": "Specifies the number of connections, which if exceeded, places this handler in a low resource state where a different idle time limit is applied on the connections.",
                    "type": "integer"
                }
                ,
                "keyManagerProvider": {
                    "description": "Specifies the name of the key manager that should be used with this JMX Connection Handler .",
                    "type": "string"
                }
                ,
                "listenAddress": {
                    "description": "Specifies the address or set of addresses on which this LDAP Connection Handler should listen for connections from LDAP clients.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "ldifDirectory": {
                    "description": "Specifies the path to the directory in which the LDIF files should be placed.",
                    "type": "string"
                }
                ,
                "correlationIDResponseHeader": {
                    "description": "Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "string"
                }
                ,
                "acceptBacklog": {
                    "description": "Specifies the maximum number of pending connection attempts that are allowed to queue up in the accept backlog before the server starts rejecting new connection attempts.",
                    "type": "integer"
                }
                ,
                "autoAuthenticateUsingClientCertificate": {
                    "description": "Indicates whether to attempt to automatically authenticate a client connection that has established a secure communication channel (using either SSL or StartTLS) and presented its own client certificate. Generally, clients should use the SASL EXTERNAL mechanism to authenticate using a client certificate, but some clients may not support that capability and/or may expect automatic authentication.",
                    "type": "boolean"
                }
                ,
                "lowResourcesIdleTimeLimit": {
                    "description": "Specifies the maximum idle time for a connection when this handler is in a low resource state as defined by low-resource-connections. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.",
                    "type": "string"
                }
                ,
                "closeConnectionsOnExplicitGC": {
                    "description": "Indicates whether all connections associated with this LDAP Connection Handler should be closed before an explicit garbage collection is performed to allow clients to route requests to another server.",
                    "type": "boolean"
                }
                ,
                "webApplicationExtension": {
                    "description": "Specifies information about web applications that will be provided via this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "useTCPKeepAlive": {
                    "description": "Indicates whether the LDAP Connection Handler should use TCP keep-alive.",
                    "type": "boolean"
                }
                ,
                "allowTCPReuseAddress": {
                    "description": "Indicates whether the server should attempt to reuse socket descriptors. This may be useful in environments with a high rate of connection establishment and termination.",
                    "type": "boolean"
                }
                ,
                "httpOperationLogPublisher": {
                    "description": "Specifies the set of HTTP operation loggers that should be used to log information about requests and responses for operations processed through this HTTP Connection Handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "maxRequestSize": {
                    "description": "Specifies the size of the largest LDAP request message that will be allowed by this LDAP Connection handler.",
                    "type": "string"
                }
                ,
                "useForwardedHeaders": {
                    "description": "Indicates whether to use "Forwarded" and "X-Forwarded-*" request headers to override corresponding HTTP request information available during request processing.",
                    "type": "boolean"
                }
                ,
                "trustManagerProvider": {
                    "description": "Specifies the name of the trust manager that should be used with the LDAP Connection Handler .",
                    "type": "string"
                }
                ,
                "httpServletExtension": {
                    "description": "Specifies information about servlets that will be provided via this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sslCertNickname": {
                    "description": "Specifies the nickname (also called the alias) of the certificate that the JMX Connection Handler should use when performing SSL communication.",
                    "type": "string"
                }
                ,
                "useCorrelationIDHeader": {
                    "description": "If enabled, a correlation ID header will be added to outgoing HTTP responses.",
                    "type": "boolean"
                }
                ,
                "allowedClient": {
                    "description": "Specifies a set of address masks that determines the addresses of the clients that are allowed to establish connections to this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numAcceptHandlers": {
                    "description": "Specifies the number of threads that are used to accept new client connections, and to perform any initial preparation on those connections that may be needed before the connection can be used to read requests and send responses.",
                    "type": "integer"
                }
                ,
                "useSSL": {
                    "description": "Indicates whether the JMX Connection Handler should use SSL.",
                    "type": "boolean"
                }
                ,
                "sendRejectionNotice": {
                    "description": "Indicates whether the LDAP Connection Handler should send a notice of disconnection extended response message to the client if a new connection is rejected for some reason.",
                    "type": "boolean"
                }
                ,
                "maxBlockedWriteTimeLimit": {
                    "description": "Specifies the maximum length of time that attempts to write data to LDAP clients should be allowed to block.",
                    "type": "string"
                }
                ,
                "closeConnectionsWhenUnavailable": {
                    "description": "Indicates whether all connections associated with this LDAP Connection Handler should be closed and no new connections accepted when the server has determined that it is "unavailable." This allows clients (or a network load balancer) to route requests to another server.",
                    "type": "boolean"
                }
                ,
                "pollInterval": {
                    "description": "Specifies how frequently the LDIF connection handler should check the LDIF directory to determine whether a new LDIF file has been added.",
                    "type": "string"
                }
                ,
                "allowStartTLS": {
                    "description": "Indicates whether clients are allowed to use StartTLS.",
                    "type": "boolean"
                }
                ,
                "failedBindResponseDelay": {
                    "description": "Specifies the length of time that the server should delay the response to non-successful bind operations. A value of zero milliseconds indicates that non-successful bind operations should not be delayed.",
                    "type": "string"
                }
                ,
                "keepStats": {
                    "description": "Indicates whether to enable statistics collection for this connection handler.",
                    "type": "boolean"
                }
                ,
                "sslClientAuthPolicy": {
                    "description": "Specifies the policy that the LDAP Connection Handler should use regarding client SSL certificates.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "optional"
                        ,
                        "required"
                    ]
                }
                ,
                "sslProtocol": {
                    "description": "Specifies the names of the SSL protocols that are allowed for use in SSL or StartTLS communication. The set of supported ssl protocols can be viewed via the ssl context monitor entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "deniedClient": {
                    "description": "Specifies a set of address masks that determines the addresses of the clients that are not allowed to establish connections to this connection handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowLDAPV2": {
                    "description": "Indicates whether connections from LDAPv2 clients are allowed.",
                    "type": "boolean"
                }
                ,
                "maxCancelHandlers": {
                    "description": "Specifies the maximum number of threads that are used to process cancel and abandon requests from clients.",
                    "type": "integer"
                }
                ,
                "sslCipherSuite": {
                    "description": "Specifies the names of the SSL cipher suites that are allowed for use in SSL or StartTLS communication. The set of supported cipher suites can be viewed via the ssl context monitor entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "listenPort": {
                    "description": "Specifies the port number on which the JMX Connection Handler will listen for connections from clients.",
                    "type": "integer"
                }
            }
        }
    }
}
