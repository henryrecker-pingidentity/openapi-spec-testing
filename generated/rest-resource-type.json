{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/rest-resource-types",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all REST Resource Type objects",
                    "type": "rest-resource-type-list-response",
                    "nickname": "list-rest-resource-types",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new REST Resource Type to the config",
                    "nickname": "add-rest-resource-type",
                    "type": "rest-resource-type-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "REST Resource Type to add",
                            "name": "add-rest-resource-type-request",
                            "type": "add-rest-resource-type-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/rest-resource-types/{rest-resource-type-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single REST Resource Type",
                    "type": "rest-resource-type-response",
                    "nickname": "get-rest-resource-type",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "rest-resource-type-name",
                          "description": "Name of the REST Resource Type",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing REST Resource Type by name, replacing any attributes specified in the request body",
                    "type": "rest-resource-type-response",
                    "nickname": "put-rest-resource-type",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "rest-resource-type-name",
                          "description": "Name of the REST Resource Type",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "REST Resource Type attributes to update",
                            "name": "rest-resource-type-properties",
                            "type": "rest-resource-type-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing REST Resource Type by name, using a SCIM patch request",
                    "type": "rest-resource-type-response",
                    "nickname": "patch-rest-resource-type",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "rest-resource-type-name",
                          "description": "Name of the REST Resource Type",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the REST Resource Type",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a REST Resource Type",
                    "nickname": "delete-rest-resource-type",
                    "parameters": [
                        {
                          "name": "rest-resource-type-name",
                          "description": "Name of the REST Resource Type",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/rest-resource-types/{rest-resource-type-name}/delegated-admin-attributes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Delegated Admin Attribute objects",
                    "type": "delegated-admin-attribute-list-response",
                    "nickname": "list-delegated-admin-attributes",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Delegated Admin Attribute to the config",
                    "nickname": "add-delegated-admin-attribute",
                    "type": "delegated-admin-attribute-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Delegated Admin Attribute to add",
                            "name": "add-delegated-admin-attribute-request",
                            "type": "add-delegated-admin-attribute-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/rest-resource-types/{rest-resource-type-name}/delegated-admin-attributes/{delegated-admin-attribute-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Delegated Admin Attribute",
                    "type": "delegated-admin-attribute-response",
                    "nickname": "get-delegated-admin-attribute",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "delegated-admin-attribute-name",
                          "description": "Name of the Delegated Admin Attribute",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Delegated Admin Attribute by name, replacing any attributes specified in the request body",
                    "type": "delegated-admin-attribute-response",
                    "nickname": "put-delegated-admin-attribute",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "delegated-admin-attribute-name",
                          "description": "Name of the Delegated Admin Attribute",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Delegated Admin Attribute attributes to update",
                            "name": "delegated-admin-attribute-properties",
                            "type": "delegated-admin-attribute-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Delegated Admin Attribute by name, using a SCIM patch request",
                    "type": "delegated-admin-attribute-response",
                    "nickname": "patch-delegated-admin-attribute",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "delegated-admin-attribute-name",
                          "description": "Name of the Delegated Admin Attribute",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Delegated Admin Attribute",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Delegated Admin Attribute",
                    "nickname": "delete-delegated-admin-attribute",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "delegated-admin-attribute-name",
                          "description": "Name of the Delegated Admin Attribute",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/rest-resource-types/{rest-resource-type-name}/delegated-admin-correlated-rest-resources",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Delegated Admin Correlated REST Resource objects",
                    "type": "delegated-admin-correlated-rest-resource-list-response",
                    "nickname": "list-delegated-admin-correlated-rest-resources",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Delegated Admin Correlated REST Resource to the config",
                    "nickname": "add-delegated-admin-correlated-rest-resource",
                    "type": "delegated-admin-correlated-rest-resource-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Delegated Admin Correlated REST Resource to add",
                            "name": "add-delegated-admin-correlated-rest-resource-request",
                            "type": "add-delegated-admin-correlated-rest-resource-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/rest-resource-types/{rest-resource-type-name}/delegated-admin-correlated-rest-resources/{delegated-admin-correlated-rest-resource-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Delegated Admin Correlated REST Resource",
                    "type": "delegated-admin-correlated-rest-resource-response",
                    "nickname": "get-delegated-admin-correlated-rest-resource",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "delegated-admin-correlated-rest-resource-name",
                          "description": "Name of the Delegated Admin Correlated REST Resource",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Delegated Admin Correlated REST Resource by name, replacing any attributes specified in the request body",
                    "type": "delegated-admin-correlated-rest-resource-response",
                    "nickname": "put-delegated-admin-correlated-rest-resource",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "delegated-admin-correlated-rest-resource-name",
                          "description": "Name of the Delegated Admin Correlated REST Resource",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Delegated Admin Correlated REST Resource attributes to update",
                            "name": "delegated-admin-correlated-rest-resource-properties",
                            "type": "delegated-admin-correlated-rest-resource-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Delegated Admin Correlated REST Resource by name, using a SCIM patch request",
                    "type": "delegated-admin-correlated-rest-resource-response",
                    "nickname": "patch-delegated-admin-correlated-rest-resource",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "delegated-admin-correlated-rest-resource-name",
                          "description": "Name of the Delegated Admin Correlated REST Resource",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Delegated Admin Correlated REST Resource",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Delegated Admin Correlated REST Resource",
                    "nickname": "delete-delegated-admin-correlated-rest-resource",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "rest-resource-type-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "delegated-admin-correlated-rest-resource-name",
                          "description": "Name of the Delegated Admin Correlated REST Resource",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "rest-resource-type-list-response": {
            "id": "rest-resource-type-list-response",
            "description": "REST Resource Type list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "rest-resource-type-response"
                    }
                }
            }
        },
        "add-rest-resource-type-request": {
            "id": "add-rest-resource-type-request",
            "description": "A REST Resource Type resource request",
            "required": [
                "typeName"
            ],
            "properties": {
                "typeName": {
                    "type": "string",
                    "description": "Name of the new REST Resource Type"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:user"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:generic"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:group"
                        ]
                    }
                },
                "primaryDisplayAttributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.",
                    "type": "string"
                }
                ,
                "postCreateConstructedAttribute": {
                    "description": "Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "resourceEndpoint": {
                    "description": "The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.",
                    "type": "string"
                }
                ,
                "delegatedAdminSearchSizeLimit": {
                    "description": "The maximum number of resources that may be returned from a search request.",
                    "type": "integer"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this REST Resource Type.",
                    "type": "string"
                }
                ,
                "createRDNAttributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this REST Resource Type",
                    "type": "string"
                }
                ,
                "auxiliaryLDAPObjectclass": {
                    "description": "Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "relativeDNFromParentResource": {
                    "description": "Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.",
                    "type": "string"
                }
                ,
                "nonmembersColumnName": {
                    "description": "Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI",
                    "type": "string"
                }
                ,
                "delegatedAdminReportSizeLimit": {
                    "description": "The maximum number of resources that may be included in a report.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the REST Resource Type is enabled.",
                    "type": "boolean"
                }
                ,
                "updateConstructedAttribute": {
                    "description": "Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "parentResourceType": {
                    "description": "Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.",
                    "type": "string"
                }
                ,
                "structuralLDAPObjectclass": {
                    "description": "Specifies the LDAP structural object class that should be exposed by this REST Resource Type.",
                    "type": "string"
                }
                ,
                "passwordDisplayOrderIndex": {
                    "description": "This property determines the display order for the password within its attribute category. Attributes are ordered within their category based on this index from least to greatest.",
                    "type": "integer"
                }
                ,
                "passwordAttributeCategory": {
                    "description": "Specifies which attribute category the password belongs to.",
                    "type": "string"
                }
                ,
                "membersColumnName": {
                    "description": "Specifies the name of the group member column that will be displayed in the Delegated Admin UI",
                    "type": "string"
                }
                ,
                "searchFilterPattern": {
                    "description": "Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.",
                    "type": "string"
                }
                ,
                "searchBaseDN": {
                    "description": "Specifies the base DN of the branch of the LDAP directory where resources of this type are located.",
                    "type": "string"
                }
                ,
                "includeFilter": {
                    "description": "The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "parentDN": {
                    "description": "Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.",
                    "type": "string"
                }
            }
        },
        "rest-resource-type-response": {
            "id": "rest-resource-type-response",
            "description": "A REST Resource Type resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:user"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:generic"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:group"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the REST Resource Type"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "primaryDisplayAttributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.",
                    "type": "string"
                }
                ,
                "postCreateConstructedAttribute": {
                    "description": "Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "resourceEndpoint": {
                    "description": "The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.",
                    "type": "string"
                }
                ,
                "delegatedAdminSearchSizeLimit": {
                    "description": "The maximum number of resources that may be returned from a search request.",
                    "type": "integer"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this REST Resource Type.",
                    "type": "string"
                }
                ,
                "createRDNAttributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this REST Resource Type",
                    "type": "string"
                }
                ,
                "auxiliaryLDAPObjectclass": {
                    "description": "Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "relativeDNFromParentResource": {
                    "description": "Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.",
                    "type": "string"
                }
                ,
                "nonmembersColumnName": {
                    "description": "Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI",
                    "type": "string"
                }
                ,
                "delegatedAdminReportSizeLimit": {
                    "description": "The maximum number of resources that may be included in a report.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the REST Resource Type is enabled.",
                    "type": "boolean"
                }
                ,
                "updateConstructedAttribute": {
                    "description": "Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "parentResourceType": {
                    "description": "Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.",
                    "type": "string"
                }
                ,
                "structuralLDAPObjectclass": {
                    "description": "Specifies the LDAP structural object class that should be exposed by this REST Resource Type.",
                    "type": "string"
                }
                ,
                "passwordDisplayOrderIndex": {
                    "description": "This property determines the display order for the password within its attribute category. Attributes are ordered within their category based on this index from least to greatest.",
                    "type": "integer"
                }
                ,
                "passwordAttributeCategory": {
                    "description": "Specifies which attribute category the password belongs to.",
                    "type": "string"
                }
                ,
                "membersColumnName": {
                    "description": "Specifies the name of the group member column that will be displayed in the Delegated Admin UI",
                    "type": "string"
                }
                ,
                "searchFilterPattern": {
                    "description": "Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.",
                    "type": "string"
                }
                ,
                "searchBaseDN": {
                    "description": "Specifies the base DN of the branch of the LDAP directory where resources of this type are located.",
                    "type": "string"
                }
                ,
                "includeFilter": {
                    "description": "The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "parentDN": {
                    "description": "Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.",
                    "type": "string"
                }
            }
        },
        "rest-resource-type-properties": {
            "id": "rest-resource-type-properties",
            "description": "REST Resource Type properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:user"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:generic"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:group"
                        ]
                    }
                },
                "primaryDisplayAttributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.",
                    "type": "string"
                }
                ,
                "postCreateConstructedAttribute": {
                    "description": "Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "resourceEndpoint": {
                    "description": "The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.",
                    "type": "string"
                }
                ,
                "delegatedAdminSearchSizeLimit": {
                    "description": "The maximum number of resources that may be returned from a search request.",
                    "type": "integer"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this REST Resource Type.",
                    "type": "string"
                }
                ,
                "createRDNAttributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this REST Resource Type",
                    "type": "string"
                }
                ,
                "auxiliaryLDAPObjectclass": {
                    "description": "Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "relativeDNFromParentResource": {
                    "description": "Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.",
                    "type": "string"
                }
                ,
                "nonmembersColumnName": {
                    "description": "Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI",
                    "type": "string"
                }
                ,
                "delegatedAdminReportSizeLimit": {
                    "description": "The maximum number of resources that may be included in a report.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the REST Resource Type is enabled.",
                    "type": "boolean"
                }
                ,
                "updateConstructedAttribute": {
                    "description": "Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "parentResourceType": {
                    "description": "Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.",
                    "type": "string"
                }
                ,
                "structuralLDAPObjectclass": {
                    "description": "Specifies the LDAP structural object class that should be exposed by this REST Resource Type.",
                    "type": "string"
                }
                ,
                "passwordDisplayOrderIndex": {
                    "description": "This property determines the display order for the password within its attribute category. Attributes are ordered within their category based on this index from least to greatest.",
                    "type": "integer"
                }
                ,
                "passwordAttributeCategory": {
                    "description": "Specifies which attribute category the password belongs to.",
                    "type": "string"
                }
                ,
                "membersColumnName": {
                    "description": "Specifies the name of the group member column that will be displayed in the Delegated Admin UI",
                    "type": "string"
                }
                ,
                "searchFilterPattern": {
                    "description": "Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.",
                    "type": "string"
                }
                ,
                "searchBaseDN": {
                    "description": "Specifies the base DN of the branch of the LDAP directory where resources of this type are located.",
                    "type": "string"
                }
                ,
                "includeFilter": {
                    "description": "The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "parentDN": {
                    "description": "Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.",
                    "type": "string"
                }
            }
        }
        ,
        "delegated-admin-attribute-list-response": {
            "id": "delegated-admin-attribute-list-response",
            "description": "Delegated Admin Attribute list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "delegated-admin-attribute-response"
                    }
                }
            }
        },
        "add-delegated-admin-attribute-request": {
            "id": "add-delegated-admin-attribute-request",
            "description": "A Delegated Admin Attribute resource request",
            "required": [
                "attributeType"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:certificate"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:photo"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:generic"
                        ]
                    }
                },
                "attributePresentation": {
                    "description": "Indicates how the attribute is presented to the user of the app.",
                    "type": "string"
                    , "enum": [
                        "default"
                        ,
                        "custom"
                    ]
                }
                ,
                "includeInSummary": {
                    "description": "Indicates whether this Delegated Admin Attribute is to be included in the summary display for a resource.",
                    "type": "boolean"
                }
                ,
                "displayOrderIndex": {
                    "description": "This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.",
                    "type": "integer"
                }
                ,
                "attributeCategory": {
                    "description": "Specifies which attribute category this attribute belongs to.",
                    "type": "string"
                }
                ,
                "dateTimeFormat": {
                    "description": "Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.",
                    "type": "string"
                }
                ,
                "allowedMIMEType": {
                    "description": "The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "cer"
                            ,
                            "crt"
                            ,
                            "der"
                            ,
                            "key"
                            ,
                            "p7b"
                            ,
                            "p7c"
                            ,
                            "p8"
                            ,
                            "p10"
                            ,
                            "p12"
                            ,
                            "pem"
                            ,
                            "pfx"
                            ,
                            "spc"
                        ]
                    }
                }
                ,
                "attributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type.",
                    "type": "string"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this Delegated Admin Attribute.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Delegated Admin Attribute",
                    "type": "string"
                }
                ,
                "referenceResourceType": {
                    "description": "For LDAP attributes with DN syntax, specifies what kind of resource is referenced.",
                    "type": "string"
                }
                ,
                "mutability": {
                    "description": "Specifies the circumstances under which the values of the attribute can be written.",
                    "type": "string"
                    , "enum": [
                        "read-only"
                        ,
                        "read-write"
                    ]
                }
                ,
                "multiValued": {
                    "description": "Indicates whether this Delegated Admin Attribute may have multiple values.",
                    "type": "boolean"
                }
            }
        },
        "delegated-admin-attribute-response": {
            "id": "delegated-admin-attribute-response",
            "description": "A Delegated Admin Attribute resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:certificate"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:photo"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:generic"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Delegated Admin Attribute"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "attributePresentation": {
                    "description": "Indicates how the attribute is presented to the user of the app.",
                    "type": "string"
                    , "enum": [
                        "default"
                        ,
                        "custom"
                    ]
                }
                ,
                "includeInSummary": {
                    "description": "Indicates whether this Delegated Admin Attribute is to be included in the summary display for a resource.",
                    "type": "boolean"
                }
                ,
                "displayOrderIndex": {
                    "description": "This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.",
                    "type": "integer"
                }
                ,
                "attributeCategory": {
                    "description": "Specifies which attribute category this attribute belongs to.",
                    "type": "string"
                }
                ,
                "dateTimeFormat": {
                    "description": "Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.",
                    "type": "string"
                }
                ,
                "allowedMIMEType": {
                    "description": "The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "cer"
                            ,
                            "crt"
                            ,
                            "der"
                            ,
                            "key"
                            ,
                            "p7b"
                            ,
                            "p7c"
                            ,
                            "p8"
                            ,
                            "p10"
                            ,
                            "p12"
                            ,
                            "pem"
                            ,
                            "pfx"
                            ,
                            "spc"
                        ]
                    }
                }
                ,
                "attributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type.",
                    "type": "string"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this Delegated Admin Attribute.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Delegated Admin Attribute",
                    "type": "string"
                }
                ,
                "referenceResourceType": {
                    "description": "For LDAP attributes with DN syntax, specifies what kind of resource is referenced.",
                    "type": "string"
                }
                ,
                "mutability": {
                    "description": "Specifies the circumstances under which the values of the attribute can be written.",
                    "type": "string"
                    , "enum": [
                        "read-only"
                        ,
                        "read-write"
                    ]
                }
                ,
                "multiValued": {
                    "description": "Indicates whether this Delegated Admin Attribute may have multiple values.",
                    "type": "boolean"
                }
            }
        },
        "delegated-admin-attribute-properties": {
            "id": "delegated-admin-attribute-properties",
            "description": "Delegated Admin Attribute properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:certificate"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:photo"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:generic"
                        ]
                    }
                },
                "attributePresentation": {
                    "description": "Indicates how the attribute is presented to the user of the app.",
                    "type": "string"
                    , "enum": [
                        "default"
                        ,
                        "custom"
                    ]
                }
                ,
                "includeInSummary": {
                    "description": "Indicates whether this Delegated Admin Attribute is to be included in the summary display for a resource.",
                    "type": "boolean"
                }
                ,
                "displayOrderIndex": {
                    "description": "This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.",
                    "type": "integer"
                }
                ,
                "attributeCategory": {
                    "description": "Specifies which attribute category this attribute belongs to.",
                    "type": "string"
                }
                ,
                "dateTimeFormat": {
                    "description": "Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.",
                    "type": "string"
                }
                ,
                "allowedMIMEType": {
                    "description": "The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "cer"
                            ,
                            "crt"
                            ,
                            "der"
                            ,
                            "key"
                            ,
                            "p7b"
                            ,
                            "p7c"
                            ,
                            "p8"
                            ,
                            "p10"
                            ,
                            "p12"
                            ,
                            "pem"
                            ,
                            "pfx"
                            ,
                            "spc"
                        ]
                    }
                }
                ,
                "attributeType": {
                    "description": "Specifies the name or OID of the LDAP attribute type.",
                    "type": "string"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this Delegated Admin Attribute.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Delegated Admin Attribute",
                    "type": "string"
                }
                ,
                "referenceResourceType": {
                    "description": "For LDAP attributes with DN syntax, specifies what kind of resource is referenced.",
                    "type": "string"
                }
                ,
                "mutability": {
                    "description": "Specifies the circumstances under which the values of the attribute can be written.",
                    "type": "string"
                    , "enum": [
                        "read-only"
                        ,
                        "read-write"
                    ]
                }
                ,
                "multiValued": {
                    "description": "Indicates whether this Delegated Admin Attribute may have multiple values.",
                    "type": "boolean"
                }
            }
        }
        ,
        "delegated-admin-correlated-rest-resource-list-response": {
            "id": "delegated-admin-correlated-rest-resource-list-response",
            "description": "Delegated Admin Correlated REST Resource list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "delegated-admin-correlated-rest-resource-response"
                    }
                }
            }
        },
        "add-delegated-admin-correlated-rest-resource-request": {
            "id": "add-delegated-admin-correlated-rest-resource-request",
            "description": "A Delegated Admin Correlated REST Resource resource request",
            "required": [
                "resourceName"
            ],
            "properties": {
                "resourceName": {
                    "type": "string",
                    "description": "Name of the new Delegated Admin Correlated REST Resource"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-correlated-rest-resource"
                        ]
                    }
                },
                "secondaryRESTResourceCorrelationAttribute": {
                    "description": "The LDAP attribute from the Delegated Admin Correlated REST Resource whose value will be matched with the primary-rest-resource-correlation-attribute. This attribute must be writeable when use-secondary-value-for-linking is disabled.",
                    "type": "string"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this Delegated Admin Correlated REST Resource.",
                    "type": "string"
                }
                ,
                "primaryRESTResourceCorrelationAttribute": {
                    "description": "The LDAP attribute from the parent REST Resource Type whose value will be used to match objects in the Delegated Admin Correlated REST Resource. This attribute must be writeable when use-secondary-value-for-linking is enabled.",
                    "type": "string"
                }
                ,
                "correlatedRESTResource": {
                    "description": "The REST Resource Type that will be linked to this REST Resource Type.",
                    "type": "string"
                }
                ,
                "useSecondaryValueForLinking": {
                    "description": "Indicates whether links should be created using the secondary correlation attribute value.",
                    "type": "boolean"
                }
            }
        },
        "delegated-admin-correlated-rest-resource-response": {
            "id": "delegated-admin-correlated-rest-resource-response",
            "description": "A Delegated Admin Correlated REST Resource resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-correlated-rest-resource"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Delegated Admin Correlated REST Resource"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "secondaryRESTResourceCorrelationAttribute": {
                    "description": "The LDAP attribute from the Delegated Admin Correlated REST Resource whose value will be matched with the primary-rest-resource-correlation-attribute. This attribute must be writeable when use-secondary-value-for-linking is disabled.",
                    "type": "string"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this Delegated Admin Correlated REST Resource.",
                    "type": "string"
                }
                ,
                "primaryRESTResourceCorrelationAttribute": {
                    "description": "The LDAP attribute from the parent REST Resource Type whose value will be used to match objects in the Delegated Admin Correlated REST Resource. This attribute must be writeable when use-secondary-value-for-linking is enabled.",
                    "type": "string"
                }
                ,
                "correlatedRESTResource": {
                    "description": "The REST Resource Type that will be linked to this REST Resource Type.",
                    "type": "string"
                }
                ,
                "useSecondaryValueForLinking": {
                    "description": "Indicates whether links should be created using the secondary correlation attribute value.",
                    "type": "boolean"
                }
            }
        },
        "delegated-admin-correlated-rest-resource-properties": {
            "id": "delegated-admin-correlated-rest-resource-properties",
            "description": "Delegated Admin Correlated REST Resource properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:delegated-admin-correlated-rest-resource"
                        ]
                    }
                },
                "secondaryRESTResourceCorrelationAttribute": {
                    "description": "The LDAP attribute from the Delegated Admin Correlated REST Resource whose value will be matched with the primary-rest-resource-correlation-attribute. This attribute must be writeable when use-secondary-value-for-linking is disabled.",
                    "type": "string"
                }
                ,
                "displayName": {
                    "description": "A human readable display name for this Delegated Admin Correlated REST Resource.",
                    "type": "string"
                }
                ,
                "primaryRESTResourceCorrelationAttribute": {
                    "description": "The LDAP attribute from the parent REST Resource Type whose value will be used to match objects in the Delegated Admin Correlated REST Resource. This attribute must be writeable when use-secondary-value-for-linking is enabled.",
                    "type": "string"
                }
                ,
                "correlatedRESTResource": {
                    "description": "The REST Resource Type that will be linked to this REST Resource Type.",
                    "type": "string"
                }
                ,
                "useSecondaryValueForLinking": {
                    "description": "Indicates whether links should be created using the secondary correlation attribute value.",
                    "type": "boolean"
                }
            }
        }
    }
}
