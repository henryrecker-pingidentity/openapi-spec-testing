{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/consent-service",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns the Consent Service",
                    "type": "consent-service-response",
                    "nickname": "get-consent-service",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update the Consent Service, replacing any attributes specified in the request body",
                    "type": "consent-service-response",
                    "nickname": "put-consent-service",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Consent Service attributes to update",
                            "name": "consent-service-properties",
                            "type": "consent-service-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Consent Service by name, using a SCIM patch request",
                    "type": "consent-service-response",
                    "nickname": "patch-consent-service",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Consent Service",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "consent-service-response": {
            "id": "consent-service-response",
            "description": "A Consent Service resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:consent-service"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Consent Service"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "bindDN": {
                    "description": "The DN of an internal service account used by the Consent Service to make internal LDAP requests.",
                    "type": "string"
                }
                ,
                "serviceAccountDN": {
                    "description": "The set of account DNs that the Consent Service will consider to be privileged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "audience": {
                    "description": "A string or URI that identifies the Consent Service in the context of OAuth2 authorization.",
                    "type": "string"
                }
                ,
                "searchSizeLimit": {
                    "description": "The maximum number of consent resources that may be returned from a search request.",
                    "type": "integer"
                }
                ,
                "unprivilegedConsentScope": {
                    "description": "The name of a scope that must be present in an access token accepted by the Consent Service for unprivileged clients.",
                    "type": "string"
                }
                ,
                "privilegedConsentScope": {
                    "description": "The name of a scope that must be present in an access token accepted by the Consent Service if the client is to be considered privileged.",
                    "type": "string"
                }
                ,
                "baseDN": {
                    "description": "The base DN under which consent records are stored.",
                    "type": "string"
                }
                ,
                "consentRecordIdentityMapper": {
                    "description": "If specified, the Identity Mapper(s) that may be used to map consent record subject and actor values to DNs. This is typically only needed if privileged API clients will be used.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Consent Service is enabled.",
                    "type": "boolean"
                }
            }
        },
        "consent-service-properties": {
            "id": "consent-service-properties",
            "description": "Consent Service properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:consent-service"
                        ]
                    }
                },
                "bindDN": {
                    "description": "The DN of an internal service account used by the Consent Service to make internal LDAP requests.",
                    "type": "string"
                }
                ,
                "serviceAccountDN": {
                    "description": "The set of account DNs that the Consent Service will consider to be privileged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "audience": {
                    "description": "A string or URI that identifies the Consent Service in the context of OAuth2 authorization.",
                    "type": "string"
                }
                ,
                "searchSizeLimit": {
                    "description": "The maximum number of consent resources that may be returned from a search request.",
                    "type": "integer"
                }
                ,
                "unprivilegedConsentScope": {
                    "description": "The name of a scope that must be present in an access token accepted by the Consent Service for unprivileged clients.",
                    "type": "string"
                }
                ,
                "privilegedConsentScope": {
                    "description": "The name of a scope that must be present in an access token accepted by the Consent Service if the client is to be considered privileged.",
                    "type": "string"
                }
                ,
                "baseDN": {
                    "description": "The base DN under which consent records are stored.",
                    "type": "string"
                }
                ,
                "consentRecordIdentityMapper": {
                    "description": "If specified, the Identity Mapper(s) that may be used to map consent record subject and actor values to DNs. This is typically only needed if privileged API clients will be used.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Consent Service is enabled.",
                    "type": "boolean"
                }
            }
        }
    }
}
