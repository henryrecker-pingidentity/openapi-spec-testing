swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /global-configuration:
    get:
      operationId: get-global-configuration
      summary: Returns the Global Configuration
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/global-configuration-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - global-configuration
    put:
      operationId: put-global-configuration
      summary: Update the Global Configuration, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/global-configuration-properties'
        description: Attributes to replace in the Global Configuration
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/global-configuration-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - global-configuration
    patch:
      operationId: patch-global-configuration
      summary: Update an existing Global Configuration by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Global Configuration
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/global-configuration-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - global-configuration

  /id-token-validators:
    get:
      summary: Returns a list of all ID Token Validator objects
      operationId: list-id-token-validators
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
    post:
      summary: Add a new ID Token Validator to the config
      operationId: add-id-token-validator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-id-token-validator-request'
        description: Create a new ID Token Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
  /id-token-validators/{id-token-validator-name}:
    get:
      operationId: get-id-token-validator
      summary: Returns a single ID Token Validator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
    put:
      operationId: put-id-token-validator
      summary: Update an existing ID Token Validator by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/id-token-validator-properties'
        description: Attributes to replace in the ID Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
    patch:
      operationId: patch-id-token-validator
      summary: Update an existing ID Token Validator by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the ID Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
    delete:
      summary: Delete a ID Token Validator
      operationId: delete-id-token-validator
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator

  /id-token-validators/{id-token-validator-name}/token-claim-validations:
    get:
      summary: Returns a list of all Token Claim Validation objects
      operationId: list-token-claim-validations
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
    post:
      summary: Add a new Token Claim Validation to the config
      operationId: add-token-claim-validation
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-token-claim-validation-request'
        description: Create a new Token Claim Validation in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
  /id-token-validators/{id-token-validator-name}/token-claim-validations/{token-claim-validation-name}:
    get:
      operationId: get-token-claim-validation
      summary: Returns a single Token Claim Validation
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Token Claim Validation
        in: path
        name: token-claim-validation-name
        required: true
        type: string
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
    put:
      operationId: put-token-claim-validation
      summary: Update an existing Token Claim Validation by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Token Claim Validation
        in: path
        name: token-claim-validation-name
        required: true
        type: string
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/token-claim-validation-properties'
        description: Attributes to replace in the Token Claim Validation
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
    patch:
      operationId: patch-token-claim-validation
      summary: Update an existing Token Claim Validation by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Token Claim Validation
        in: path
        name: token-claim-validation-name
        required: true
        type: string
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Token Claim Validation
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
    delete:
      summary: Delete a Token Claim Validation
      operationId: delete-token-claim-validation
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Token Claim Validation
        in: path
        name: token-claim-validation-name
        required: true
        type: string
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation

  /plugin-root:
    get:
      operationId: get-plugin-root
      summary: Returns the Plugin Root
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-root-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin-root
    put:
      operationId: put-plugin-root
      summary: Update the Plugin Root, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/plugin-root-properties'
        description: Attributes to replace in the Plugin Root
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-root-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin-root
    patch:
      operationId: patch-plugin-root
      summary: Update an existing Plugin Root by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Plugin Root
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-root-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin-root

  /plugin-root/plugins:
    get:
      summary: Returns a list of all Plugin objects
      operationId: list-plugins
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
    post:
      summary: Add a new Plugin to the config
      operationId: add-plugin
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-plugin-request'
        description: Create a new Plugin in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
  /plugin-root/plugins/{plugin-name}:
    get:
      operationId: get-plugin
      summary: Returns a single Plugin
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
    put:
      operationId: put-plugin
      summary: Update an existing Plugin by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/plugin-properties'
        description: Attributes to replace in the Plugin
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
    patch:
      operationId: patch-plugin
      summary: Update an existing Plugin by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Plugin
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
    delete:
      summary: Delete a Plugin
      operationId: delete-plugin
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin

  /plugin-root/plugins/{plugin-name}/custom-logged-stats:
    get:
      summary: Returns a list of all Custom Logged Stats objects
      operationId: list-custom-logged-stats
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
    post:
      summary: Add a new Custom Logged Stats to the config
      operationId: add-custom-logged-stats
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-custom-logged-stats-request'
        description: Create a new Custom Logged Stats in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
  /plugin-root/plugins/{plugin-name}/custom-logged-stats/{custom-logged-stats-name}:
    get:
      operationId: get-custom-logged-stats
      summary: Returns a single Custom Logged Stats
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Custom Logged Stats
        in: path
        name: custom-logged-stats-name
        required: true
        type: string
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
    put:
      operationId: put-custom-logged-stats
      summary: Update an existing Custom Logged Stats by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Custom Logged Stats
        in: path
        name: custom-logged-stats-name
        required: true
        type: string
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/custom-logged-stats-properties'
        description: Attributes to replace in the Custom Logged Stats
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
    patch:
      operationId: patch-custom-logged-stats
      summary: Update an existing Custom Logged Stats by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Custom Logged Stats
        in: path
        name: custom-logged-stats-name
        required: true
        type: string
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Custom Logged Stats
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
    delete:
      summary: Delete a Custom Logged Stats
      operationId: delete-custom-logged-stats
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Custom Logged Stats
        in: path
        name: custom-logged-stats-name
        required: true
        type: string
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats

  /sensitive-attributes:
    get:
      summary: Returns a list of all Sensitive Attribute objects
      operationId: list-sensitive-attributes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sensitive-attribute-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sensitive-attribute
    post:
      summary: Add a new Sensitive Attribute to the config
      operationId: add-sensitive-attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-sensitive-attribute-request'
        description: Create a new Sensitive Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sensitive-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sensitive-attribute
  /sensitive-attributes/{sensitive-attribute-name}:
    get:
      operationId: get-sensitive-attribute
      summary: Returns a single Sensitive Attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Sensitive Attribute
        in: path
        name: sensitive-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sensitive-attribute-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sensitive-attribute
    put:
      operationId: put-sensitive-attribute
      summary: Update an existing Sensitive Attribute by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Sensitive Attribute
        in: path
        name: sensitive-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/sensitive-attribute-properties'
        description: Attributes to replace in the Sensitive Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sensitive-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sensitive-attribute
    patch:
      operationId: patch-sensitive-attribute
      summary: Update an existing Sensitive Attribute by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Sensitive Attribute
        in: path
        name: sensitive-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Sensitive Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sensitive-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sensitive-attribute
    delete:
      summary: Delete a Sensitive Attribute
      operationId: delete-sensitive-attribute
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Sensitive Attribute
        in: path
        name: sensitive-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sensitive-attribute

  /access-token-validators:
    get:
      summary: Returns a list of all Access Token Validator objects
      operationId: list-access-token-validators
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/access-token-validator-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-token-validator
    post:
      summary: Add a new Access Token Validator to the config
      operationId: add-access-token-validator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-access-token-validator-request'
        description: Create a new Access Token Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/access-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-token-validator
  /access-token-validators/{access-token-validator-name}:
    get:
      operationId: get-access-token-validator
      summary: Returns a single Access Token Validator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Access Token Validator
        in: path
        name: access-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/access-token-validator-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-token-validator
    put:
      operationId: put-access-token-validator
      summary: Update an existing Access Token Validator by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Access Token Validator
        in: path
        name: access-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/access-token-validator-properties'
        description: Attributes to replace in the Access Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/access-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-token-validator
    patch:
      operationId: patch-access-token-validator
      summary: Update an existing Access Token Validator by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Access Token Validator
        in: path
        name: access-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Access Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/access-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-token-validator
    delete:
      summary: Delete a Access Token Validator
      operationId: delete-access-token-validator
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Access Token Validator
        in: path
        name: access-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-token-validator

  /root-dse-backend:
    get:
      operationId: get-root-dse-backend
      summary: Returns the Root DSE Backend
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dse-backend-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dse-backend
    put:
      operationId: put-root-dse-backend
      summary: Update the Root DSE Backend, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/root-dse-backend-properties'
        description: Attributes to replace in the Root DSE Backend
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dse-backend-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dse-backend
    patch:
      operationId: patch-root-dse-backend
      summary: Update an existing Root DSE Backend by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Root DSE Backend
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dse-backend-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dse-backend

  /log-field-mappings:
    get:
      summary: Returns a list of all Log Field Mapping objects
      operationId: list-log-field-mappings
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-mapping-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-mapping
    post:
      summary: Add a new Log Field Mapping to the config
      operationId: add-log-field-mapping
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-log-field-mapping-request'
        description: Create a new Log Field Mapping in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-mapping-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-mapping
  /log-field-mappings/{log-field-mapping-name}:
    get:
      operationId: get-log-field-mapping
      summary: Returns a single Log Field Mapping
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Log Field Mapping
        in: path
        name: log-field-mapping-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-mapping-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-mapping
    put:
      operationId: put-log-field-mapping
      summary: Update an existing Log Field Mapping by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Field Mapping
        in: path
        name: log-field-mapping-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/log-field-mapping-properties'
        description: Attributes to replace in the Log Field Mapping
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-mapping-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-mapping
    patch:
      operationId: patch-log-field-mapping
      summary: Update an existing Log Field Mapping by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Field Mapping
        in: path
        name: log-field-mapping-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Log Field Mapping
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-mapping-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-mapping
    delete:
      summary: Delete a Log Field Mapping
      operationId: delete-log-field-mapping
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Field Mapping
        in: path
        name: log-field-mapping-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-mapping

  /password-generators:
    get:
      summary: Returns a list of all Password Generator objects
      operationId: list-password-generators
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-generator-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-generator
    post:
      summary: Add a new Password Generator to the config
      operationId: add-password-generator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-password-generator-request'
        description: Create a new Password Generator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-generator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-generator
  /password-generators/{password-generator-name}:
    get:
      operationId: get-password-generator
      summary: Returns a single Password Generator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Password Generator
        in: path
        name: password-generator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-generator-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-generator
    put:
      operationId: put-password-generator
      summary: Update an existing Password Generator by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Generator
        in: path
        name: password-generator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/password-generator-properties'
        description: Attributes to replace in the Password Generator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-generator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-generator
    patch:
      operationId: patch-password-generator
      summary: Update an existing Password Generator by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Generator
        in: path
        name: password-generator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Password Generator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-generator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-generator
    delete:
      summary: Delete a Password Generator
      operationId: delete-password-generator
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Generator
        in: path
        name: password-generator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-generator

  /otp-delivery-mechanisms:
    get:
      summary: Returns a list of all OTP Delivery Mechanism objects
      operationId: list-otp-delivery-mechanisms
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/otp-delivery-mechanism-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - otp-delivery-mechanism
    post:
      summary: Add a new OTP Delivery Mechanism to the config
      operationId: add-otp-delivery-mechanism
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-otp-delivery-mechanism-request'
        description: Create a new OTP Delivery Mechanism in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/otp-delivery-mechanism-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - otp-delivery-mechanism
  /otp-delivery-mechanisms/{otp-delivery-mechanism-name}:
    get:
      operationId: get-otp-delivery-mechanism
      summary: Returns a single OTP Delivery Mechanism
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the OTP Delivery Mechanism
        in: path
        name: otp-delivery-mechanism-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/otp-delivery-mechanism-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - otp-delivery-mechanism
    put:
      operationId: put-otp-delivery-mechanism
      summary: Update an existing OTP Delivery Mechanism by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the OTP Delivery Mechanism
        in: path
        name: otp-delivery-mechanism-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/otp-delivery-mechanism-properties'
        description: Attributes to replace in the OTP Delivery Mechanism
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/otp-delivery-mechanism-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - otp-delivery-mechanism
    patch:
      operationId: patch-otp-delivery-mechanism
      summary: Update an existing OTP Delivery Mechanism by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the OTP Delivery Mechanism
        in: path
        name: otp-delivery-mechanism-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the OTP Delivery Mechanism
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/otp-delivery-mechanism-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - otp-delivery-mechanism
    delete:
      summary: Delete a OTP Delivery Mechanism
      operationId: delete-otp-delivery-mechanism
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the OTP Delivery Mechanism
        in: path
        name: otp-delivery-mechanism-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - otp-delivery-mechanism

  /log-field-behaviors:
    get:
      summary: Returns a list of all Log Field Behavior objects
      operationId: list-log-field-behaviors
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-behavior-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-behavior
    post:
      summary: Add a new Log Field Behavior to the config
      operationId: add-log-field-behavior
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-log-field-behavior-request'
        description: Create a new Log Field Behavior in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-behavior-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-behavior
  /log-field-behaviors/{log-field-behavior-name}:
    get:
      operationId: get-log-field-behavior
      summary: Returns a single Log Field Behavior
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Log Field Behavior
        in: path
        name: log-field-behavior-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-behavior-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-behavior
    put:
      operationId: put-log-field-behavior
      summary: Update an existing Log Field Behavior by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Field Behavior
        in: path
        name: log-field-behavior-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/log-field-behavior-properties'
        description: Attributes to replace in the Log Field Behavior
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-behavior-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-behavior
    patch:
      operationId: patch-log-field-behavior
      summary: Update an existing Log Field Behavior by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Field Behavior
        in: path
        name: log-field-behavior-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Log Field Behavior
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-behavior-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-behavior
    delete:
      summary: Delete a Log Field Behavior
      operationId: delete-log-field-behavior
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Field Behavior
        in: path
        name: log-field-behavior-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-behavior

  /server-instances:
    get:
      summary: Returns a list of all Server Instance objects
      operationId: list-server-instances
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-instance-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-instance
  /server-instances/{server-instance-name}:
    get:
      operationId: get-server-instance
      summary: Returns a single Server Instance
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-instance-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-instance
    put:
      operationId: put-server-instance
      summary: Update an existing Server Instance by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/server-instance-properties'
        description: Attributes to replace in the Server Instance
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-instance-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-instance
    patch:
      operationId: patch-server-instance
      summary: Update an existing Server Instance by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Server Instance
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-instance-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-instance

  /server-instances/{server-instance-name}/server-instance-listeners:
    get:
      summary: Returns a list of all Server Instance Listener objects
      operationId: list-server-instance-listeners
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-instance-listener-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-instance-listener
  /server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}:
    get:
      operationId: get-server-instance-listener
      summary: Returns a single Server Instance Listener
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Server Instance Listener
        in: path
        name: server-instance-listener-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-instance-listener-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-instance-listener
    put:
      operationId: put-server-instance-listener
      summary: Update an existing Server Instance Listener by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Server Instance Listener
        in: path
        name: server-instance-listener-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/server-instance-listener-properties'
        description: Attributes to replace in the Server Instance Listener
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-instance-listener-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-instance-listener
    patch:
      operationId: patch-server-instance-listener
      summary: Update an existing Server Instance Listener by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Server Instance Listener
        in: path
        name: server-instance-listener-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Server Instance Listener
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-instance-listener-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-instance-listener

  /server-instances/{server-instance-name}/mac-secret-keys:
    get:
      summary: Returns a list of all Mac Secret Key objects
      operationId: list-mac-secret-keys
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/mac-secret-key-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - mac-secret-key
  /server-instances/{server-instance-name}/mac-secret-keys/{mac-secret-key-name}:
    get:
      operationId: get-mac-secret-key
      summary: Returns a single Mac Secret Key
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Mac Secret Key
        in: path
        name: mac-secret-key-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/mac-secret-key-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - mac-secret-key
    put:
      operationId: put-mac-secret-key
      summary: Update an existing Mac Secret Key by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Mac Secret Key
        in: path
        name: mac-secret-key-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/mac-secret-key-properties'
        description: Attributes to replace in the Mac Secret Key
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/mac-secret-key-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - mac-secret-key
    patch:
      operationId: patch-mac-secret-key
      summary: Update an existing Mac Secret Key by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Mac Secret Key
        in: path
        name: mac-secret-key-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Mac Secret Key
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/mac-secret-key-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - mac-secret-key

  /server-instances/{server-instance-name}/cipher-secret-keys:
    get:
      summary: Returns a list of all Cipher Secret Key objects
      operationId: list-cipher-secret-keys
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-secret-key-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-secret-key
  /server-instances/{server-instance-name}/cipher-secret-keys/{cipher-secret-key-name}:
    get:
      operationId: get-cipher-secret-key
      summary: Returns a single Cipher Secret Key
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Cipher Secret Key
        in: path
        name: cipher-secret-key-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-secret-key-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-secret-key
    put:
      operationId: put-cipher-secret-key
      summary: Update an existing Cipher Secret Key by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Cipher Secret Key
        in: path
        name: cipher-secret-key-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/cipher-secret-key-properties'
        description: Attributes to replace in the Cipher Secret Key
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-secret-key-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-secret-key
    patch:
      operationId: patch-cipher-secret-key
      summary: Update an existing Cipher Secret Key by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Cipher Secret Key
        in: path
        name: cipher-secret-key-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Cipher Secret Key
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-secret-key-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-secret-key

  /server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}/inter-server-authentication-info:
    get:
      summary: Returns a list of all Inter Server Authentication Info objects
      operationId: list-inter-server-authentication-info
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Server Instance Listener
        in: path
        name: server-instance-listener-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/inter-server-authentication-info-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - inter-server-authentication-info
  /server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}/inter-server-authentication-info/{inter-server-authentication-info-name}:
    get:
      operationId: get-inter-server-authentication-info
      summary: Returns a single Inter Server Authentication Info
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Inter Server Authentication Info
        in: path
        name: inter-server-authentication-info-name
        required: true
        type: string
      - description: Name of the Server Instance Listener
        in: path
        name: server-instance-listener-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/inter-server-authentication-info-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - inter-server-authentication-info
    put:
      operationId: put-inter-server-authentication-info
      summary: Update an existing Inter Server Authentication Info by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Inter Server Authentication Info
        in: path
        name: inter-server-authentication-info-name
        required: true
        type: string
      - description: Name of the Server Instance Listener
        in: path
        name: server-instance-listener-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/inter-server-authentication-info-properties'
        description: Attributes to replace in the Inter Server Authentication Info
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/inter-server-authentication-info-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - inter-server-authentication-info
    patch:
      operationId: patch-inter-server-authentication-info
      summary: Update an existing Inter Server Authentication Info by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Inter Server Authentication Info
        in: path
        name: inter-server-authentication-info-name
        required: true
        type: string
      - description: Name of the Server Instance Listener
        in: path
        name: server-instance-listener-name
        required: true
        type: string
      - description: Name of the Server Instance
        in: path
        name: server-instance-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Inter Server Authentication Info
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/inter-server-authentication-info-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - inter-server-authentication-info

  /log-file-rotation-listeners:
    get:
      summary: Returns a list of all Log File Rotation Listener objects
      operationId: list-log-file-rotation-listeners
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-file-rotation-listener-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-file-rotation-listener
    post:
      summary: Add a new Log File Rotation Listener to the config
      operationId: add-log-file-rotation-listener
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-log-file-rotation-listener-request'
        description: Create a new Log File Rotation Listener in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-file-rotation-listener-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-file-rotation-listener
  /log-file-rotation-listeners/{log-file-rotation-listener-name}:
    get:
      operationId: get-log-file-rotation-listener
      summary: Returns a single Log File Rotation Listener
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Log File Rotation Listener
        in: path
        name: log-file-rotation-listener-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-file-rotation-listener-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-file-rotation-listener
    put:
      operationId: put-log-file-rotation-listener
      summary: Update an existing Log File Rotation Listener by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log File Rotation Listener
        in: path
        name: log-file-rotation-listener-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/log-file-rotation-listener-properties'
        description: Attributes to replace in the Log File Rotation Listener
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-file-rotation-listener-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-file-rotation-listener
    patch:
      operationId: patch-log-file-rotation-listener
      summary: Update an existing Log File Rotation Listener by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log File Rotation Listener
        in: path
        name: log-file-rotation-listener-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Log File Rotation Listener
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-file-rotation-listener-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-file-rotation-listener
    delete:
      summary: Delete a Log File Rotation Listener
      operationId: delete-log-file-rotation-listener
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log File Rotation Listener
        in: path
        name: log-file-rotation-listener-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-file-rotation-listener

  /password-policies:
    get:
      summary: Returns a list of all Password Policy objects
      operationId: list-password-policies
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
    post:
      summary: Add a new Password Policy to the config
      operationId: add-password-policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-password-policy-request'
        description: Create a new Password Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
  /password-policies/{password-policy-name}:
    get:
      operationId: get-password-policy
      summary: Returns a single Password Policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Password Policy
        in: path
        name: password-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
    put:
      operationId: put-password-policy
      summary: Update an existing Password Policy by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Policy
        in: path
        name: password-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/password-policy-properties'
        description: Attributes to replace in the Password Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
    patch:
      operationId: patch-password-policy
      summary: Update an existing Password Policy by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Policy
        in: path
        name: password-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Password Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
    delete:
      summary: Delete a Password Policy
      operationId: delete-password-policy
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Policy
        in: path
        name: password-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy

  /delegated-admin-rights:
    get:
      summary: Returns a list of all Delegated Admin Rights objects
      operationId: list-delegated-admin-rights
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-rights-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-rights
    post:
      summary: Add a new Delegated Admin Rights to the config
      operationId: add-delegated-admin-rights
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-delegated-admin-rights-request'
        description: Create a new Delegated Admin Rights in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-rights-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-rights
  /delegated-admin-rights/{delegated-admin-rights-name}:
    get:
      operationId: get-delegated-admin-rights
      summary: Returns a single Delegated Admin Rights
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-rights-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-rights
    put:
      operationId: put-delegated-admin-rights
      summary: Update an existing Delegated Admin Rights by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/delegated-admin-rights-properties'
        description: Attributes to replace in the Delegated Admin Rights
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-rights-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-rights
    patch:
      operationId: patch-delegated-admin-rights
      summary: Update an existing Delegated Admin Rights by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Delegated Admin Rights
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-rights-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-rights
    delete:
      summary: Delete a Delegated Admin Rights
      operationId: delete-delegated-admin-rights
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-rights

  /delegated-admin-rights/{delegated-admin-rights-name}/delegated-admin-resource-rights:
    get:
      summary: Returns a list of all Delegated Admin Resource Rights objects
      operationId: list-delegated-admin-resource-rights
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-resource-rights-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-resource-rights
    post:
      summary: Add a new Delegated Admin Resource Rights to the config
      operationId: add-delegated-admin-resource-rights
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-delegated-admin-resource-rights-request'
        description: Create a new Delegated Admin Resource Rights in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-resource-rights-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-resource-rights
  /delegated-admin-rights/{delegated-admin-rights-name}/delegated-admin-resource-rights/{delegated-admin-resource-rights-name}:
    get:
      operationId: get-delegated-admin-resource-rights
      summary: Returns a single Delegated Admin Resource Rights
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Delegated Admin Resource Rights
        in: path
        name: delegated-admin-resource-rights-name
        required: true
        type: string
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-resource-rights-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-resource-rights
    put:
      operationId: put-delegated-admin-resource-rights
      summary: Update an existing Delegated Admin Resource Rights by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Resource Rights
        in: path
        name: delegated-admin-resource-rights-name
        required: true
        type: string
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/delegated-admin-resource-rights-properties'
        description: Attributes to replace in the Delegated Admin Resource Rights
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-resource-rights-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-resource-rights
    patch:
      operationId: patch-delegated-admin-resource-rights
      summary: Update an existing Delegated Admin Resource Rights by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Resource Rights
        in: path
        name: delegated-admin-resource-rights-name
        required: true
        type: string
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Delegated Admin Resource Rights
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-resource-rights-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-resource-rights
    delete:
      summary: Delete a Delegated Admin Resource Rights
      operationId: delete-delegated-admin-resource-rights
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Resource Rights
        in: path
        name: delegated-admin-resource-rights-name
        required: true
        type: string
      - description: Name of the Delegated Admin Rights
        in: path
        name: delegated-admin-rights-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-resource-rights

  /uncached-attribute-criteria:
    get:
      summary: Returns a list of all Uncached Attribute Criteria objects
      operationId: list-uncached-attribute-criteria
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-attribute-criteria-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-attribute-criteria
    post:
      summary: Add a new Uncached Attribute Criteria to the config
      operationId: add-uncached-attribute-criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-uncached-attribute-criteria-request'
        description: Create a new Uncached Attribute Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-attribute-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-attribute-criteria
  /uncached-attribute-criteria/{uncached-attribute-criteria-name}:
    get:
      operationId: get-uncached-attribute-criteria
      summary: Returns a single Uncached Attribute Criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Uncached Attribute Criteria
        in: path
        name: uncached-attribute-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-attribute-criteria-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-attribute-criteria
    put:
      operationId: put-uncached-attribute-criteria
      summary: Update an existing Uncached Attribute Criteria by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Uncached Attribute Criteria
        in: path
        name: uncached-attribute-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/uncached-attribute-criteria-properties'
        description: Attributes to replace in the Uncached Attribute Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-attribute-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-attribute-criteria
    patch:
      operationId: patch-uncached-attribute-criteria
      summary: Update an existing Uncached Attribute Criteria by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Uncached Attribute Criteria
        in: path
        name: uncached-attribute-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Uncached Attribute Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-attribute-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-attribute-criteria
    delete:
      summary: Delete a Uncached Attribute Criteria
      operationId: delete-uncached-attribute-criteria
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Uncached Attribute Criteria
        in: path
        name: uncached-attribute-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-attribute-criteria

  /result-code-maps:
    get:
      summary: Returns a list of all Result Code Map objects
      operationId: list-result-code-maps
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-code-map-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-code-map
    post:
      summary: Add a new Result Code Map to the config
      operationId: add-result-code-map
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-result-code-map-request'
        description: Create a new Result Code Map in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-code-map-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-code-map
  /result-code-maps/{result-code-map-name}:
    get:
      operationId: get-result-code-map
      summary: Returns a single Result Code Map
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Result Code Map
        in: path
        name: result-code-map-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-code-map-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-code-map
    put:
      operationId: put-result-code-map
      summary: Update an existing Result Code Map by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Result Code Map
        in: path
        name: result-code-map-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/result-code-map-properties'
        description: Attributes to replace in the Result Code Map
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-code-map-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-code-map
    patch:
      operationId: patch-result-code-map
      summary: Update an existing Result Code Map by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Result Code Map
        in: path
        name: result-code-map-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Result Code Map
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-code-map-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-code-map
    delete:
      summary: Delete a Result Code Map
      operationId: delete-result-code-map
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Result Code Map
        in: path
        name: result-code-map-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-code-map

  /synchronization-providers:
    get:
      summary: Returns a list of all Synchronization Provider objects
      operationId: list-synchronization-providers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/synchronization-provider-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - synchronization-provider
  /synchronization-providers/{synchronization-provider-name}:
    get:
      operationId: get-synchronization-provider
      summary: Returns a single Synchronization Provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/synchronization-provider-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - synchronization-provider
    put:
      operationId: put-synchronization-provider
      summary: Update an existing Synchronization Provider by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/synchronization-provider-properties'
        description: Attributes to replace in the Synchronization Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/synchronization-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - synchronization-provider
    patch:
      operationId: patch-synchronization-provider
      summary: Update an existing Synchronization Provider by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Synchronization Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/synchronization-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - synchronization-provider

  /synchronization-providers/{synchronization-provider-name}/replication-server:
    get:
      operationId: get-replication-server
      summary: Returns the Replication Server
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-server-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-server
    put:
      operationId: put-replication-server
      summary: Update the Replication Server, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/replication-server-properties'
        description: Attributes to replace in the Replication Server
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-server-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-server
    patch:
      operationId: patch-replication-server
      summary: Update an existing Replication Server by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Replication Server
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-server-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-server

  /synchronization-providers/{synchronization-provider-name}/replication-domains:
    get:
      summary: Returns a list of all Replication Domain objects
      operationId: list-replication-domains
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-domain-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-domain
  /synchronization-providers/{synchronization-provider-name}/replication-domains/{replication-domain-name}:
    get:
      operationId: get-replication-domain
      summary: Returns a single Replication Domain
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Replication Domain
        in: path
        name: replication-domain-name
        required: true
        type: string
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-domain-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-domain
    put:
      operationId: put-replication-domain
      summary: Update an existing Replication Domain by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Replication Domain
        in: path
        name: replication-domain-name
        required: true
        type: string
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/replication-domain-properties'
        description: Attributes to replace in the Replication Domain
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-domain-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-domain
    patch:
      operationId: patch-replication-domain
      summary: Update an existing Replication Domain by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Replication Domain
        in: path
        name: replication-domain-name
        required: true
        type: string
      - description: Name of the Synchronization Provider
        in: path
        name: synchronization-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Replication Domain
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-domain-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-domain

  /connection-criteria:
    get:
      summary: Returns a list of all Connection Criteria objects
      operationId: list-connection-criteria
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-criteria-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-criteria
    post:
      summary: Add a new Connection Criteria to the config
      operationId: add-connection-criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-connection-criteria-request'
        description: Create a new Connection Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-criteria
  /connection-criteria/{connection-criteria-name}:
    get:
      operationId: get-connection-criteria
      summary: Returns a single Connection Criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Connection Criteria
        in: path
        name: connection-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-criteria-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-criteria
    put:
      operationId: put-connection-criteria
      summary: Update an existing Connection Criteria by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Criteria
        in: path
        name: connection-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/connection-criteria-properties'
        description: Attributes to replace in the Connection Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-criteria
    patch:
      operationId: patch-connection-criteria
      summary: Update an existing Connection Criteria by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Criteria
        in: path
        name: connection-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Connection Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-criteria
    delete:
      summary: Delete a Connection Criteria
      operationId: delete-connection-criteria
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Criteria
        in: path
        name: connection-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-criteria

  /root-dn:
    get:
      operationId: get-root-dn
      summary: Returns the Root DN
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dn-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn
    put:
      operationId: put-root-dn
      summary: Update the Root DN, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/root-dn-properties'
        description: Attributes to replace in the Root DN
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dn-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn
    patch:
      operationId: patch-root-dn
      summary: Update an existing Root DN by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Root DN
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dn-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn

  /root-dn/root-dn-users:
    get:
      summary: Returns a list of all Root DN User objects
      operationId: list-root-dn-users
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dn-user-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn-user
    post:
      summary: Add a new Root DN User to the config
      operationId: add-root-dn-user
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-root-dn-user-request'
        description: Create a new Root DN User in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dn-user-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn-user
  /root-dn/root-dn-users/{root-dn-user-name}:
    get:
      operationId: get-root-dn-user
      summary: Returns a single Root DN User
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Root DN User
        in: path
        name: root-dn-user-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dn-user-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn-user
    put:
      operationId: put-root-dn-user
      summary: Update an existing Root DN User by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Root DN User
        in: path
        name: root-dn-user-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/root-dn-user-properties'
        description: Attributes to replace in the Root DN User
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dn-user-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn-user
    patch:
      operationId: patch-root-dn-user
      summary: Update an existing Root DN User by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Root DN User
        in: path
        name: root-dn-user-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Root DN User
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/root-dn-user-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn-user
    delete:
      summary: Delete a Root DN User
      operationId: delete-root-dn-user
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Root DN User
        in: path
        name: root-dn-user-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - root-dn-user

  /trust-manager-providers:
    get:
      summary: Returns a list of all Trust Manager Provider objects
      operationId: list-trust-manager-providers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trust-manager-provider-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trust-manager-provider
    post:
      summary: Add a new Trust Manager Provider to the config
      operationId: add-trust-manager-provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-trust-manager-provider-request'
        description: Create a new Trust Manager Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trust-manager-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trust-manager-provider
  /trust-manager-providers/{trust-manager-provider-name}:
    get:
      operationId: get-trust-manager-provider
      summary: Returns a single Trust Manager Provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Trust Manager Provider
        in: path
        name: trust-manager-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trust-manager-provider-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trust-manager-provider
    put:
      operationId: put-trust-manager-provider
      summary: Update an existing Trust Manager Provider by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Trust Manager Provider
        in: path
        name: trust-manager-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/trust-manager-provider-properties'
        description: Attributes to replace in the Trust Manager Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trust-manager-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trust-manager-provider
    patch:
      operationId: patch-trust-manager-provider
      summary: Update an existing Trust Manager Provider by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Trust Manager Provider
        in: path
        name: trust-manager-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Trust Manager Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trust-manager-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trust-manager-provider
    delete:
      summary: Delete a Trust Manager Provider
      operationId: delete-trust-manager-provider
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Trust Manager Provider
        in: path
        name: trust-manager-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trust-manager-provider

  /key-pairs:
    get:
      summary: Returns a list of all Key Pair objects
      operationId: list-key-pairs
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-pair-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-pair
    post:
      summary: Add a new Key Pair to the config
      operationId: add-key-pair
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-key-pair-request'
        description: Create a new Key Pair in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-pair-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-pair
  /key-pairs/{key-pair-name}:
    get:
      operationId: get-key-pair
      summary: Returns a single Key Pair
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Key Pair
        in: path
        name: key-pair-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-pair-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-pair
    put:
      operationId: put-key-pair
      summary: Update an existing Key Pair by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Key Pair
        in: path
        name: key-pair-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/key-pair-properties'
        description: Attributes to replace in the Key Pair
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-pair-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-pair
    patch:
      operationId: patch-key-pair
      summary: Update an existing Key Pair by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Key Pair
        in: path
        name: key-pair-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Key Pair
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-pair-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-pair
    delete:
      summary: Delete a Key Pair
      operationId: delete-key-pair
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Key Pair
        in: path
        name: key-pair-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-pair

  /request-criteria:
    get:
      summary: Returns a list of all Request Criteria objects
      operationId: list-request-criteria
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/request-criteria-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - request-criteria
    post:
      summary: Add a new Request Criteria to the config
      operationId: add-request-criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-request-criteria-request'
        description: Create a new Request Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/request-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - request-criteria
  /request-criteria/{request-criteria-name}:
    get:
      operationId: get-request-criteria
      summary: Returns a single Request Criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Request Criteria
        in: path
        name: request-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/request-criteria-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - request-criteria
    put:
      operationId: put-request-criteria
      summary: Update an existing Request Criteria by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Request Criteria
        in: path
        name: request-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/request-criteria-properties'
        description: Attributes to replace in the Request Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/request-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - request-criteria
    patch:
      operationId: patch-request-criteria
      summary: Update an existing Request Criteria by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Request Criteria
        in: path
        name: request-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Request Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/request-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - request-criteria
    delete:
      summary: Delete a Request Criteria
      operationId: delete-request-criteria
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Request Criteria
        in: path
        name: request-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - request-criteria

  /log-rotation-policies:
    get:
      summary: Returns a list of all Log Rotation Policy objects
      operationId: list-log-rotation-policies
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-rotation-policy-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-rotation-policy
    post:
      summary: Add a new Log Rotation Policy to the config
      operationId: add-log-rotation-policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-log-rotation-policy-request'
        description: Create a new Log Rotation Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-rotation-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-rotation-policy
  /log-rotation-policies/{log-rotation-policy-name}:
    get:
      operationId: get-log-rotation-policy
      summary: Returns a single Log Rotation Policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Log Rotation Policy
        in: path
        name: log-rotation-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-rotation-policy-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-rotation-policy
    put:
      operationId: put-log-rotation-policy
      summary: Update an existing Log Rotation Policy by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Rotation Policy
        in: path
        name: log-rotation-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/log-rotation-policy-properties'
        description: Attributes to replace in the Log Rotation Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-rotation-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-rotation-policy
    patch:
      operationId: patch-log-rotation-policy
      summary: Update an existing Log Rotation Policy by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Rotation Policy
        in: path
        name: log-rotation-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Log Rotation Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-rotation-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-rotation-policy
    delete:
      summary: Delete a Log Rotation Policy
      operationId: delete-log-rotation-policy
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Rotation Policy
        in: path
        name: log-rotation-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-rotation-policy

  /log-field-syntaxes:
    get:
      summary: Returns a list of all Log Field Syntax objects
      operationId: list-log-field-syntaxes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-syntax-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-syntax
  /log-field-syntaxes/{log-field-syntax-name}:
    get:
      operationId: get-log-field-syntax
      summary: Returns a single Log Field Syntax
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Log Field Syntax
        in: path
        name: log-field-syntax-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-syntax-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-syntax
    put:
      operationId: put-log-field-syntax
      summary: Update an existing Log Field Syntax by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Field Syntax
        in: path
        name: log-field-syntax-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/log-field-syntax-properties'
        description: Attributes to replace in the Log Field Syntax
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-syntax-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-syntax
    patch:
      operationId: patch-log-field-syntax
      summary: Update an existing Log Field Syntax by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Field Syntax
        in: path
        name: log-field-syntax-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Log Field Syntax
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-field-syntax-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-field-syntax

  /scim-resource-types:
    get:
      summary: Returns a list of all SCIM Resource Type objects
      operationId: list-scim-resource-types
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-resource-type-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-resource-type
    post:
      summary: Add a new SCIM Resource Type to the config
      operationId: add-scim-resource-type
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-scim-resource-type-request'
        description: Create a new SCIM Resource Type in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-resource-type-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-resource-type
  /scim-resource-types/{scim-resource-type-name}:
    get:
      operationId: get-scim-resource-type
      summary: Returns a single SCIM Resource Type
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-resource-type-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-resource-type
    put:
      operationId: put-scim-resource-type
      summary: Update an existing SCIM Resource Type by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/scim-resource-type-properties'
        description: Attributes to replace in the SCIM Resource Type
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-resource-type-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-resource-type
    patch:
      operationId: patch-scim-resource-type
      summary: Update an existing SCIM Resource Type by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the SCIM Resource Type
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-resource-type-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-resource-type
    delete:
      summary: Delete a SCIM Resource Type
      operationId: delete-scim-resource-type
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-resource-type

  /scim-resource-types/{scim-resource-type-name}/correlated-ldap-data-views:
    get:
      summary: Returns a list of all Correlated LDAP Data View objects
      operationId: list-correlated-ldap-data-views
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/correlated-ldap-data-view-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - correlated-ldap-data-view
    post:
      summary: Add a new Correlated LDAP Data View to the config
      operationId: add-correlated-ldap-data-view
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-correlated-ldap-data-view-request'
        description: Create a new Correlated LDAP Data View in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/correlated-ldap-data-view-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - correlated-ldap-data-view
  /scim-resource-types/{scim-resource-type-name}/correlated-ldap-data-views/{correlated-ldap-data-view-name}:
    get:
      operationId: get-correlated-ldap-data-view
      summary: Returns a single Correlated LDAP Data View
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/correlated-ldap-data-view-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - correlated-ldap-data-view
    put:
      operationId: put-correlated-ldap-data-view
      summary: Update an existing Correlated LDAP Data View by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/correlated-ldap-data-view-properties'
        description: Attributes to replace in the Correlated LDAP Data View
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/correlated-ldap-data-view-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - correlated-ldap-data-view
    patch:
      operationId: patch-correlated-ldap-data-view
      summary: Update an existing Correlated LDAP Data View by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Correlated LDAP Data View
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/correlated-ldap-data-view-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - correlated-ldap-data-view
    delete:
      summary: Delete a Correlated LDAP Data View
      operationId: delete-correlated-ldap-data-view
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - correlated-ldap-data-view

  /scim-resource-types/{scim-resource-type-name}/scim-attribute-mappings:
    get:
      summary: Returns a list of all SCIM Attribute Mapping objects
      operationId: list-scim-attribute-mappings
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-mapping-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute-mapping
    post:
      summary: Add a new SCIM Attribute Mapping to the config
      operationId: add-scim-attribute-mapping
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-scim-attribute-mapping-request'
        description: Create a new SCIM Attribute Mapping in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-mapping-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute-mapping
  /scim-resource-types/{scim-resource-type-name}/scim-attribute-mappings/{scim-attribute-mapping-name}:
    get:
      operationId: get-scim-attribute-mapping
      summary: Returns a single SCIM Attribute Mapping
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Attribute Mapping
        in: path
        name: scim-attribute-mapping-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-mapping-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute-mapping
    put:
      operationId: put-scim-attribute-mapping
      summary: Update an existing SCIM Attribute Mapping by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Attribute Mapping
        in: path
        name: scim-attribute-mapping-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/scim-attribute-mapping-properties'
        description: Attributes to replace in the SCIM Attribute Mapping
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-mapping-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute-mapping
    patch:
      operationId: patch-scim-attribute-mapping
      summary: Update an existing SCIM Attribute Mapping by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Attribute Mapping
        in: path
        name: scim-attribute-mapping-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the SCIM Attribute Mapping
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-mapping-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute-mapping
    delete:
      summary: Delete a SCIM Attribute Mapping
      operationId: delete-scim-attribute-mapping
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Attribute Mapping
        in: path
        name: scim-attribute-mapping-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute-mapping

  /scim-resource-types/{scim-resource-type-name}/correlated-ldap-data-views/{correlated-ldap-data-view-name}/ldap-correlation-attribute-pairs:
    get:
      summary: Returns a list of all LDAP Correlation Attribute Pair objects
      operationId: list-ldap-correlation-attribute-pairs
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ldap-correlation-attribute-pair-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-correlation-attribute-pair
    post:
      summary: Add a new LDAP Correlation Attribute Pair to the config
      operationId: add-ldap-correlation-attribute-pair
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-ldap-correlation-attribute-pair-request'
        description: Create a new LDAP Correlation Attribute Pair in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ldap-correlation-attribute-pair-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-correlation-attribute-pair
  /scim-resource-types/{scim-resource-type-name}/correlated-ldap-data-views/{correlated-ldap-data-view-name}/ldap-correlation-attribute-pairs/{ldap-correlation-attribute-pair-name}:
    get:
      operationId: get-ldap-correlation-attribute-pair
      summary: Returns a single LDAP Correlation Attribute Pair
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the LDAP Correlation Attribute Pair
        in: path
        name: ldap-correlation-attribute-pair-name
        required: true
        type: string
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ldap-correlation-attribute-pair-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-correlation-attribute-pair
    put:
      operationId: put-ldap-correlation-attribute-pair
      summary: Update an existing LDAP Correlation Attribute Pair by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the LDAP Correlation Attribute Pair
        in: path
        name: ldap-correlation-attribute-pair-name
        required: true
        type: string
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/ldap-correlation-attribute-pair-properties'
        description: Attributes to replace in the LDAP Correlation Attribute Pair
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ldap-correlation-attribute-pair-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-correlation-attribute-pair
    patch:
      operationId: patch-ldap-correlation-attribute-pair
      summary: Update an existing LDAP Correlation Attribute Pair by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the LDAP Correlation Attribute Pair
        in: path
        name: ldap-correlation-attribute-pair-name
        required: true
        type: string
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the LDAP Correlation Attribute Pair
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ldap-correlation-attribute-pair-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-correlation-attribute-pair
    delete:
      summary: Delete a LDAP Correlation Attribute Pair
      operationId: delete-ldap-correlation-attribute-pair
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the LDAP Correlation Attribute Pair
        in: path
        name: ldap-correlation-attribute-pair-name
        required: true
        type: string
      - description: Name of the Correlated LDAP Data View
        in: path
        name: correlated-ldap-data-view-name
        required: true
        type: string
      - description: Name of the SCIM Resource Type
        in: path
        name: scim-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-correlation-attribute-pair

  /extended-operation-handlers:
    get:
      summary: Returns a list of all Extended Operation Handler objects
      operationId: list-extended-operation-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/extended-operation-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - extended-operation-handler
    post:
      summary: Add a new Extended Operation Handler to the config
      operationId: add-extended-operation-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-extended-operation-handler-request'
        description: Create a new Extended Operation Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/extended-operation-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - extended-operation-handler
  /extended-operation-handlers/{extended-operation-handler-name}:
    get:
      operationId: get-extended-operation-handler
      summary: Returns a single Extended Operation Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Extended Operation Handler
        in: path
        name: extended-operation-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/extended-operation-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - extended-operation-handler
    put:
      operationId: put-extended-operation-handler
      summary: Update an existing Extended Operation Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Extended Operation Handler
        in: path
        name: extended-operation-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/extended-operation-handler-properties'
        description: Attributes to replace in the Extended Operation Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/extended-operation-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - extended-operation-handler
    patch:
      operationId: patch-extended-operation-handler
      summary: Update an existing Extended Operation Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Extended Operation Handler
        in: path
        name: extended-operation-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Extended Operation Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/extended-operation-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - extended-operation-handler
    delete:
      summary: Delete a Extended Operation Handler
      operationId: delete-extended-operation-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Extended Operation Handler
        in: path
        name: extended-operation-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - extended-operation-handler

  /azure-authentication-methods:
    get:
      summary: Returns a list of all Azure Authentication Method objects
      operationId: list-azure-authentication-methods
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/azure-authentication-method-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - azure-authentication-method
    post:
      summary: Add a new Azure Authentication Method to the config
      operationId: add-azure-authentication-method
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-azure-authentication-method-request'
        description: Create a new Azure Authentication Method in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/azure-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - azure-authentication-method
  /azure-authentication-methods/{azure-authentication-method-name}:
    get:
      operationId: get-azure-authentication-method
      summary: Returns a single Azure Authentication Method
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Azure Authentication Method
        in: path
        name: azure-authentication-method-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/azure-authentication-method-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - azure-authentication-method
    put:
      operationId: put-azure-authentication-method
      summary: Update an existing Azure Authentication Method by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Azure Authentication Method
        in: path
        name: azure-authentication-method-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/azure-authentication-method-properties'
        description: Attributes to replace in the Azure Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/azure-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - azure-authentication-method
    patch:
      operationId: patch-azure-authentication-method
      summary: Update an existing Azure Authentication Method by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Azure Authentication Method
        in: path
        name: azure-authentication-method-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Azure Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/azure-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - azure-authentication-method
    delete:
      summary: Delete a Azure Authentication Method
      operationId: delete-azure-authentication-method
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Azure Authentication Method
        in: path
        name: azure-authentication-method-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - azure-authentication-method

  /passphrase-providers:
    get:
      summary: Returns a list of all Passphrase Provider objects
      operationId: list-passphrase-providers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/passphrase-provider-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - passphrase-provider
    post:
      summary: Add a new Passphrase Provider to the config
      operationId: add-passphrase-provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-passphrase-provider-request'
        description: Create a new Passphrase Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/passphrase-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - passphrase-provider
  /passphrase-providers/{passphrase-provider-name}:
    get:
      operationId: get-passphrase-provider
      summary: Returns a single Passphrase Provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Passphrase Provider
        in: path
        name: passphrase-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/passphrase-provider-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - passphrase-provider
    put:
      operationId: put-passphrase-provider
      summary: Update an existing Passphrase Provider by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Passphrase Provider
        in: path
        name: passphrase-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/passphrase-provider-properties'
        description: Attributes to replace in the Passphrase Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/passphrase-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - passphrase-provider
    patch:
      operationId: patch-passphrase-provider
      summary: Update an existing Passphrase Provider by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Passphrase Provider
        in: path
        name: passphrase-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Passphrase Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/passphrase-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - passphrase-provider
    delete:
      summary: Delete a Passphrase Provider
      operationId: delete-passphrase-provider
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Passphrase Provider
        in: path
        name: passphrase-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - passphrase-provider

  /soft-delete-policies:
    get:
      summary: Returns a list of all Soft Delete Policy objects
      operationId: list-soft-delete-policies
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/soft-delete-policy-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - soft-delete-policy
    post:
      summary: Add a new Soft Delete Policy to the config
      operationId: add-soft-delete-policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-soft-delete-policy-request'
        description: Create a new Soft Delete Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/soft-delete-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - soft-delete-policy
  /soft-delete-policies/{soft-delete-policy-name}:
    get:
      operationId: get-soft-delete-policy
      summary: Returns a single Soft Delete Policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Soft Delete Policy
        in: path
        name: soft-delete-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/soft-delete-policy-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - soft-delete-policy
    put:
      operationId: put-soft-delete-policy
      summary: Update an existing Soft Delete Policy by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Soft Delete Policy
        in: path
        name: soft-delete-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/soft-delete-policy-properties'
        description: Attributes to replace in the Soft Delete Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/soft-delete-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - soft-delete-policy
    patch:
      operationId: patch-soft-delete-policy
      summary: Update an existing Soft Delete Policy by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Soft Delete Policy
        in: path
        name: soft-delete-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Soft Delete Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/soft-delete-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - soft-delete-policy
    delete:
      summary: Delete a Soft Delete Policy
      operationId: delete-soft-delete-policy
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Soft Delete Policy
        in: path
        name: soft-delete-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - soft-delete-policy

  /recurring-task-chains:
    get:
      summary: Returns a list of all Recurring Task Chain objects
      operationId: list-recurring-task-chains
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-chain-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task-chain
    post:
      summary: Add a new Recurring Task Chain to the config
      operationId: add-recurring-task-chain
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-recurring-task-chain-request'
        description: Create a new Recurring Task Chain in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-chain-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task-chain
  /recurring-task-chains/{recurring-task-chain-name}:
    get:
      operationId: get-recurring-task-chain
      summary: Returns a single Recurring Task Chain
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Recurring Task Chain
        in: path
        name: recurring-task-chain-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-chain-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task-chain
    put:
      operationId: put-recurring-task-chain
      summary: Update an existing Recurring Task Chain by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Recurring Task Chain
        in: path
        name: recurring-task-chain-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/recurring-task-chain-properties'
        description: Attributes to replace in the Recurring Task Chain
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-chain-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task-chain
    patch:
      operationId: patch-recurring-task-chain
      summary: Update an existing Recurring Task Chain by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Recurring Task Chain
        in: path
        name: recurring-task-chain-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Recurring Task Chain
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-chain-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task-chain
    delete:
      summary: Delete a Recurring Task Chain
      operationId: delete-recurring-task-chain
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Recurring Task Chain
        in: path
        name: recurring-task-chain-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task-chain

  /gauges:
    get:
      summary: Returns a list of all Gauge objects
      operationId: list-gauges
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge
    post:
      summary: Add a new Gauge to the config
      operationId: add-gauge
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-gauge-request'
        description: Create a new Gauge in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge
  /gauges/{gauge-name}:
    get:
      operationId: get-gauge
      summary: Returns a single Gauge
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Gauge
        in: path
        name: gauge-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge
    put:
      operationId: put-gauge
      summary: Update an existing Gauge by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Gauge
        in: path
        name: gauge-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/gauge-properties'
        description: Attributes to replace in the Gauge
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge
    patch:
      operationId: patch-gauge
      summary: Update an existing Gauge by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Gauge
        in: path
        name: gauge-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Gauge
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge
    delete:
      summary: Delete a Gauge
      operationId: delete-gauge
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Gauge
        in: path
        name: gauge-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge

  /search-reference-criteria:
    get:
      summary: Returns a list of all Search Reference Criteria objects
      operationId: list-search-reference-criteria
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-reference-criteria-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-reference-criteria
    post:
      summary: Add a new Search Reference Criteria to the config
      operationId: add-search-reference-criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-search-reference-criteria-request'
        description: Create a new Search Reference Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-reference-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-reference-criteria
  /search-reference-criteria/{search-reference-criteria-name}:
    get:
      operationId: get-search-reference-criteria
      summary: Returns a single Search Reference Criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Search Reference Criteria
        in: path
        name: search-reference-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-reference-criteria-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-reference-criteria
    put:
      operationId: put-search-reference-criteria
      summary: Update an existing Search Reference Criteria by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Search Reference Criteria
        in: path
        name: search-reference-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/search-reference-criteria-properties'
        description: Attributes to replace in the Search Reference Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-reference-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-reference-criteria
    patch:
      operationId: patch-search-reference-criteria
      summary: Update an existing Search Reference Criteria by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Search Reference Criteria
        in: path
        name: search-reference-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Search Reference Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-reference-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-reference-criteria
    delete:
      summary: Delete a Search Reference Criteria
      operationId: delete-search-reference-criteria
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Search Reference Criteria
        in: path
        name: search-reference-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-reference-criteria

  /entry-caches:
    get:
      summary: Returns a list of all Entry Cache objects
      operationId: list-entry-caches
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/entry-cache-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - entry-cache
    post:
      summary: Add a new Entry Cache to the config
      operationId: add-entry-cache
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-entry-cache-request'
        description: Create a new Entry Cache in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/entry-cache-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - entry-cache
  /entry-caches/{entry-cache-name}:
    get:
      operationId: get-entry-cache
      summary: Returns a single Entry Cache
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Entry Cache
        in: path
        name: entry-cache-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/entry-cache-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - entry-cache
    put:
      operationId: put-entry-cache
      summary: Update an existing Entry Cache by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Entry Cache
        in: path
        name: entry-cache-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/entry-cache-properties'
        description: Attributes to replace in the Entry Cache
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/entry-cache-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - entry-cache
    patch:
      operationId: patch-entry-cache
      summary: Update an existing Entry Cache by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Entry Cache
        in: path
        name: entry-cache-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Entry Cache
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/entry-cache-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - entry-cache
    delete:
      summary: Delete a Entry Cache
      operationId: delete-entry-cache
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Entry Cache
        in: path
        name: entry-cache-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - entry-cache

  /access-control-handler:
    get:
      operationId: get-access-control-handler
      summary: Returns the Access Control Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/access-control-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-control-handler
    put:
      operationId: put-access-control-handler
      summary: Update the Access Control Handler, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/access-control-handler-properties'
        description: Attributes to replace in the Access Control Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/access-control-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-control-handler
    patch:
      operationId: patch-access-control-handler
      summary: Update an existing Access Control Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Access Control Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/access-control-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - access-control-handler

  /alert-handlers:
    get:
      summary: Returns a list of all Alert Handler objects
      operationId: list-alert-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/alert-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alert-handler
    post:
      summary: Add a new Alert Handler to the config
      operationId: add-alert-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-alert-handler-request'
        description: Create a new Alert Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/alert-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alert-handler
  /alert-handlers/{alert-handler-name}:
    get:
      operationId: get-alert-handler
      summary: Returns a single Alert Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Alert Handler
        in: path
        name: alert-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/alert-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alert-handler
    put:
      operationId: put-alert-handler
      summary: Update an existing Alert Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Alert Handler
        in: path
        name: alert-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/alert-handler-properties'
        description: Attributes to replace in the Alert Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/alert-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alert-handler
    patch:
      operationId: patch-alert-handler
      summary: Update an existing Alert Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Alert Handler
        in: path
        name: alert-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Alert Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/alert-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alert-handler
    delete:
      summary: Delete a Alert Handler
      operationId: delete-alert-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Alert Handler
        in: path
        name: alert-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alert-handler

  /license:
    get:
      operationId: get-license
      summary: Returns the License
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/license-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - license
    put:
      operationId: put-license
      summary: Update the License, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/license-properties'
        description: Attributes to replace in the License
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/license-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - license
    patch:
      operationId: patch-license
      summary: Update an existing License by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the License
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/license-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - license

  /cipher-stream-providers:
    get:
      summary: Returns a list of all Cipher Stream Provider objects
      operationId: list-cipher-stream-providers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-stream-provider-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-stream-provider
    post:
      summary: Add a new Cipher Stream Provider to the config
      operationId: add-cipher-stream-provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-cipher-stream-provider-request'
        description: Create a new Cipher Stream Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-stream-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-stream-provider
  /cipher-stream-providers/{cipher-stream-provider-name}:
    get:
      operationId: get-cipher-stream-provider
      summary: Returns a single Cipher Stream Provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Cipher Stream Provider
        in: path
        name: cipher-stream-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-stream-provider-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-stream-provider
    put:
      operationId: put-cipher-stream-provider
      summary: Update an existing Cipher Stream Provider by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Cipher Stream Provider
        in: path
        name: cipher-stream-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/cipher-stream-provider-properties'
        description: Attributes to replace in the Cipher Stream Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-stream-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-stream-provider
    patch:
      operationId: patch-cipher-stream-provider
      summary: Update an existing Cipher Stream Provider by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Cipher Stream Provider
        in: path
        name: cipher-stream-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Cipher Stream Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/cipher-stream-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-stream-provider
    delete:
      summary: Delete a Cipher Stream Provider
      operationId: delete-cipher-stream-provider
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Cipher Stream Provider
        in: path
        name: cipher-stream-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - cipher-stream-provider

  /vault-authentication-methods:
    get:
      summary: Returns a list of all Vault Authentication Method objects
      operationId: list-vault-authentication-methods
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/vault-authentication-method-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - vault-authentication-method
    post:
      summary: Add a new Vault Authentication Method to the config
      operationId: add-vault-authentication-method
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-vault-authentication-method-request'
        description: Create a new Vault Authentication Method in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/vault-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - vault-authentication-method
  /vault-authentication-methods/{vault-authentication-method-name}:
    get:
      operationId: get-vault-authentication-method
      summary: Returns a single Vault Authentication Method
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Vault Authentication Method
        in: path
        name: vault-authentication-method-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/vault-authentication-method-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - vault-authentication-method
    put:
      operationId: put-vault-authentication-method
      summary: Update an existing Vault Authentication Method by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Vault Authentication Method
        in: path
        name: vault-authentication-method-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/vault-authentication-method-properties'
        description: Attributes to replace in the Vault Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/vault-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - vault-authentication-method
    patch:
      operationId: patch-vault-authentication-method
      summary: Update an existing Vault Authentication Method by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Vault Authentication Method
        in: path
        name: vault-authentication-method-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Vault Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/vault-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - vault-authentication-method
    delete:
      summary: Delete a Vault Authentication Method
      operationId: delete-vault-authentication-method
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Vault Authentication Method
        in: path
        name: vault-authentication-method-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - vault-authentication-method

  /account-status-notification-handlers:
    get:
      summary: Returns a list of all Account Status Notification Handler objects
      operationId: list-account-status-notification-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/account-status-notification-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - account-status-notification-handler
    post:
      summary: Add a new Account Status Notification Handler to the config
      operationId: add-account-status-notification-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-account-status-notification-handler-request'
        description: Create a new Account Status Notification Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/account-status-notification-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - account-status-notification-handler
  /account-status-notification-handlers/{account-status-notification-handler-name}:
    get:
      operationId: get-account-status-notification-handler
      summary: Returns a single Account Status Notification Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Account Status Notification Handler
        in: path
        name: account-status-notification-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/account-status-notification-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - account-status-notification-handler
    put:
      operationId: put-account-status-notification-handler
      summary: Update an existing Account Status Notification Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Account Status Notification Handler
        in: path
        name: account-status-notification-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/account-status-notification-handler-properties'
        description: Attributes to replace in the Account Status Notification Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/account-status-notification-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - account-status-notification-handler
    patch:
      operationId: patch-account-status-notification-handler
      summary: Update an existing Account Status Notification Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Account Status Notification Handler
        in: path
        name: account-status-notification-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Account Status Notification Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/account-status-notification-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - account-status-notification-handler
    delete:
      summary: Delete a Account Status Notification Handler
      operationId: delete-account-status-notification-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Account Status Notification Handler
        in: path
        name: account-status-notification-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - account-status-notification-handler

  /server-groups:
    get:
      summary: Returns a list of all Server Group objects
      operationId: list-server-groups
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-group-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-group
    post:
      summary: Add a new Server Group to the config
      operationId: add-server-group
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-server-group-request'
        description: Create a new Server Group in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-group-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-group
  /server-groups/{server-group-name}:
    get:
      operationId: get-server-group
      summary: Returns a single Server Group
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Server Group
        in: path
        name: server-group-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-group-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-group
    put:
      operationId: put-server-group
      summary: Update an existing Server Group by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Server Group
        in: path
        name: server-group-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/server-group-properties'
        description: Attributes to replace in the Server Group
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-group-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-group
    patch:
      operationId: patch-server-group
      summary: Update an existing Server Group by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Server Group
        in: path
        name: server-group-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Server Group
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/server-group-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-group
    delete:
      summary: Delete a Server Group
      operationId: delete-server-group
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Server Group
        in: path
        name: server-group-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - server-group

  /pass-through-authentication-handlers:
    get:
      summary: Returns a list of all Pass Through Authentication Handler objects
      operationId: list-pass-through-authentication-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
    post:
      summary: Add a new Pass Through Authentication Handler to the config
      operationId: add-pass-through-authentication-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-pass-through-authentication-handler-request'
        description: Create a new Pass Through Authentication Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
  /pass-through-authentication-handlers/{pass-through-authentication-handler-name}:
    get:
      operationId: get-pass-through-authentication-handler
      summary: Returns a single Pass Through Authentication Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Pass Through Authentication Handler
        in: path
        name: pass-through-authentication-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
    put:
      operationId: put-pass-through-authentication-handler
      summary: Update an existing Pass Through Authentication Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Pass Through Authentication Handler
        in: path
        name: pass-through-authentication-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/pass-through-authentication-handler-properties'
        description: Attributes to replace in the Pass Through Authentication Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
    patch:
      operationId: patch-pass-through-authentication-handler
      summary: Update an existing Pass Through Authentication Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Pass Through Authentication Handler
        in: path
        name: pass-through-authentication-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Pass Through Authentication Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
    delete:
      summary: Delete a Pass Through Authentication Handler
      operationId: delete-pass-through-authentication-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Pass Through Authentication Handler
        in: path
        name: pass-through-authentication-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler

  /consent-definitions:
    get:
      summary: Returns a list of all Consent Definition objects
      operationId: list-consent-definitions
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition
    post:
      summary: Add a new Consent Definition to the config
      operationId: add-consent-definition
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-consent-definition-request'
        description: Create a new Consent Definition in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition
  /consent-definitions/{consent-definition-name}:
    get:
      operationId: get-consent-definition
      summary: Returns a single Consent Definition
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition
    put:
      operationId: put-consent-definition
      summary: Update an existing Consent Definition by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/consent-definition-properties'
        description: Attributes to replace in the Consent Definition
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition
    patch:
      operationId: patch-consent-definition
      summary: Update an existing Consent Definition by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Consent Definition
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition
    delete:
      summary: Delete a Consent Definition
      operationId: delete-consent-definition
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition

  /consent-definitions/{consent-definition-name}/consent-definition-localizations:
    get:
      summary: Returns a list of all Consent Definition Localization objects
      operationId: list-consent-definition-localizations
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-localization-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition-localization
    post:
      summary: Add a new Consent Definition Localization to the config
      operationId: add-consent-definition-localization
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-consent-definition-localization-request'
        description: Create a new Consent Definition Localization in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-localization-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition-localization
  /consent-definitions/{consent-definition-name}/consent-definition-localizations/{consent-definition-localization-name}:
    get:
      operationId: get-consent-definition-localization
      summary: Returns a single Consent Definition Localization
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Consent Definition Localization
        in: path
        name: consent-definition-localization-name
        required: true
        type: string
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-localization-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition-localization
    put:
      operationId: put-consent-definition-localization
      summary: Update an existing Consent Definition Localization by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Consent Definition Localization
        in: path
        name: consent-definition-localization-name
        required: true
        type: string
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/consent-definition-localization-properties'
        description: Attributes to replace in the Consent Definition Localization
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-localization-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition-localization
    patch:
      operationId: patch-consent-definition-localization
      summary: Update an existing Consent Definition Localization by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Consent Definition Localization
        in: path
        name: consent-definition-localization-name
        required: true
        type: string
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Consent Definition Localization
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-definition-localization-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition-localization
    delete:
      summary: Delete a Consent Definition Localization
      operationId: delete-consent-definition-localization
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Consent Definition Localization
        in: path
        name: consent-definition-localization-name
        required: true
        type: string
      - description: Name of the Consent Definition
        in: path
        name: consent-definition-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-definition-localization

  /consent-service:
    get:
      operationId: get-consent-service
      summary: Returns the Consent Service
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-service-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-service
    put:
      operationId: put-consent-service
      summary: Update the Consent Service, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/consent-service-properties'
        description: Attributes to replace in the Consent Service
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-service-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-service
    patch:
      operationId: patch-consent-service
      summary: Update an existing Consent Service by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Consent Service
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consent-service-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - consent-service

  /topology-admin-users:
    get:
      summary: Returns a list of all Topology Admin User objects
      operationId: list-topology-admin-users
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/topology-admin-user-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - topology-admin-user
    post:
      summary: Add a new Topology Admin User to the config
      operationId: add-topology-admin-user
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-topology-admin-user-request'
        description: Create a new Topology Admin User in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/topology-admin-user-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - topology-admin-user
  /topology-admin-users/{topology-admin-user-name}:
    get:
      operationId: get-topology-admin-user
      summary: Returns a single Topology Admin User
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Topology Admin User
        in: path
        name: topology-admin-user-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/topology-admin-user-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - topology-admin-user
    put:
      operationId: put-topology-admin-user
      summary: Update an existing Topology Admin User by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Topology Admin User
        in: path
        name: topology-admin-user-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/topology-admin-user-properties'
        description: Attributes to replace in the Topology Admin User
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/topology-admin-user-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - topology-admin-user
    patch:
      operationId: patch-topology-admin-user
      summary: Update an existing Topology Admin User by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Topology Admin User
        in: path
        name: topology-admin-user-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Topology Admin User
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/topology-admin-user-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - topology-admin-user
    delete:
      summary: Delete a Topology Admin User
      operationId: delete-topology-admin-user
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Topology Admin User
        in: path
        name: topology-admin-user-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - topology-admin-user

  /change-subscriptions:
    get:
      summary: Returns a list of all Change Subscription objects
      operationId: list-change-subscriptions
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription
    post:
      summary: Add a new Change Subscription to the config
      operationId: add-change-subscription
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-change-subscription-request'
        description: Create a new Change Subscription in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription
  /change-subscriptions/{change-subscription-name}:
    get:
      operationId: get-change-subscription
      summary: Returns a single Change Subscription
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Change Subscription
        in: path
        name: change-subscription-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription
    put:
      operationId: put-change-subscription
      summary: Update an existing Change Subscription by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Change Subscription
        in: path
        name: change-subscription-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/change-subscription-properties'
        description: Attributes to replace in the Change Subscription
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription
    patch:
      operationId: patch-change-subscription
      summary: Update an existing Change Subscription by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Change Subscription
        in: path
        name: change-subscription-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Change Subscription
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription
    delete:
      summary: Delete a Change Subscription
      operationId: delete-change-subscription
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Change Subscription
        in: path
        name: change-subscription-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription

  /ldap-sdk-debug-logger:
    get:
      operationId: get-ldap-sdk-debug-logger
      summary: Returns the LDAP SDK Debug Logger
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ldap-sdk-debug-logger-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-sdk-debug-logger
    put:
      operationId: put-ldap-sdk-debug-logger
      summary: Update the LDAP SDK Debug Logger, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/ldap-sdk-debug-logger-properties'
        description: Attributes to replace in the LDAP SDK Debug Logger
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ldap-sdk-debug-logger-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-sdk-debug-logger
    patch:
      operationId: patch-ldap-sdk-debug-logger
      summary: Update an existing LDAP SDK Debug Logger by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the LDAP SDK Debug Logger
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ldap-sdk-debug-logger-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - ldap-sdk-debug-logger

  /conjur-authentication-methods:
    get:
      summary: Returns a list of all Conjur Authentication Method objects
      operationId: list-conjur-authentication-methods
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/conjur-authentication-method-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - conjur-authentication-method
    post:
      summary: Add a new Conjur Authentication Method to the config
      operationId: add-conjur-authentication-method
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-conjur-authentication-method-request'
        description: Create a new Conjur Authentication Method in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/conjur-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - conjur-authentication-method
  /conjur-authentication-methods/{conjur-authentication-method-name}:
    get:
      operationId: get-conjur-authentication-method
      summary: Returns a single Conjur Authentication Method
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Conjur Authentication Method
        in: path
        name: conjur-authentication-method-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/conjur-authentication-method-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - conjur-authentication-method
    put:
      operationId: put-conjur-authentication-method
      summary: Update an existing Conjur Authentication Method by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Conjur Authentication Method
        in: path
        name: conjur-authentication-method-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/conjur-authentication-method-properties'
        description: Attributes to replace in the Conjur Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/conjur-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - conjur-authentication-method
    patch:
      operationId: patch-conjur-authentication-method
      summary: Update an existing Conjur Authentication Method by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Conjur Authentication Method
        in: path
        name: conjur-authentication-method-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Conjur Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/conjur-authentication-method-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - conjur-authentication-method
    delete:
      summary: Delete a Conjur Authentication Method
      operationId: delete-conjur-authentication-method
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Conjur Authentication Method
        in: path
        name: conjur-authentication-method-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - conjur-authentication-method

  /constructed-attributes:
    get:
      summary: Returns a list of all Constructed Attribute objects
      operationId: list-constructed-attributes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/constructed-attribute-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - constructed-attribute
    post:
      summary: Add a new Constructed Attribute to the config
      operationId: add-constructed-attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-constructed-attribute-request'
        description: Create a new Constructed Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/constructed-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - constructed-attribute
  /constructed-attributes/{constructed-attribute-name}:
    get:
      operationId: get-constructed-attribute
      summary: Returns a single Constructed Attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Constructed Attribute
        in: path
        name: constructed-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/constructed-attribute-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - constructed-attribute
    put:
      operationId: put-constructed-attribute
      summary: Update an existing Constructed Attribute by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Constructed Attribute
        in: path
        name: constructed-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/constructed-attribute-properties'
        description: Attributes to replace in the Constructed Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/constructed-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - constructed-attribute
    patch:
      operationId: patch-constructed-attribute
      summary: Update an existing Constructed Attribute by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Constructed Attribute
        in: path
        name: constructed-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Constructed Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/constructed-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - constructed-attribute
    delete:
      summary: Delete a Constructed Attribute
      operationId: delete-constructed-attribute
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Constructed Attribute
        in: path
        name: constructed-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - constructed-attribute

  /password-validators:
    get:
      summary: Returns a list of all Password Validator objects
      operationId: list-password-validators
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-validator-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-validator
    post:
      summary: Add a new Password Validator to the config
      operationId: add-password-validator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-password-validator-request'
        description: Create a new Password Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-validator
  /password-validators/{password-validator-name}:
    get:
      operationId: get-password-validator
      summary: Returns a single Password Validator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Password Validator
        in: path
        name: password-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-validator-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-validator
    put:
      operationId: put-password-validator
      summary: Update an existing Password Validator by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Validator
        in: path
        name: password-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/password-validator-properties'
        description: Attributes to replace in the Password Validator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-validator
    patch:
      operationId: patch-password-validator
      summary: Update an existing Password Validator by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Validator
        in: path
        name: password-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Password Validator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-validator
    delete:
      summary: Delete a Password Validator
      operationId: delete-password-validator
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Validator
        in: path
        name: password-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-validator

  /alarm-manager:
    get:
      operationId: get-alarm-manager
      summary: Returns the Alarm Manager
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/alarm-manager-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alarm-manager
    put:
      operationId: put-alarm-manager
      summary: Update the Alarm Manager, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/alarm-manager-properties'
        description: Attributes to replace in the Alarm Manager
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/alarm-manager-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alarm-manager
    patch:
      operationId: patch-alarm-manager
      summary: Update an existing Alarm Manager by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Alarm Manager
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/alarm-manager-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - alarm-manager

  /connection-handlers:
    get:
      summary: Returns a list of all Connection Handler objects
      operationId: list-connection-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
    post:
      summary: Add a new Connection Handler to the config
      operationId: add-connection-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-connection-handler-request'
        description: Create a new Connection Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
  /connection-handlers/{connection-handler-name}:
    get:
      operationId: get-connection-handler
      summary: Returns a single Connection Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Connection Handler
        in: path
        name: connection-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
    put:
      operationId: put-connection-handler
      summary: Update an existing Connection Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Handler
        in: path
        name: connection-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/connection-handler-properties'
        description: Attributes to replace in the Connection Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
    patch:
      operationId: patch-connection-handler
      summary: Update an existing Connection Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Handler
        in: path
        name: connection-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Connection Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
    delete:
      summary: Delete a Connection Handler
      operationId: delete-connection-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Handler
        in: path
        name: connection-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler

  /web-application-extensions:
    get:
      summary: Returns a list of all Web Application Extension objects
      operationId: list-web-application-extensions
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/web-application-extension-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - web-application-extension
    post:
      summary: Add a new Web Application Extension to the config
      operationId: add-web-application-extension
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-web-application-extension-request'
        description: Create a new Web Application Extension in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/web-application-extension-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - web-application-extension
  /web-application-extensions/{web-application-extension-name}:
    get:
      operationId: get-web-application-extension
      summary: Returns a single Web Application Extension
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Web Application Extension
        in: path
        name: web-application-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/web-application-extension-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - web-application-extension
    put:
      operationId: put-web-application-extension
      summary: Update an existing Web Application Extension by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Web Application Extension
        in: path
        name: web-application-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/web-application-extension-properties'
        description: Attributes to replace in the Web Application Extension
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/web-application-extension-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - web-application-extension
    patch:
      operationId: patch-web-application-extension
      summary: Update an existing Web Application Extension by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Web Application Extension
        in: path
        name: web-application-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Web Application Extension
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/web-application-extension-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - web-application-extension
    delete:
      summary: Delete a Web Application Extension
      operationId: delete-web-application-extension
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Web Application Extension
        in: path
        name: web-application-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - web-application-extension

  /trusted-certificates:
    get:
      summary: Returns a list of all Trusted Certificate objects
      operationId: list-trusted-certificates
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trusted-certificate-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trusted-certificate
    post:
      summary: Add a new Trusted Certificate to the config
      operationId: add-trusted-certificate
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-trusted-certificate-request'
        description: Create a new Trusted Certificate in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trusted-certificate-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trusted-certificate
  /trusted-certificates/{trusted-certificate-name}:
    get:
      operationId: get-trusted-certificate
      summary: Returns a single Trusted Certificate
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Trusted Certificate
        in: path
        name: trusted-certificate-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trusted-certificate-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trusted-certificate
    put:
      operationId: put-trusted-certificate
      summary: Update an existing Trusted Certificate by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Trusted Certificate
        in: path
        name: trusted-certificate-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/trusted-certificate-properties'
        description: Attributes to replace in the Trusted Certificate
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trusted-certificate-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trusted-certificate
    patch:
      operationId: patch-trusted-certificate
      summary: Update an existing Trusted Certificate by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Trusted Certificate
        in: path
        name: trusted-certificate-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Trusted Certificate
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/trusted-certificate-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trusted-certificate
    delete:
      summary: Delete a Trusted Certificate
      operationId: delete-trusted-certificate
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Trusted Certificate
        in: path
        name: trusted-certificate-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - trusted-certificate

  /search-entry-criteria:
    get:
      summary: Returns a list of all Search Entry Criteria objects
      operationId: list-search-entry-criteria
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-entry-criteria-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-entry-criteria
    post:
      summary: Add a new Search Entry Criteria to the config
      operationId: add-search-entry-criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-search-entry-criteria-request'
        description: Create a new Search Entry Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-entry-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-entry-criteria
  /search-entry-criteria/{search-entry-criteria-name}:
    get:
      operationId: get-search-entry-criteria
      summary: Returns a single Search Entry Criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Search Entry Criteria
        in: path
        name: search-entry-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-entry-criteria-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-entry-criteria
    put:
      operationId: put-search-entry-criteria
      summary: Update an existing Search Entry Criteria by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Search Entry Criteria
        in: path
        name: search-entry-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/search-entry-criteria-properties'
        description: Attributes to replace in the Search Entry Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-entry-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-entry-criteria
    patch:
      operationId: patch-search-entry-criteria
      summary: Update an existing Search Entry Criteria by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Search Entry Criteria
        in: path
        name: search-entry-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Search Entry Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/search-entry-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-entry-criteria
    delete:
      summary: Delete a Search Entry Criteria
      operationId: delete-search-entry-criteria
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Search Entry Criteria
        in: path
        name: search-entry-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - search-entry-criteria

  /failure-lockout-actions:
    get:
      summary: Returns a list of all Failure Lockout Action objects
      operationId: list-failure-lockout-actions
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/failure-lockout-action-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - failure-lockout-action
    post:
      summary: Add a new Failure Lockout Action to the config
      operationId: add-failure-lockout-action
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-failure-lockout-action-request'
        description: Create a new Failure Lockout Action in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/failure-lockout-action-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - failure-lockout-action
  /failure-lockout-actions/{failure-lockout-action-name}:
    get:
      operationId: get-failure-lockout-action
      summary: Returns a single Failure Lockout Action
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Failure Lockout Action
        in: path
        name: failure-lockout-action-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/failure-lockout-action-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - failure-lockout-action
    put:
      operationId: put-failure-lockout-action
      summary: Update an existing Failure Lockout Action by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Failure Lockout Action
        in: path
        name: failure-lockout-action-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/failure-lockout-action-properties'
        description: Attributes to replace in the Failure Lockout Action
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/failure-lockout-action-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - failure-lockout-action
    patch:
      operationId: patch-failure-lockout-action
      summary: Update an existing Failure Lockout Action by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Failure Lockout Action
        in: path
        name: failure-lockout-action-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Failure Lockout Action
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/failure-lockout-action-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - failure-lockout-action
    delete:
      summary: Delete a Failure Lockout Action
      operationId: delete-failure-lockout-action
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Failure Lockout Action
        in: path
        name: failure-lockout-action-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - failure-lockout-action

  /certificate-mappers:
    get:
      summary: Returns a list of all Certificate Mapper objects
      operationId: list-certificate-mappers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/certificate-mapper-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - certificate-mapper
    post:
      summary: Add a new Certificate Mapper to the config
      operationId: add-certificate-mapper
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-certificate-mapper-request'
        description: Create a new Certificate Mapper in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/certificate-mapper-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - certificate-mapper
  /certificate-mappers/{certificate-mapper-name}:
    get:
      operationId: get-certificate-mapper
      summary: Returns a single Certificate Mapper
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Certificate Mapper
        in: path
        name: certificate-mapper-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/certificate-mapper-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - certificate-mapper
    put:
      operationId: put-certificate-mapper
      summary: Update an existing Certificate Mapper by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Certificate Mapper
        in: path
        name: certificate-mapper-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/certificate-mapper-properties'
        description: Attributes to replace in the Certificate Mapper
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/certificate-mapper-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - certificate-mapper
    patch:
      operationId: patch-certificate-mapper
      summary: Update an existing Certificate Mapper by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Certificate Mapper
        in: path
        name: certificate-mapper-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Certificate Mapper
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/certificate-mapper-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - certificate-mapper
    delete:
      summary: Delete a Certificate Mapper
      operationId: delete-certificate-mapper
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Certificate Mapper
        in: path
        name: certificate-mapper-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - certificate-mapper

  /log-publishers:
    get:
      summary: Returns a list of all Log Publisher objects
      operationId: list-log-publishers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-publisher-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-publisher
    post:
      summary: Add a new Log Publisher to the config
      operationId: add-log-publisher
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-log-publisher-request'
        description: Create a new Log Publisher in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-publisher-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-publisher
  /log-publishers/{log-publisher-name}:
    get:
      operationId: get-log-publisher
      summary: Returns a single Log Publisher
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-publisher-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-publisher
    put:
      operationId: put-log-publisher
      summary: Update an existing Log Publisher by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/log-publisher-properties'
        description: Attributes to replace in the Log Publisher
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-publisher-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-publisher
    patch:
      operationId: patch-log-publisher
      summary: Update an existing Log Publisher by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Log Publisher
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-publisher-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-publisher
    delete:
      summary: Delete a Log Publisher
      operationId: delete-log-publisher
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-publisher

  /log-publishers/{log-publisher-name}/debug-targets:
    get:
      summary: Returns a list of all Debug Target objects
      operationId: list-debug-targets
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/debug-target-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - debug-target
    post:
      summary: Add a new Debug Target to the config
      operationId: add-debug-target
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-debug-target-request'
        description: Create a new Debug Target in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/debug-target-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - debug-target
  /log-publishers/{log-publisher-name}/debug-targets/{debug-target-name}:
    get:
      operationId: get-debug-target
      summary: Returns a single Debug Target
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Debug Target
        in: path
        name: debug-target-name
        required: true
        type: string
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/debug-target-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - debug-target
    put:
      operationId: put-debug-target
      summary: Update an existing Debug Target by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Debug Target
        in: path
        name: debug-target-name
        required: true
        type: string
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/debug-target-properties'
        description: Attributes to replace in the Debug Target
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/debug-target-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - debug-target
    patch:
      operationId: patch-debug-target
      summary: Update an existing Debug Target by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Debug Target
        in: path
        name: debug-target-name
        required: true
        type: string
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Debug Target
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/debug-target-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - debug-target
    delete:
      summary: Delete a Debug Target
      operationId: delete-debug-target
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Debug Target
        in: path
        name: debug-target-name
        required: true
        type: string
      - description: Name of the Log Publisher
        in: path
        name: log-publisher-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - debug-target

  /replication-assurance-policies:
    get:
      summary: Returns a list of all Replication Assurance Policy objects
      operationId: list-replication-assurance-policies
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-assurance-policy-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-assurance-policy
    post:
      summary: Add a new Replication Assurance Policy to the config
      operationId: add-replication-assurance-policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-replication-assurance-policy-request'
        description: Create a new Replication Assurance Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-assurance-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-assurance-policy
  /replication-assurance-policies/{replication-assurance-policy-name}:
    get:
      operationId: get-replication-assurance-policy
      summary: Returns a single Replication Assurance Policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Replication Assurance Policy
        in: path
        name: replication-assurance-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-assurance-policy-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-assurance-policy
    put:
      operationId: put-replication-assurance-policy
      summary: Update an existing Replication Assurance Policy by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Replication Assurance Policy
        in: path
        name: replication-assurance-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/replication-assurance-policy-properties'
        description: Attributes to replace in the Replication Assurance Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-assurance-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-assurance-policy
    patch:
      operationId: patch-replication-assurance-policy
      summary: Update an existing Replication Assurance Policy by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Replication Assurance Policy
        in: path
        name: replication-assurance-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Replication Assurance Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/replication-assurance-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-assurance-policy
    delete:
      summary: Delete a Replication Assurance Policy
      operationId: delete-replication-assurance-policy
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Replication Assurance Policy
        in: path
        name: replication-assurance-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - replication-assurance-policy

  /key-manager-providers:
    get:
      summary: Returns a list of all Key Manager Provider objects
      operationId: list-key-manager-providers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-manager-provider-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-manager-provider
    post:
      summary: Add a new Key Manager Provider to the config
      operationId: add-key-manager-provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-key-manager-provider-request'
        description: Create a new Key Manager Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-manager-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-manager-provider
  /key-manager-providers/{key-manager-provider-name}:
    get:
      operationId: get-key-manager-provider
      summary: Returns a single Key Manager Provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Key Manager Provider
        in: path
        name: key-manager-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-manager-provider-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-manager-provider
    put:
      operationId: put-key-manager-provider
      summary: Update an existing Key Manager Provider by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Key Manager Provider
        in: path
        name: key-manager-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/key-manager-provider-properties'
        description: Attributes to replace in the Key Manager Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-manager-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-manager-provider
    patch:
      operationId: patch-key-manager-provider
      summary: Update an existing Key Manager Provider by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Key Manager Provider
        in: path
        name: key-manager-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Key Manager Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/key-manager-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-manager-provider
    delete:
      summary: Delete a Key Manager Provider
      operationId: delete-key-manager-provider
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Key Manager Provider
        in: path
        name: key-manager-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - key-manager-provider

  /external-servers:
    get:
      summary: Returns a list of all External Server objects
      operationId: list-external-servers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
    post:
      summary: Add a new External Server to the config
      operationId: add-external-server
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-external-server-request'
        description: Create a new External Server in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
  /external-servers/{external-server-name}:
    get:
      operationId: get-external-server
      summary: Returns a single External Server
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the External Server
        in: path
        name: external-server-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
    put:
      operationId: put-external-server
      summary: Update an existing External Server by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the External Server
        in: path
        name: external-server-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/external-server-properties'
        description: Attributes to replace in the External Server
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
    patch:
      operationId: patch-external-server
      summary: Update an existing External Server by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the External Server
        in: path
        name: external-server-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the External Server
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
    delete:
      summary: Delete a External Server
      operationId: delete-external-server
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the External Server
        in: path
        name: external-server-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server

  /dn-maps:
    get:
      summary: Returns a list of all DN Map objects
      operationId: list-dn-maps
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/dn-map-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - dn-map
    post:
      summary: Add a new DN Map to the config
      operationId: add-dn-map
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-dn-map-request'
        description: Create a new DN Map in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/dn-map-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - dn-map
  /dn-maps/{dn-map-name}:
    get:
      operationId: get-dn-map
      summary: Returns a single DN Map
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the DN Map
        in: path
        name: dn-map-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/dn-map-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - dn-map
    put:
      operationId: put-dn-map
      summary: Update an existing DN Map by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the DN Map
        in: path
        name: dn-map-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/dn-map-properties'
        description: Attributes to replace in the DN Map
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/dn-map-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - dn-map
    patch:
      operationId: patch-dn-map
      summary: Update an existing DN Map by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the DN Map
        in: path
        name: dn-map-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the DN Map
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/dn-map-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - dn-map
    delete:
      summary: Delete a DN Map
      operationId: delete-dn-map
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the DN Map
        in: path
        name: dn-map-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - dn-map

  /change-subscription-handlers:
    get:
      summary: Returns a list of all Change Subscription Handler objects
      operationId: list-change-subscription-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription-handler
    post:
      summary: Add a new Change Subscription Handler to the config
      operationId: add-change-subscription-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-change-subscription-handler-request'
        description: Create a new Change Subscription Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription-handler
  /change-subscription-handlers/{change-subscription-handler-name}:
    get:
      operationId: get-change-subscription-handler
      summary: Returns a single Change Subscription Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Change Subscription Handler
        in: path
        name: change-subscription-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription-handler
    put:
      operationId: put-change-subscription-handler
      summary: Update an existing Change Subscription Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Change Subscription Handler
        in: path
        name: change-subscription-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/change-subscription-handler-properties'
        description: Attributes to replace in the Change Subscription Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription-handler
    patch:
      operationId: patch-change-subscription-handler
      summary: Update an existing Change Subscription Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Change Subscription Handler
        in: path
        name: change-subscription-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Change Subscription Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/change-subscription-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription-handler
    delete:
      summary: Delete a Change Subscription Handler
      operationId: delete-change-subscription-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Change Subscription Handler
        in: path
        name: change-subscription-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - change-subscription-handler

  /obscured-values:
    get:
      summary: Returns a list of all Obscured Value objects
      operationId: list-obscured-values
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/obscured-value-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - obscured-value
    post:
      summary: Add a new Obscured Value to the config
      operationId: add-obscured-value
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-obscured-value-request'
        description: Create a new Obscured Value in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/obscured-value-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - obscured-value
  /obscured-values/{obscured-value-name}:
    get:
      operationId: get-obscured-value
      summary: Returns a single Obscured Value
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Obscured Value
        in: path
        name: obscured-value-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/obscured-value-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - obscured-value
    put:
      operationId: put-obscured-value
      summary: Update an existing Obscured Value by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Obscured Value
        in: path
        name: obscured-value-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/obscured-value-properties'
        description: Attributes to replace in the Obscured Value
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/obscured-value-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - obscured-value
    patch:
      operationId: patch-obscured-value
      summary: Update an existing Obscured Value by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Obscured Value
        in: path
        name: obscured-value-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Obscured Value
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/obscured-value-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - obscured-value
    delete:
      summary: Delete a Obscured Value
      operationId: delete-obscured-value
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Obscured Value
        in: path
        name: obscured-value-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - obscured-value

  /crypto-manager:
    get:
      operationId: get-crypto-manager
      summary: Returns the Crypto Manager
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/crypto-manager-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - crypto-manager
    put:
      operationId: put-crypto-manager
      summary: Update the Crypto Manager, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/crypto-manager-properties'
        description: Attributes to replace in the Crypto Manager
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/crypto-manager-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - crypto-manager
    patch:
      operationId: patch-crypto-manager
      summary: Update an existing Crypto Manager by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Crypto Manager
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/crypto-manager-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - crypto-manager

  /monitor-providers:
    get:
      summary: Returns a list of all Monitor Provider objects
      operationId: list-monitor-providers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitor-provider-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitor-provider
    post:
      summary: Add a new Monitor Provider to the config
      operationId: add-monitor-provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-monitor-provider-request'
        description: Create a new Monitor Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitor-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitor-provider
  /monitor-providers/{monitor-provider-name}:
    get:
      operationId: get-monitor-provider
      summary: Returns a single Monitor Provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Monitor Provider
        in: path
        name: monitor-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitor-provider-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitor-provider
    put:
      operationId: put-monitor-provider
      summary: Update an existing Monitor Provider by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Monitor Provider
        in: path
        name: monitor-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/monitor-provider-properties'
        description: Attributes to replace in the Monitor Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitor-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitor-provider
    patch:
      operationId: patch-monitor-provider
      summary: Update an existing Monitor Provider by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Monitor Provider
        in: path
        name: monitor-provider-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Monitor Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitor-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitor-provider
    delete:
      summary: Delete a Monitor Provider
      operationId: delete-monitor-provider
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Monitor Provider
        in: path
        name: monitor-provider-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitor-provider

  /group-implementations:
    get:
      summary: Returns a list of all Group Implementation objects
      operationId: list-group-implementations
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/group-implementation-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - group-implementation
  /group-implementations/{group-implementation-name}:
    get:
      operationId: get-group-implementation
      summary: Returns a single Group Implementation
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Group Implementation
        in: path
        name: group-implementation-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/group-implementation-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - group-implementation
    put:
      operationId: put-group-implementation
      summary: Update an existing Group Implementation by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Group Implementation
        in: path
        name: group-implementation-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/group-implementation-properties'
        description: Attributes to replace in the Group Implementation
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/group-implementation-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - group-implementation
    patch:
      operationId: patch-group-implementation
      summary: Update an existing Group Implementation by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Group Implementation
        in: path
        name: group-implementation-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Group Implementation
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/group-implementation-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - group-implementation

  /gauge-data-sources:
    get:
      summary: Returns a list of all Gauge Data Source objects
      operationId: list-gauge-data-sources
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-data-source-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge-data-source
    post:
      summary: Add a new Gauge Data Source to the config
      operationId: add-gauge-data-source
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-gauge-data-source-request'
        description: Create a new Gauge Data Source in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-data-source-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge-data-source
  /gauge-data-sources/{gauge-data-source-name}:
    get:
      operationId: get-gauge-data-source
      summary: Returns a single Gauge Data Source
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Gauge Data Source
        in: path
        name: gauge-data-source-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-data-source-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge-data-source
    put:
      operationId: put-gauge-data-source
      summary: Update an existing Gauge Data Source by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Gauge Data Source
        in: path
        name: gauge-data-source-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/gauge-data-source-properties'
        description: Attributes to replace in the Gauge Data Source
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-data-source-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge-data-source
    patch:
      operationId: patch-gauge-data-source
      summary: Update an existing Gauge Data Source by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Gauge Data Source
        in: path
        name: gauge-data-source-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Gauge Data Source
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/gauge-data-source-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge-data-source
    delete:
      summary: Delete a Gauge Data Source
      operationId: delete-gauge-data-source
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Gauge Data Source
        in: path
        name: gauge-data-source-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - gauge-data-source

  /backends:
    get:
      summary: Returns a list of all Backend objects
      operationId: list-backends
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
    post:
      summary: Add a new Backend to the config
      operationId: add-backend
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-backend-request'
        description: Create a new Backend in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
  /backends/{backend-name}:
    get:
      operationId: get-backend
      summary: Returns a single Backend
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
    put:
      operationId: put-backend
      summary: Update an existing Backend by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/backend-properties'
        description: Attributes to replace in the Backend
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
    patch:
      operationId: patch-backend
      summary: Update an existing Backend by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Backend
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
    delete:
      summary: Delete a Backend
      operationId: delete-backend
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend

  /backends/{backend-name}/local-db-composite-indexes:
    get:
      summary: Returns a list of all Local DB Composite Index objects
      operationId: list-local-db-composite-indexes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
    post:
      summary: Add a new Local DB Composite Index to the config
      operationId: add-local-db-composite-index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-local-db-composite-index-request'
        description: Create a new Local DB Composite Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
  /backends/{backend-name}/local-db-composite-indexes/{local-db-composite-index-name}:
    get:
      operationId: get-local-db-composite-index
      summary: Returns a single Local DB Composite Index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Local DB Composite Index
        in: path
        name: local-db-composite-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
    put:
      operationId: put-local-db-composite-index
      summary: Update an existing Local DB Composite Index by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Composite Index
        in: path
        name: local-db-composite-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/local-db-composite-index-properties'
        description: Attributes to replace in the Local DB Composite Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
    patch:
      operationId: patch-local-db-composite-index
      summary: Update an existing Local DB Composite Index by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Composite Index
        in: path
        name: local-db-composite-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Local DB Composite Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
    delete:
      summary: Delete a Local DB Composite Index
      operationId: delete-local-db-composite-index
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Composite Index
        in: path
        name: local-db-composite-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index

  /backends/{backend-name}/local-db-vlv-indexes:
    get:
      summary: Returns a list of all Local DB VLV Index objects
      operationId: list-local-db-vlv-indexes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
    post:
      summary: Add a new Local DB VLV Index to the config
      operationId: add-local-db-vlv-index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-local-db-vlv-index-request'
        description: Create a new Local DB VLV Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
  /backends/{backend-name}/local-db-vlv-indexes/{local-db-vlv-index-name}:
    get:
      operationId: get-local-db-vlv-index
      summary: Returns a single Local DB VLV Index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Local DB VLV Index
        in: path
        name: local-db-vlv-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
    put:
      operationId: put-local-db-vlv-index
      summary: Update an existing Local DB VLV Index by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB VLV Index
        in: path
        name: local-db-vlv-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/local-db-vlv-index-properties'
        description: Attributes to replace in the Local DB VLV Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
    patch:
      operationId: patch-local-db-vlv-index
      summary: Update an existing Local DB VLV Index by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB VLV Index
        in: path
        name: local-db-vlv-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Local DB VLV Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
    delete:
      summary: Delete a Local DB VLV Index
      operationId: delete-local-db-vlv-index
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB VLV Index
        in: path
        name: local-db-vlv-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index

  /backends/{backend-name}/local-db-indexes:
    get:
      summary: Returns a list of all Local DB Index objects
      operationId: list-local-db-indexes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
    post:
      summary: Add a new Local DB Index to the config
      operationId: add-local-db-index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-local-db-index-request'
        description: Create a new Local DB Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
  /backends/{backend-name}/local-db-indexes/{local-db-index-name}:
    get:
      operationId: get-local-db-index
      summary: Returns a single Local DB Index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Local DB Index
        in: path
        name: local-db-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
    put:
      operationId: put-local-db-index
      summary: Update an existing Local DB Index by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Index
        in: path
        name: local-db-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/local-db-index-properties'
        description: Attributes to replace in the Local DB Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
    patch:
      operationId: patch-local-db-index
      summary: Update an existing Local DB Index by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Index
        in: path
        name: local-db-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Local DB Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
    delete:
      summary: Delete a Local DB Index
      operationId: delete-local-db-index
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Index
        in: path
        name: local-db-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index

  /attribute-syntaxes:
    get:
      summary: Returns a list of all Attribute Syntax objects
      operationId: list-attribute-syntaxes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/attribute-syntax-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - attribute-syntax
  /attribute-syntaxes/{attribute-syntax-name}:
    get:
      operationId: get-attribute-syntax
      summary: Returns a single Attribute Syntax
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Attribute Syntax
        in: path
        name: attribute-syntax-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/attribute-syntax-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - attribute-syntax
    put:
      operationId: put-attribute-syntax
      summary: Update an existing Attribute Syntax by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Attribute Syntax
        in: path
        name: attribute-syntax-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/attribute-syntax-properties'
        description: Attributes to replace in the Attribute Syntax
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/attribute-syntax-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - attribute-syntax
    patch:
      operationId: patch-attribute-syntax
      summary: Update an existing Attribute Syntax by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Attribute Syntax
        in: path
        name: attribute-syntax-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Attribute Syntax
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/attribute-syntax-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - attribute-syntax

  /work-queue:
    get:
      operationId: get-work-queue
      summary: Returns the Work Queue
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/work-queue-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - work-queue
    put:
      operationId: put-work-queue
      summary: Update the Work Queue, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/work-queue-properties'
        description: Attributes to replace in the Work Queue
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/work-queue-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - work-queue
    patch:
      operationId: patch-work-queue
      summary: Update an existing Work Queue by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Work Queue
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/work-queue-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - work-queue

  /uncached-entry-criteria:
    get:
      summary: Returns a list of all Uncached Entry Criteria objects
      operationId: list-uncached-entry-criteria
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-entry-criteria-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-entry-criteria
    post:
      summary: Add a new Uncached Entry Criteria to the config
      operationId: add-uncached-entry-criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-uncached-entry-criteria-request'
        description: Create a new Uncached Entry Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-entry-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-entry-criteria
  /uncached-entry-criteria/{uncached-entry-criteria-name}:
    get:
      operationId: get-uncached-entry-criteria
      summary: Returns a single Uncached Entry Criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Uncached Entry Criteria
        in: path
        name: uncached-entry-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-entry-criteria-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-entry-criteria
    put:
      operationId: put-uncached-entry-criteria
      summary: Update an existing Uncached Entry Criteria by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Uncached Entry Criteria
        in: path
        name: uncached-entry-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/uncached-entry-criteria-properties'
        description: Attributes to replace in the Uncached Entry Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-entry-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-entry-criteria
    patch:
      operationId: patch-uncached-entry-criteria
      summary: Update an existing Uncached Entry Criteria by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Uncached Entry Criteria
        in: path
        name: uncached-entry-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Uncached Entry Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/uncached-entry-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-entry-criteria
    delete:
      summary: Delete a Uncached Entry Criteria
      operationId: delete-uncached-entry-criteria
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Uncached Entry Criteria
        in: path
        name: uncached-entry-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - uncached-entry-criteria

  /http-servlet-extensions:
    get:
      summary: Returns a list of all HTTP Servlet Extension objects
      operationId: list-http-servlet-extensions
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-extension-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-extension
    post:
      summary: Add a new HTTP Servlet Extension to the config
      operationId: add-http-servlet-extension
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-http-servlet-extension-request'
        description: Create a new HTTP Servlet Extension in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-extension-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-extension
  /http-servlet-extensions/{http-servlet-extension-name}:
    get:
      operationId: get-http-servlet-extension
      summary: Returns a single HTTP Servlet Extension
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-extension-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-extension
    put:
      operationId: put-http-servlet-extension
      summary: Update an existing HTTP Servlet Extension by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/http-servlet-extension-properties'
        description: Attributes to replace in the HTTP Servlet Extension
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-extension-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-extension
    patch:
      operationId: patch-http-servlet-extension
      summary: Update an existing HTTP Servlet Extension by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the HTTP Servlet Extension
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-extension-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-extension
    delete:
      summary: Delete a HTTP Servlet Extension
      operationId: delete-http-servlet-extension
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-extension

  /http-servlet-extensions/{http-servlet-extension-name}/prometheus-monitor-attribute-metrics:
    get:
      summary: Returns a list of all Prometheus Monitor Attribute Metric objects
      operationId: list-prometheus-monitor-attribute-metrics
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/prometheus-monitor-attribute-metric-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - prometheus-monitor-attribute-metric
    post:
      summary: Add a new Prometheus Monitor Attribute Metric to the config
      operationId: add-prometheus-monitor-attribute-metric
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-prometheus-monitor-attribute-metric-request'
        description: Create a new Prometheus Monitor Attribute Metric in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/prometheus-monitor-attribute-metric-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - prometheus-monitor-attribute-metric
  /http-servlet-extensions/{http-servlet-extension-name}/prometheus-monitor-attribute-metrics/{prometheus-monitor-attribute-metric-name}:
    get:
      operationId: get-prometheus-monitor-attribute-metric
      summary: Returns a single Prometheus Monitor Attribute Metric
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Prometheus Monitor Attribute Metric
        in: path
        name: prometheus-monitor-attribute-metric-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/prometheus-monitor-attribute-metric-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - prometheus-monitor-attribute-metric
    put:
      operationId: put-prometheus-monitor-attribute-metric
      summary: Update an existing Prometheus Monitor Attribute Metric by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Prometheus Monitor Attribute Metric
        in: path
        name: prometheus-monitor-attribute-metric-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/prometheus-monitor-attribute-metric-properties'
        description: Attributes to replace in the Prometheus Monitor Attribute Metric
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/prometheus-monitor-attribute-metric-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - prometheus-monitor-attribute-metric
    patch:
      operationId: patch-prometheus-monitor-attribute-metric
      summary: Update an existing Prometheus Monitor Attribute Metric by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Prometheus Monitor Attribute Metric
        in: path
        name: prometheus-monitor-attribute-metric-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Prometheus Monitor Attribute Metric
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/prometheus-monitor-attribute-metric-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - prometheus-monitor-attribute-metric
    delete:
      summary: Delete a Prometheus Monitor Attribute Metric
      operationId: delete-prometheus-monitor-attribute-metric
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Prometheus Monitor Attribute Metric
        in: path
        name: prometheus-monitor-attribute-metric-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - prometheus-monitor-attribute-metric

  /http-servlet-extensions/{http-servlet-extension-name}/velocity-context-providers:
    get:
      summary: Returns a list of all Velocity Context Provider objects
      operationId: list-velocity-context-providers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-context-provider-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-context-provider
    post:
      summary: Add a new Velocity Context Provider to the config
      operationId: add-velocity-context-provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-velocity-context-provider-request'
        description: Create a new Velocity Context Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-context-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-context-provider
  /http-servlet-extensions/{http-servlet-extension-name}/velocity-context-providers/{velocity-context-provider-name}:
    get:
      operationId: get-velocity-context-provider
      summary: Returns a single Velocity Context Provider
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Velocity Context Provider
        in: path
        name: velocity-context-provider-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-context-provider-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-context-provider
    put:
      operationId: put-velocity-context-provider
      summary: Update an existing Velocity Context Provider by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Velocity Context Provider
        in: path
        name: velocity-context-provider-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/velocity-context-provider-properties'
        description: Attributes to replace in the Velocity Context Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-context-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-context-provider
    patch:
      operationId: patch-velocity-context-provider
      summary: Update an existing Velocity Context Provider by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Velocity Context Provider
        in: path
        name: velocity-context-provider-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Velocity Context Provider
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-context-provider-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-context-provider
    delete:
      summary: Delete a Velocity Context Provider
      operationId: delete-velocity-context-provider
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Velocity Context Provider
        in: path
        name: velocity-context-provider-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-context-provider

  /http-servlet-extensions/{http-servlet-extension-name}/velocity-template-loaders:
    get:
      summary: Returns a list of all Velocity Template Loader objects
      operationId: list-velocity-template-loaders
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-template-loader-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-template-loader
    post:
      summary: Add a new Velocity Template Loader to the config
      operationId: add-velocity-template-loader
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-velocity-template-loader-request'
        description: Create a new Velocity Template Loader in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-template-loader-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-template-loader
  /http-servlet-extensions/{http-servlet-extension-name}/velocity-template-loaders/{velocity-template-loader-name}:
    get:
      operationId: get-velocity-template-loader
      summary: Returns a single Velocity Template Loader
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Velocity Template Loader
        in: path
        name: velocity-template-loader-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-template-loader-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-template-loader
    put:
      operationId: put-velocity-template-loader
      summary: Update an existing Velocity Template Loader by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Velocity Template Loader
        in: path
        name: velocity-template-loader-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/velocity-template-loader-properties'
        description: Attributes to replace in the Velocity Template Loader
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-template-loader-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-template-loader
    patch:
      operationId: patch-velocity-template-loader
      summary: Update an existing Velocity Template Loader by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Velocity Template Loader
        in: path
        name: velocity-template-loader-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Velocity Template Loader
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/velocity-template-loader-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-template-loader
    delete:
      summary: Delete a Velocity Template Loader
      operationId: delete-velocity-template-loader
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Velocity Template Loader
        in: path
        name: velocity-template-loader-name
        required: true
        type: string
      - description: Name of the HTTP Servlet Extension
        in: path
        name: http-servlet-extension-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - velocity-template-loader

  /client-connection-policies:
    get:
      summary: Returns a list of all Client Connection Policy objects
      operationId: list-client-connection-policies
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/client-connection-policy-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - client-connection-policy
    post:
      summary: Add a new Client Connection Policy to the config
      operationId: add-client-connection-policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-client-connection-policy-request'
        description: Create a new Client Connection Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/client-connection-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - client-connection-policy
  /client-connection-policies/{client-connection-policy-name}:
    get:
      operationId: get-client-connection-policy
      summary: Returns a single Client Connection Policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Client Connection Policy
        in: path
        name: client-connection-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/client-connection-policy-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - client-connection-policy
    put:
      operationId: put-client-connection-policy
      summary: Update an existing Client Connection Policy by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Client Connection Policy
        in: path
        name: client-connection-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/client-connection-policy-properties'
        description: Attributes to replace in the Client Connection Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/client-connection-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - client-connection-policy
    patch:
      operationId: patch-client-connection-policy
      summary: Update an existing Client Connection Policy by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Client Connection Policy
        in: path
        name: client-connection-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Client Connection Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/client-connection-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - client-connection-policy
    delete:
      summary: Delete a Client Connection Policy
      operationId: delete-client-connection-policy
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Client Connection Policy
        in: path
        name: client-connection-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - client-connection-policy

  /matching-rules:
    get:
      summary: Returns a list of all Matching Rule objects
      operationId: list-matching-rules
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/matching-rule-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - matching-rule
  /matching-rules/{matching-rule-name}:
    get:
      operationId: get-matching-rule
      summary: Returns a single Matching Rule
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Matching Rule
        in: path
        name: matching-rule-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/matching-rule-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - matching-rule
    put:
      operationId: put-matching-rule
      summary: Update an existing Matching Rule by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Matching Rule
        in: path
        name: matching-rule-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/matching-rule-properties'
        description: Attributes to replace in the Matching Rule
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/matching-rule-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - matching-rule
    patch:
      operationId: patch-matching-rule
      summary: Update an existing Matching Rule by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Matching Rule
        in: path
        name: matching-rule-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Matching Rule
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/matching-rule-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - matching-rule

  /virtual-attributes:
    get:
      summary: Returns a list of all Virtual Attribute objects
      operationId: list-virtual-attributes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
    post:
      summary: Add a new Virtual Attribute to the config
      operationId: add-virtual-attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-virtual-attribute-request'
        description: Create a new Virtual Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
  /virtual-attributes/{virtual-attribute-name}:
    get:
      operationId: get-virtual-attribute
      summary: Returns a single Virtual Attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Virtual Attribute
        in: path
        name: virtual-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
    put:
      operationId: put-virtual-attribute
      summary: Update an existing Virtual Attribute by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Virtual Attribute
        in: path
        name: virtual-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/virtual-attribute-properties'
        description: Attributes to replace in the Virtual Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
    patch:
      operationId: patch-virtual-attribute
      summary: Update an existing Virtual Attribute by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Virtual Attribute
        in: path
        name: virtual-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Virtual Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
    delete:
      summary: Delete a Virtual Attribute
      operationId: delete-virtual-attribute
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Virtual Attribute
        in: path
        name: virtual-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute

  /notification-managers:
    get:
      summary: Returns a list of all Notification Manager objects
      operationId: list-notification-managers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/notification-manager-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - notification-manager
    post:
      summary: Add a new Notification Manager to the config
      operationId: add-notification-manager
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-notification-manager-request'
        description: Create a new Notification Manager in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/notification-manager-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - notification-manager
  /notification-managers/{notification-manager-name}:
    get:
      operationId: get-notification-manager
      summary: Returns a single Notification Manager
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Notification Manager
        in: path
        name: notification-manager-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/notification-manager-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - notification-manager
    put:
      operationId: put-notification-manager
      summary: Update an existing Notification Manager by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Notification Manager
        in: path
        name: notification-manager-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/notification-manager-properties'
        description: Attributes to replace in the Notification Manager
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/notification-manager-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - notification-manager
    patch:
      operationId: patch-notification-manager
      summary: Update an existing Notification Manager by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Notification Manager
        in: path
        name: notification-manager-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Notification Manager
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/notification-manager-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - notification-manager
    delete:
      summary: Delete a Notification Manager
      operationId: delete-notification-manager
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Notification Manager
        in: path
        name: notification-manager-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - notification-manager

  /result-criteria:
    get:
      summary: Returns a list of all Result Criteria objects
      operationId: list-result-criteria
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-criteria-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-criteria
    post:
      summary: Add a new Result Criteria to the config
      operationId: add-result-criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-result-criteria-request'
        description: Create a new Result Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-criteria
  /result-criteria/{result-criteria-name}:
    get:
      operationId: get-result-criteria
      summary: Returns a single Result Criteria
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Result Criteria
        in: path
        name: result-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-criteria-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-criteria
    put:
      operationId: put-result-criteria
      summary: Update an existing Result Criteria by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Result Criteria
        in: path
        name: result-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/result-criteria-properties'
        description: Attributes to replace in the Result Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-criteria
    patch:
      operationId: patch-result-criteria
      summary: Update an existing Result Criteria by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Result Criteria
        in: path
        name: result-criteria-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Result Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/result-criteria-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-criteria
    delete:
      summary: Delete a Result Criteria
      operationId: delete-result-criteria
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Result Criteria
        in: path
        name: result-criteria-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - result-criteria

  /identity-mappers:
    get:
      summary: Returns a list of all Identity Mapper objects
      operationId: list-identity-mappers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/identity-mapper-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - identity-mapper
    post:
      summary: Add a new Identity Mapper to the config
      operationId: add-identity-mapper
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-identity-mapper-request'
        description: Create a new Identity Mapper in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/identity-mapper-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - identity-mapper
  /identity-mappers/{identity-mapper-name}:
    get:
      operationId: get-identity-mapper
      summary: Returns a single Identity Mapper
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Identity Mapper
        in: path
        name: identity-mapper-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/identity-mapper-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - identity-mapper
    put:
      operationId: put-identity-mapper
      summary: Update an existing Identity Mapper by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Identity Mapper
        in: path
        name: identity-mapper-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/identity-mapper-properties'
        description: Attributes to replace in the Identity Mapper
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/identity-mapper-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - identity-mapper
    patch:
      operationId: patch-identity-mapper
      summary: Update an existing Identity Mapper by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Identity Mapper
        in: path
        name: identity-mapper-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Identity Mapper
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/identity-mapper-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - identity-mapper
    delete:
      summary: Delete a Identity Mapper
      operationId: delete-identity-mapper
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Identity Mapper
        in: path
        name: identity-mapper-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - identity-mapper

  /recurring-tasks:
    get:
      summary: Returns a list of all Recurring Task objects
      operationId: list-recurring-tasks
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task
    post:
      summary: Add a new Recurring Task to the config
      operationId: add-recurring-task
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-recurring-task-request'
        description: Create a new Recurring Task in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task
  /recurring-tasks/{recurring-task-name}:
    get:
      operationId: get-recurring-task
      summary: Returns a single Recurring Task
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Recurring Task
        in: path
        name: recurring-task-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task
    put:
      operationId: put-recurring-task
      summary: Update an existing Recurring Task by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Recurring Task
        in: path
        name: recurring-task-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/recurring-task-properties'
        description: Attributes to replace in the Recurring Task
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task
    patch:
      operationId: patch-recurring-task
      summary: Update an existing Recurring Task by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Recurring Task
        in: path
        name: recurring-task-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Recurring Task
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/recurring-task-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task
    delete:
      summary: Delete a Recurring Task
      operationId: delete-recurring-task
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Recurring Task
        in: path
        name: recurring-task-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - recurring-task

  /rest-resource-types:
    get:
      summary: Returns a list of all REST Resource Type objects
      operationId: list-rest-resource-types
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/rest-resource-type-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - rest-resource-type
    post:
      summary: Add a new REST Resource Type to the config
      operationId: add-rest-resource-type
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-rest-resource-type-request'
        description: Create a new REST Resource Type in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/rest-resource-type-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - rest-resource-type
  /rest-resource-types/{rest-resource-type-name}:
    get:
      operationId: get-rest-resource-type
      summary: Returns a single REST Resource Type
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/rest-resource-type-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - rest-resource-type
    put:
      operationId: put-rest-resource-type
      summary: Update an existing REST Resource Type by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/rest-resource-type-properties'
        description: Attributes to replace in the REST Resource Type
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/rest-resource-type-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - rest-resource-type
    patch:
      operationId: patch-rest-resource-type
      summary: Update an existing REST Resource Type by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the REST Resource Type
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/rest-resource-type-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - rest-resource-type
    delete:
      summary: Delete a REST Resource Type
      operationId: delete-rest-resource-type
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - rest-resource-type

  /rest-resource-types/{rest-resource-type-name}/delegated-admin-attributes:
    get:
      summary: Returns a list of all Delegated Admin Attribute objects
      operationId: list-delegated-admin-attributes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute
    post:
      summary: Add a new Delegated Admin Attribute to the config
      operationId: add-delegated-admin-attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-delegated-admin-attribute-request'
        description: Create a new Delegated Admin Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-attributes/{delegated-admin-attribute-name}:
    get:
      operationId: get-delegated-admin-attribute
      summary: Returns a single Delegated Admin Attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Delegated Admin Attribute
        in: path
        name: delegated-admin-attribute-name
        required: true
        type: string
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute
    put:
      operationId: put-delegated-admin-attribute
      summary: Update an existing Delegated Admin Attribute by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Attribute
        in: path
        name: delegated-admin-attribute-name
        required: true
        type: string
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/delegated-admin-attribute-properties'
        description: Attributes to replace in the Delegated Admin Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute
    patch:
      operationId: patch-delegated-admin-attribute
      summary: Update an existing Delegated Admin Attribute by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Attribute
        in: path
        name: delegated-admin-attribute-name
        required: true
        type: string
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Delegated Admin Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute
    delete:
      summary: Delete a Delegated Admin Attribute
      operationId: delete-delegated-admin-attribute
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Attribute
        in: path
        name: delegated-admin-attribute-name
        required: true
        type: string
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute

  /rest-resource-types/{rest-resource-type-name}/delegated-admin-correlated-rest-resources:
    get:
      summary: Returns a list of all Delegated Admin Correlated REST Resource objects
      operationId: list-delegated-admin-correlated-rest-resources
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-correlated-rest-resource-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-correlated-rest-resource
    post:
      summary: Add a new Delegated Admin Correlated REST Resource to the config
      operationId: add-delegated-admin-correlated-rest-resource
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-delegated-admin-correlated-rest-resource-request'
        description: Create a new Delegated Admin Correlated REST Resource in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-correlated-rest-resource-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-correlated-rest-resource
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-correlated-rest-resources/{delegated-admin-correlated-rest-resource-name}:
    get:
      operationId: get-delegated-admin-correlated-rest-resource
      summary: Returns a single Delegated Admin Correlated REST Resource
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Delegated Admin Correlated REST Resource
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        type: string
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-correlated-rest-resource-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-correlated-rest-resource
    put:
      operationId: put-delegated-admin-correlated-rest-resource
      summary: Update an existing Delegated Admin Correlated REST Resource by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Correlated REST Resource
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        type: string
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/delegated-admin-correlated-rest-resource-properties'
        description: Attributes to replace in the Delegated Admin Correlated REST Resource
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-correlated-rest-resource-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-correlated-rest-resource
    patch:
      operationId: patch-delegated-admin-correlated-rest-resource
      summary: Update an existing Delegated Admin Correlated REST Resource by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Correlated REST Resource
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        type: string
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Delegated Admin Correlated REST Resource
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-correlated-rest-resource-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-correlated-rest-resource
    delete:
      summary: Delete a Delegated Admin Correlated REST Resource
      operationId: delete-delegated-admin-correlated-rest-resource
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Correlated REST Resource
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        type: string
      - description: Name of the REST Resource Type
        in: path
        name: rest-resource-type-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-correlated-rest-resource

  /sasl-mechanism-handlers:
    get:
      summary: Returns a list of all SASL Mechanism Handler objects
      operationId: list-sasl-mechanism-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sasl-mechanism-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sasl-mechanism-handler
    post:
      summary: Add a new SASL Mechanism Handler to the config
      operationId: add-sasl-mechanism-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-sasl-mechanism-handler-request'
        description: Create a new SASL Mechanism Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sasl-mechanism-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sasl-mechanism-handler
  /sasl-mechanism-handlers/{sasl-mechanism-handler-name}:
    get:
      operationId: get-sasl-mechanism-handler
      summary: Returns a single SASL Mechanism Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SASL Mechanism Handler
        in: path
        name: sasl-mechanism-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sasl-mechanism-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sasl-mechanism-handler
    put:
      operationId: put-sasl-mechanism-handler
      summary: Update an existing SASL Mechanism Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SASL Mechanism Handler
        in: path
        name: sasl-mechanism-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/sasl-mechanism-handler-properties'
        description: Attributes to replace in the SASL Mechanism Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sasl-mechanism-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sasl-mechanism-handler
    patch:
      operationId: patch-sasl-mechanism-handler
      summary: Update an existing SASL Mechanism Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SASL Mechanism Handler
        in: path
        name: sasl-mechanism-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the SASL Mechanism Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/sasl-mechanism-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sasl-mechanism-handler
    delete:
      summary: Delete a SASL Mechanism Handler
      operationId: delete-sasl-mechanism-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SASL Mechanism Handler
        in: path
        name: sasl-mechanism-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - sasl-mechanism-handler

  /data-security-auditors:
    get:
      summary: Returns a list of all Data Security Auditor objects
      operationId: list-data-security-auditors
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/data-security-auditor-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - data-security-auditor
    post:
      summary: Add a new Data Security Auditor to the config
      operationId: add-data-security-auditor
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-data-security-auditor-request'
        description: Create a new Data Security Auditor in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/data-security-auditor-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - data-security-auditor
  /data-security-auditors/{data-security-auditor-name}:
    get:
      operationId: get-data-security-auditor
      summary: Returns a single Data Security Auditor
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Data Security Auditor
        in: path
        name: data-security-auditor-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/data-security-auditor-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - data-security-auditor
    put:
      operationId: put-data-security-auditor
      summary: Update an existing Data Security Auditor by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Data Security Auditor
        in: path
        name: data-security-auditor-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/data-security-auditor-properties'
        description: Attributes to replace in the Data Security Auditor
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/data-security-auditor-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - data-security-auditor
    patch:
      operationId: patch-data-security-auditor
      summary: Update an existing Data Security Auditor by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Data Security Auditor
        in: path
        name: data-security-auditor-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Data Security Auditor
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/data-security-auditor-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - data-security-auditor
    delete:
      summary: Delete a Data Security Auditor
      operationId: delete-data-security-auditor
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Data Security Auditor
        in: path
        name: data-security-auditor-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - data-security-auditor

  /monitoring-endpoints:
    get:
      summary: Returns a list of all Monitoring Endpoint objects
      operationId: list-monitoring-endpoints
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitoring-endpoint-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitoring-endpoint
    post:
      summary: Add a new Monitoring Endpoint to the config
      operationId: add-monitoring-endpoint
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-monitoring-endpoint-request'
        description: Create a new Monitoring Endpoint in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitoring-endpoint-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitoring-endpoint
  /monitoring-endpoints/{monitoring-endpoint-name}:
    get:
      operationId: get-monitoring-endpoint
      summary: Returns a single Monitoring Endpoint
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Monitoring Endpoint
        in: path
        name: monitoring-endpoint-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitoring-endpoint-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitoring-endpoint
    put:
      operationId: put-monitoring-endpoint
      summary: Update an existing Monitoring Endpoint by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Monitoring Endpoint
        in: path
        name: monitoring-endpoint-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/monitoring-endpoint-properties'
        description: Attributes to replace in the Monitoring Endpoint
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitoring-endpoint-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitoring-endpoint
    patch:
      operationId: patch-monitoring-endpoint
      summary: Update an existing Monitoring Endpoint by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Monitoring Endpoint
        in: path
        name: monitoring-endpoint-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Monitoring Endpoint
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/monitoring-endpoint-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitoring-endpoint
    delete:
      summary: Delete a Monitoring Endpoint
      operationId: delete-monitoring-endpoint
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Monitoring Endpoint
        in: path
        name: monitoring-endpoint-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - monitoring-endpoint

  /password-storage-schemes:
    get:
      summary: Returns a list of all Password Storage Scheme objects
      operationId: list-password-storage-schemes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
    post:
      summary: Add a new Password Storage Scheme to the config
      operationId: add-password-storage-scheme
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-password-storage-scheme-request'
        description: Create a new Password Storage Scheme in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
  /password-storage-schemes/{password-storage-scheme-name}:
    get:
      operationId: get-password-storage-scheme
      summary: Returns a single Password Storage Scheme
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Password Storage Scheme
        in: path
        name: password-storage-scheme-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
    put:
      operationId: put-password-storage-scheme
      summary: Update an existing Password Storage Scheme by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Storage Scheme
        in: path
        name: password-storage-scheme-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/password-storage-scheme-properties'
        description: Attributes to replace in the Password Storage Scheme
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
    patch:
      operationId: patch-password-storage-scheme
      summary: Update an existing Password Storage Scheme by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Storage Scheme
        in: path
        name: password-storage-scheme-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Password Storage Scheme
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
    delete:
      summary: Delete a Password Storage Scheme
      operationId: delete-password-storage-scheme
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Storage Scheme
        in: path
        name: password-storage-scheme-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme

  /http-configuration:
    get:
      operationId: get-http-configuration
      summary: Returns the HTTP Configuration
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-configuration-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-configuration
    put:
      operationId: put-http-configuration
      summary: Update the HTTP Configuration, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/http-configuration-properties'
        description: Attributes to replace in the HTTP Configuration
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-configuration-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-configuration
    patch:
      operationId: patch-http-configuration
      summary: Update an existing HTTP Configuration by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the HTTP Configuration
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-configuration-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-configuration

  /json-attribute-constraints:
    get:
      summary: Returns a list of all JSON Attribute Constraints objects
      operationId: list-json-attribute-constraints
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-attribute-constraints-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-attribute-constraints
    post:
      summary: Add a new JSON Attribute Constraints to the config
      operationId: add-json-attribute-constraints
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-json-attribute-constraints-request'
        description: Create a new JSON Attribute Constraints in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-attribute-constraints-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-attribute-constraints
  /json-attribute-constraints/{json-attribute-constraints-name}:
    get:
      operationId: get-json-attribute-constraints
      summary: Returns a single JSON Attribute Constraints
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-attribute-constraints-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-attribute-constraints
    put:
      operationId: put-json-attribute-constraints
      summary: Update an existing JSON Attribute Constraints by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/json-attribute-constraints-properties'
        description: Attributes to replace in the JSON Attribute Constraints
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-attribute-constraints-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-attribute-constraints
    patch:
      operationId: patch-json-attribute-constraints
      summary: Update an existing JSON Attribute Constraints by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the JSON Attribute Constraints
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-attribute-constraints-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-attribute-constraints
    delete:
      summary: Delete a JSON Attribute Constraints
      operationId: delete-json-attribute-constraints
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-attribute-constraints

  /json-attribute-constraints/{json-attribute-constraints-name}/json-field-constraints:
    get:
      summary: Returns a list of all JSON Field Constraints objects
      operationId: list-json-field-constraints
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-field-constraints-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-field-constraints
    post:
      summary: Add a new JSON Field Constraints to the config
      operationId: add-json-field-constraints
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-json-field-constraints-request'
        description: Create a new JSON Field Constraints in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-field-constraints-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-field-constraints
  /json-attribute-constraints/{json-attribute-constraints-name}/json-field-constraints/{json-field-constraints-name}:
    get:
      operationId: get-json-field-constraints
      summary: Returns a single JSON Field Constraints
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the JSON Field Constraints
        in: path
        name: json-field-constraints-name
        required: true
        type: string
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-field-constraints-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-field-constraints
    put:
      operationId: put-json-field-constraints
      summary: Update an existing JSON Field Constraints by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the JSON Field Constraints
        in: path
        name: json-field-constraints-name
        required: true
        type: string
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/json-field-constraints-properties'
        description: Attributes to replace in the JSON Field Constraints
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-field-constraints-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-field-constraints
    patch:
      operationId: patch-json-field-constraints
      summary: Update an existing JSON Field Constraints by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the JSON Field Constraints
        in: path
        name: json-field-constraints-name
        required: true
        type: string
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the JSON Field Constraints
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/json-field-constraints-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-field-constraints
    delete:
      summary: Delete a JSON Field Constraints
      operationId: delete-json-field-constraints
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the JSON Field Constraints
        in: path
        name: json-field-constraints-name
        required: true
        type: string
      - description: Name of the JSON Attribute Constraints
        in: path
        name: json-attribute-constraints-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - json-field-constraints

  /http-servlet-cross-origin-policies:
    get:
      summary: Returns a list of all HTTP Servlet Cross Origin Policy objects
      operationId: list-http-servlet-cross-origin-policies
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-cross-origin-policy-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-cross-origin-policy
    post:
      summary: Add a new HTTP Servlet Cross Origin Policy to the config
      operationId: add-http-servlet-cross-origin-policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-http-servlet-cross-origin-policy-request'
        description: Create a new HTTP Servlet Cross Origin Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-cross-origin-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-cross-origin-policy
  /http-servlet-cross-origin-policies/{http-servlet-cross-origin-policy-name}:
    get:
      operationId: get-http-servlet-cross-origin-policy
      summary: Returns a single HTTP Servlet Cross Origin Policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the HTTP Servlet Cross Origin Policy
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-cross-origin-policy-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-cross-origin-policy
    put:
      operationId: put-http-servlet-cross-origin-policy
      summary: Update an existing HTTP Servlet Cross Origin Policy by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Cross Origin Policy
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/http-servlet-cross-origin-policy-properties'
        description: Attributes to replace in the HTTP Servlet Cross Origin Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-cross-origin-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-cross-origin-policy
    patch:
      operationId: patch-http-servlet-cross-origin-policy
      summary: Update an existing HTTP Servlet Cross Origin Policy by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Cross Origin Policy
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the HTTP Servlet Cross Origin Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/http-servlet-cross-origin-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-cross-origin-policy
    delete:
      summary: Delete a HTTP Servlet Cross Origin Policy
      operationId: delete-http-servlet-cross-origin-policy
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the HTTP Servlet Cross Origin Policy
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - http-servlet-cross-origin-policy

  /delegated-admin-attribute-categories:
    get:
      summary: Returns a list of all Delegated Admin Attribute Category objects
      operationId: list-delegated-admin-attribute-categories
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-category-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute-category
    post:
      summary: Add a new Delegated Admin Attribute Category to the config
      operationId: add-delegated-admin-attribute-category
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-delegated-admin-attribute-category-request'
        description: Create a new Delegated Admin Attribute Category in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-category-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute-category
  /delegated-admin-attribute-categories/{delegated-admin-attribute-category-name}:
    get:
      operationId: get-delegated-admin-attribute-category
      summary: Returns a single Delegated Admin Attribute Category
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Delegated Admin Attribute Category
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-category-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute-category
    put:
      operationId: put-delegated-admin-attribute-category
      summary: Update an existing Delegated Admin Attribute Category by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Attribute Category
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/delegated-admin-attribute-category-properties'
        description: Attributes to replace in the Delegated Admin Attribute Category
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-category-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute-category
    patch:
      operationId: patch-delegated-admin-attribute-category
      summary: Update an existing Delegated Admin Attribute Category by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Attribute Category
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Delegated Admin Attribute Category
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/delegated-admin-attribute-category-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute-category
    delete:
      summary: Delete a Delegated Admin Attribute Category
      operationId: delete-delegated-admin-attribute-category
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Delegated Admin Attribute Category
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - delegated-admin-attribute-category

  /scim-schemas:
    get:
      summary: Returns a list of all SCIM Schema objects
      operationId: list-scim-schemas
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-schema-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-schema
    post:
      summary: Add a new SCIM Schema to the config
      operationId: add-scim-schema
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-scim-schema-request'
        description: Create a new SCIM Schema in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-schema-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-schema
  /scim-schemas/{scim-schema-name}:
    get:
      operationId: get-scim-schema
      summary: Returns a single SCIM Schema
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-schema-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-schema
    put:
      operationId: put-scim-schema
      summary: Update an existing SCIM Schema by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/scim-schema-properties'
        description: Attributes to replace in the SCIM Schema
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-schema-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-schema
    patch:
      operationId: patch-scim-schema
      summary: Update an existing SCIM Schema by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the SCIM Schema
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-schema-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-schema
    delete:
      summary: Delete a SCIM Schema
      operationId: delete-scim-schema
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-schema

  /scim-schemas/{scim-schema-name}/scim-attributes:
    get:
      summary: Returns a list of all SCIM Attribute objects
      operationId: list-scim-attributes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute
    post:
      summary: Add a new SCIM Attribute to the config
      operationId: add-scim-attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-scim-attribute-request'
        description: Create a new SCIM Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute
  /scim-schemas/{scim-schema-name}/scim-attributes/{scim-attribute-name}:
    get:
      operationId: get-scim-attribute
      summary: Returns a single SCIM Attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute
    put:
      operationId: put-scim-attribute
      summary: Update an existing SCIM Attribute by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/scim-attribute-properties'
        description: Attributes to replace in the SCIM Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute
    patch:
      operationId: patch-scim-attribute
      summary: Update an existing SCIM Attribute by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the SCIM Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute
    delete:
      summary: Delete a SCIM Attribute
      operationId: delete-scim-attribute
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-attribute

  /scim-schemas/{scim-schema-name}/scim-attributes/{scim-attribute-name}/scim-subattributes:
    get:
      summary: Returns a list of all SCIM Subattribute objects
      operationId: list-scim-subattributes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-subattribute-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-subattribute
    post:
      summary: Add a new SCIM Subattribute to the config
      operationId: add-scim-subattribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-scim-subattribute-request'
        description: Create a new SCIM Subattribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-subattribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-subattribute
  /scim-schemas/{scim-schema-name}/scim-attributes/{scim-attribute-name}/scim-subattributes/{scim-subattribute-name}:
    get:
      operationId: get-scim-subattribute
      summary: Returns a single SCIM Subattribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the SCIM Subattribute
        in: path
        name: scim-subattribute-name
        required: true
        type: string
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-subattribute-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-subattribute
    put:
      operationId: put-scim-subattribute
      summary: Update an existing SCIM Subattribute by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Subattribute
        in: path
        name: scim-subattribute-name
        required: true
        type: string
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/scim-subattribute-properties'
        description: Attributes to replace in the SCIM Subattribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-subattribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-subattribute
    patch:
      operationId: patch-scim-subattribute
      summary: Update an existing SCIM Subattribute by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Subattribute
        in: path
        name: scim-subattribute-name
        required: true
        type: string
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the SCIM Subattribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/scim-subattribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-subattribute
    delete:
      summary: Delete a SCIM Subattribute
      operationId: delete-scim-subattribute
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the SCIM Subattribute
        in: path
        name: scim-subattribute-name
        required: true
        type: string
      - description: Name of the SCIM Schema
        in: path
        name: scim-schema-name
        required: true
        type: string
      - description: Name of the SCIM Attribute
        in: path
        name: scim-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - scim-subattribute

  /locations:
    get:
      summary: Returns a list of all Location objects
      operationId: list-locations
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/location-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - location
    post:
      summary: Add a new Location to the config
      operationId: add-location
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-location-request'
        description: Create a new Location in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/location-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - location
  /locations/{location-name}:
    get:
      operationId: get-location
      summary: Returns a single Location
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Location
        in: path
        name: location-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/location-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - location
    put:
      operationId: put-location
      summary: Update an existing Location by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Location
        in: path
        name: location-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/location-properties'
        description: Attributes to replace in the Location
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/location-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - location
    patch:
      operationId: patch-location
      summary: Update an existing Location by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Location
        in: path
        name: location-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Location
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/location-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - location
    delete:
      summary: Delete a Location
      operationId: delete-location
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Location
        in: path
        name: location-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - location

  /log-retention-policies:
    get:
      summary: Returns a list of all Log Retention Policy objects
      operationId: list-log-retention-policies
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-retention-policy-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-retention-policy
    post:
      summary: Add a new Log Retention Policy to the config
      operationId: add-log-retention-policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-log-retention-policy-request'
        description: Create a new Log Retention Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-retention-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-retention-policy
  /log-retention-policies/{log-retention-policy-name}:
    get:
      operationId: get-log-retention-policy
      summary: Returns a single Log Retention Policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Log Retention Policy
        in: path
        name: log-retention-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-retention-policy-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-retention-policy
    put:
      operationId: put-log-retention-policy
      summary: Update an existing Log Retention Policy by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Retention Policy
        in: path
        name: log-retention-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/log-retention-policy-properties'
        description: Attributes to replace in the Log Retention Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-retention-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-retention-policy
    patch:
      operationId: patch-log-retention-policy
      summary: Update an existing Log Retention Policy by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Retention Policy
        in: path
        name: log-retention-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Log Retention Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/log-retention-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-retention-policy
    delete:
      summary: Delete a Log Retention Policy
      operationId: delete-log-retention-policy
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Log Retention Policy
        in: path
        name: log-retention-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - log-retention-policy

  /oauth-token-handlers:
    get:
      summary: Returns a list of all OAuth Token Handler objects
      operationId: list-oauth-token-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/oauth-token-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - oauth-token-handler
    post:
      summary: Add a new OAuth Token Handler to the config
      operationId: add-oauth-token-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-oauth-token-handler-request'
        description: Create a new OAuth Token Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/oauth-token-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - oauth-token-handler
  /oauth-token-handlers/{oauth-token-handler-name}:
    get:
      operationId: get-oauth-token-handler
      summary: Returns a single OAuth Token Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the OAuth Token Handler
        in: path
        name: oauth-token-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/oauth-token-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - oauth-token-handler
    put:
      operationId: put-oauth-token-handler
      summary: Update an existing OAuth Token Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the OAuth Token Handler
        in: path
        name: oauth-token-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/oauth-token-handler-properties'
        description: Attributes to replace in the OAuth Token Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/oauth-token-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - oauth-token-handler
    patch:
      operationId: patch-oauth-token-handler
      summary: Update an existing OAuth Token Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the OAuth Token Handler
        in: path
        name: oauth-token-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the OAuth Token Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/oauth-token-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - oauth-token-handler
    delete:
      summary: Delete a OAuth Token Handler
      operationId: delete-oauth-token-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the OAuth Token Handler
        in: path
        name: oauth-token-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - oauth-token-handler

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  global-configuration-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Global Configuration
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/global-configuration-properties'
    required:
    - id
    - schemas
  global-configuration-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/global-configuration-response'
  global-configuration-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:global"
      replicationBacklogDurationAlertThreshold:
        type: string
        description: >-
               An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded the replication backlog count alert threshold for longer than this duration.
      maxSMTPConnectionAge:
        type: string
        description: >-
               The maximum length of time that a connection to an SMTP server should be considered valid.
      encryptBackupsByDefault:
        type: boolean
        description: >-
               Indicates whether the server should encrypt backups by default.
      attributesModifiableWithIgnoreNoUserModificationRequestControl:
        type: array
        items:
          type: string
          enum:
          - "creatorsName"
          - "createTimestamp"
          - "modifiersName"
          - "modifyTimestamp"
        description: >-
               Specifies the operational attribute types that are defined in the schema with the NO-USER-MODIFICATION constraint that the server will allow to be altered if the associated request contains the ignore NO-USER-MODIFICATION request control.
      startupErrorLoggerOutputLocation:
        type: string
        enum:
        - "standard-output"
        - "standard-error"
        - "server-out-file"
        - "standard-output-and-server-out-file"
        - "standard-error-and-server-out-file"
        - "disabled"
        description: >-
               Specifies how the server should handle error log messages (which may include errors, warnings, and notices) generated during startup. All of these messages will be written to all configured error loggers, but they may also be written to other locations (like standard output, standard error, or the server.out log file) so that they are displayed on the console when the server is starting.
      redactSensitiveValuesInConfigLogs:
        type: boolean
        description: >-
               Indicates whether the values of sensitive configuration properties should be redacted when logging configuration changes, including in the configuration audit log, the error log, and the server.out log file.
      ldifExportEncryptionSettingsDefinitionID:
        type: string
        description: >-
               The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted LDIF exports by default.
      automaticallyCompressEncryptedLDIFExports:
        type: boolean
        description: >-
               Indicates whether to automatically compress LDIF exports that are also encrypted.
      defaultInternalOperationClientConnectionPolicy:
        type: string
        description: >-
               Specifies the client connection policy that will be used by default for internal operations.
      maximumConcurrentConnections:
        type: integer
        description: >-
               Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same time.
      maximumConcurrentConnectionsPerIPAddress:
        type: integer
        description: >-
               Specifies the maximum number of LDAP client connections originating from the same IP address which may be established to this Directory Server at the same time.
      maximumAttributesPerAddRequest:
        type: integer
        description: >-
               Specifies the maximum number of attributes that may be included in an add request. This property does not impose any limit on the number of values that an attribute may have.
      allowInsecureLocalJMXConnections:
        type: boolean
        description: >-
               Indicates that processes attaching to this server's local JVM are allowed to access internal data through JMX without the authentication requirements that remote JMX connections are subject to. Please review and understand the data that this option will expose (such as cn=monitor) to client applications to ensure there are no security concerns.
      allowedInsecureRequestCriteria:
        type: string
        description: >-
               A set of criteria that may be used to match LDAP requests that may be permitted over an insecure connection even if reject-insecure-requests is true. Note that some types of requests will always be permitted, including StartTLS and start administrative session requests.
      proxiedAuthorizationIdentityMapper:
        type: string
        description: >-
               Specifies the name of the identity mapper to map authorization ID values (using the "u:" form) provided in the proxied authorization control to the corresponding user entry.
      backgroundThreadForEachPersistentSearch:
        type: boolean
        description: >-
               Indicates whether the server should use a separate background thread for each persistent search.
      backupEncryptionSettingsDefinitionID:
        type: string
        description: >-
               The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted backups by default.
      invalidAttributeSyntaxBehavior:
        type: string
        enum:
        - "accept"
        - "reject"
        - "warn"
        description: >-
               Specifies how the Directory Server should handle operations whenever an attribute value violates the associated attribute syntax.
      unrecoverableDatabaseErrorMode:
        type: string
        enum:
        - "enter-lockdown-mode"
        - "raise-unavailable-alarm"
        - "initiate-server-shutdown"
        description: >-
               Specifies the action which should be taken for any database that experiences an unrecoverable error. Action applies to local database backends and the replication recent changes database.
      autoNameWithEntryUUIDConnectionCriteria:
        type: string
        description: >-
               Connection criteria that may be used to identify clients whose add requests should use entryUUID as the naming attribute.
      rejectUnauthenticatedRequests:
        type: boolean
        description: >-
               Indicates whether the Directory Server should reject any LDAP request (other than bind or StartTLS requests) received from a client that has not yet been authenticated, whose last authentication attempt was unsuccessful, or whose last authentication attempt used anonymous authentication.
      replicationPurgeObsoleteReplicas:
        type: boolean
        description: >-
               Indicates whether state about obsolete replicas is automatically purged.
      maximumModificationsPerModifyRequest:
        type: integer
        description: >-
               Specifies the maximum number of modifications that may be included in a modify request. This property does not impose any limit on the number of attribute values that a modification may have.
      replicationSetName:
        type: string
        description: >-
               The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within instances using the same replication set name.
      warnForBackendsWithMultipleBaseDns:
        type: boolean
        description: >-
               Indicates whether the server should issue a warning when enabling a backend that contains multiple base DNs.
      autoNameWithEntryUUIDRequestCriteria:
        type: string
        description: >-
               Request criteria that may be used to identify add requests that should use entryUUID as the naming attribute.
      resultCodeMap:
        type: string
        description: >-
               Specifies a result code map that should be used for clients that do not have a map associated with their client connection policy. If the associated client connection policy has a result code map, then that map will be used instead. If no map is associated either with the client connection policy or the global configuration, then an internal default will be used.
      disabledPrivilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "use-admin-session"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               Specifies the name of a privilege that should not be evaluated by the server.
      sizeLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that the Directory Server should return to clients by default when processing a search operation.
      databaseOnVirtualizedOrNetworkStorage:
        type: boolean
        description: >-
               This setting provides data integrity options when the Directory Server is installed with a database on a network storage device. A storage device may be accessed directly by a physical server, or indirectly through a virtual machine running on a hypervisor. Enabling this setting will apply changes to all Local DB Backends, the LDAP Changelog Backend, and the replication changelog database.
      jmxUseLegacyMbeanNames:
        type: boolean
        description: >-
               When set to true, the server will use its original, non-standard JMX MBean names for the monitoring MBeans. These include RDN keys of "Rdn1" and "Rdn2" instead of the recommended "type" and "name" keys. This should option should only be enabled for installations that have monitoring infrastructure that depends on the old keys.
      forcedGCPrimeDuration:
        type: string
        description: >-
               Specifies the minimum length of time required for backend or request processor initialization that will trigger the server to force an explicit garbage collection. A value of "0 seconds" indicates that the server should never invoke an explicit garbage collection regardless of the length of time required to initialize the server backends.
      sensitiveAttribute:
        type: array
        items:
          type: string
        description: >-
               Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be in place when interacting with those attributes.
      allowedUnauthenticatedRequestCriteria:
        type: string
        description: >-
               A set of criteria that may be used to match LDAP requests that may be permitted over an unauthenticated connection even if reject-unauthenticated-requests is true. Note that some types of requests will always be permitted, including bind, StartTLS, and start administrative session requests.
      forceAsMasterForMirroredData:
        type: boolean
        description: >-
               Indicates whether this server should be forced to assume the master role if no other suitable server is found to act as master or if multiple masters are detected. A master is only needed when changes are made to mirrored data, i.e. data specific to the topology itself and cluster-wide configuration data.
      duplicateAlertTimeLimit:
        type: string
        description: >-
               Specifies the length of time that must expire before duplicate messages are sent via the administrative alert framework.
      allowedInsecureTLSProtocol:
        type: array
        items:
          type: string
          enum:
          - "sslv3"
        description: >-
               Specifies a set of TLS protocols that will be permitted for use in the server even though there may be known vulnerabilities that could cause their use to be unsafe in some conditions. Enabling support for insecure TLS protocols is discouraged, and is generally recommended only as a short-term measure to permit legacy clients to interact with the server until they can be updated to support more secure communication protocols.
      unauthenticatedSizeLimit:
        type: integer
        description: >-
               The size limit value that will apply for connections from unauthenticated clients. If this is not specified, then the value of the size-limit property will be applied for both authenticated and unauthenticated connections.
      duplicateAlertLimit:
        type: integer
        description: >-
               Specifies the maximum number of duplicate alert messages that should be sent via the administrative alert framework in the time window specified by the duplicate-alert-time-limit property.
      allowInheritedReplicationOfSubordinateBackends:
        type: boolean
        description: >-
               Allow replication to be inherited by subordinate/child backends.
      networkAddressCacheTTL:
        type: string
        description: >-
               Specifies the length of time that the Directory Server should cache the IP addresses associated with the names of systems with which it interacts.
      startupMinReplicationBacklogCount:
        type: integer
        description: >-
               The number of outstanding changes any replica can have before the Directory Server will start accepting connections. The Directory Server may never accept connections if this setting is too low. If you are unsure which value to use, you can use the number of expected updates within a five second interval.
      instanceName:
        type: string
        description: >-
               Specifies a name that may be used to uniquely identify this Directory Server instance among other instances in the environment.
      duplicateErrorLogTimeLimit:
        type: string
        description: >-
               Specifies the length of time that must expire before duplicate log messages above the duplicate-error-log-limit threshold are logged again to the error log.
      ldapJoinSizeLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that may be directly joined with any individual search result entry.
      duplicateErrorLogLimit:
        type: integer
        description: >-
               Specifies the maximum number of duplicate error log messages that should be logged in the time window specified by the duplicate-error-log-time-limit property.
      networkAddressOutageCacheEnabled:
        type: boolean
        description: >-
               Specifies whether the Directory Server should cache the last valid IP addresses associated with the names of systems with which it interacts with when the domain name service returns an unknown host exception. Java may return an unknown host exception when there is unexpected interruption in domain name service so this setting protects the Directory Server from temporary DNS server outages if previous results have been cached.
      allowAttributeNameExceptions:
        type: boolean
        description: >-
               Indicates whether the Directory Server should allow underscores in attribute names and allow attribute names to begin with numeric digits (both of which are violations of the LDAP standards).
      replicationAssuranceSourceTimeoutSuspendDuration:
        type: string
        description: >-
               The amount of time a replication assurance source (i.e. a peer Directory Server) will be suspended from assurance requirements on this Directory Server if it experiences an assurance timeout.
      permitSyntaxViolationsForAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of attribute types for which the server will permit values that do not conform to the associated attribute syntax.
      singleStructuralObjectclassBehavior:
        type: string
        enum:
        - "accept"
        - "reject"
        - "warn"
        description: >-
               Specifies how the Directory Server should handle operations for an entry does not contain a structural object class, or for an entry that contains multiple structural classes.
      subtreeAccessibilityAlertTimeLimit:
        type: string
        description: >-
               Specifies the length of time that a subtree may remain hidden or read-only before an administrative alert is sent.
      idleTimeLimit:
        type: string
        description: >-
               Specifies the maximum length of time that a client connection may remain established since its last completed operation.
      lookthroughLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that the Directory Server should "look through" in the course of processing a search request.
      configurationServerGroup:
        type: string
        description: >-
               When this property is set, changes made to this server using the console or dsconfig can be automatically applied to all servers in the specified server group.
      encryptData:
        type: boolean
        description: >-
               Indicates whether the Directory Server should encrypt the data that it stores in all components that support it. This may include certain types of backends (including local DB and large attribute backends), the LDAP changelog, and the replication server database.
      unauthenticatedIdleTimeLimit:
        type: string
        description: >-
               The idle-time-limit limit value that will apply for connections from unauthenticated clients. If this is not specified, then the value of the idle-time-limit property will be applied for both authenticated and unauthenticated connections.
      notifyAbandonedOperations:
        type: boolean
        description: >-
               Indicates whether the Directory Server should send a response to any operation that is interrupted via an abandon request.
      bindWithDNRequiresPassword:
        type: boolean
        description: >-
               Indicates whether the Directory Server should reject any simple bind request that contains a DN but no password.
      maximumConcurrentConnectionsPerBindDN:
        type: integer
        description: >-
               Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same time and authenticated as the same user.
      jmxValueBehavior:
        type: string
        enum:
        - "inferred"
        - "string"
        description: >-
               Specifies how a Java type is chosen for monitor attributes exposed as JMX attribute values.
      allowedTask:
        type: array
        items:
          type: string
        description: >-
               Specifies the fully-qualified name of a Java class that may be invoked in the server.
      enableSubOperationTimer:
        type: boolean
        description: >-
               Indicates whether the Directory Server should attempt to record information about the length of time required to process various phases of an operation. Enabling this feature may impact performance, but could make it easier to identify potential bottlenecks in operation processing.
      writabilityMode:
        type: string
        enum:
        - "enabled"
        - "disabled"
        - "internal-only"
        description: >-
               Specifies the kinds of write operations the Directory Server can process.
      maximumConcurrentUnindexedSearches:
        type: integer
        description: >-
               Specifies the maximum number of unindexed searches that may be in progress in this backend at any given time. Any unindexed searches requested while the maximum number of unindexed searches are already being processed will be rejected. A value of zero indicates that no limit will be enforced.
      maximumServerOutLogFileSize:
        type: string
        description: >-
               The maximum allowed size that the server.out log file will be allowed to have. If a write would cause the file to exceed this size, then the current file will be rotated out of place and a new empty file will be created and the message written to it.
      maxSMTPConnectionCount:
        type: integer
        description: >-
               The maximum number of SMTP connections that will be maintained for delivering email messages.
      encryptLDIFExportsByDefault:
        type: boolean
        description: >-
               Indicates whether the server should encrypt LDIF exports by default.
      timeLimit:
        type: string
        description: >-
               Specifies the maximum length of time that the Directory Server should be allowed to spend processing a search operation.
      verifyEntryDigests:
        type: boolean
        description: >-
               Indicates whether the digest should always be verified whenever an entry containing a digest is decoded. If this is "true", then if a digest exists, it will always be verified. Otherwise, the digest will be written when encoding entries but ignored when decoding entries but may still be available for other verification processing.
      rejectInsecureRequests:
        type: boolean
        description: >-
               Indicates whether the Directory Server should reject any LDAP request (other than StartTLS) received from a client that is not using an encrypted connection.
      maximumServerOutLogFileCount:
        type: integer
        description: >-
               The maximum number of server.out log files (including the current active log file) that should be retained. When rotating the log file, if the total number of files exceeds this count, then the oldest file(s) will be removed so that the total number of log files is within this limit.
      smtpServer:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of servers that will be used to send email messages. The order in which the servers are listed indicates the order in which the Directory Server will attempt to use them in the course of sending a message. The first attempt will always go to the server at the top of the list, and servers further down the list will only be used if none of the servers listed above it were able to successfully send the message.
      trackedApplication:
        type: array
        items:
          type: string
        description: >-
               Specifies criteria for identifying specific applications that access the server to enable tracking throughput and latency of LDAP operations issued by an application.
      exitOnJVMError:
        type: boolean
        description: >-
               Indicates whether the Directory Server should be shut down if a severe error is raised (e.g., an out of memory error) which may prevent the JVM from continuing to run properly.
      serverErrorResultCode:
        type: integer
        description: >-
               Specifies the numeric value of the result code when request processing fails due to an internal server error.
      unauthenticatedTimeLimit:
        type: string
        description: >-
               The time limit value that will apply for connections from unauthenticated clients. If this is not specified, then the value of the time-limit property will be applied for both authenticated and unauthenticated connections.
      replicationHistoryLimit:
        type: integer
        description: >-
               Specifies the size limit for historical information.
      location:
        type: string
        description: >-
               Specifies the location for this Directory Server. Operations performed which involve communication with other servers may prefer servers in the same location to help ensure low-latency responses.
      softDeletePolicy:
        type: string
        description: >-
               Specifies the soft delete policy that will be used by default for delete operations. Soft delete operations introduce the ability to control the server behavior of the delete operation. Instead of performing a permanent delete of an entry, deleted entries can be retained as soft deleted entries by their entryUUID values and are available for undelete at a later time. In addition to a soft delete policy enabling soft deletes, delete operations sent to the server must have the soft delete request control present with sufficient access privileges to access the soft delete request control.
      encryptionSettingsCipherStreamProvider:
        type: string
        description: >-
               Specifies the cipher stream provider that should be used to protect the contents of the encryption settings database.
      returnBindErrorMessages:
        type: boolean
        description: >-
               Indicates whether responses for failed bind operations should include a message string providing the reason for the authentication failure.
      replicationAssuranceSourceBacklogFastStartThreshold:
        type: integer
        description: >-
               The maximum number of replication backlog updates a replication assurance source (i.e. a peer Directory Server) can have and be immediately recognized as an available assurance source by this Directory Server.
      smtpConnectionHealthCheckInterval:
        type: string
        description: >-
               The length of time between checks to ensure that available SMTP connections are still valid.
      maximumUserDataPasswordPoliciesToCache:
        type: integer
        description: >-
               Specifies the maximum number of password policies that are defined in the user data (that is, outside of the configuration) that the server should cache in memory for faster access. A value of zero indicates that the server should not cache any user data password policies.
      unauthenticatedLookthroughLimit:
        type: integer
        description: >-
               The lookthrough limit value that will apply for connections from unauthenticated clients. If this is not specified, then the value of the lookthrough-limit property will be applied for both authenticated and unauthenticated connections.
      defaultPasswordPolicy:
        type: string
        description: >-
               Specifies the name of the password policy that is in effect for users whose entries do not specify an alternate password policy (either via a real or virtual attribute).
      replicationBacklogCountAlertThreshold:
        type: integer
        description: >-
               An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded this threshold for longer than the replication backlog duration alert threshold.
      maximumShutdownTime:
        type: string
        description: >-
               Specifies the maximum amount of time the shutdown of Directory Server may take.

  id-token-validator-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/id-token-validator-response'
    required:
    - schemas
    - totalResults
  add-id-token-validator-request:
    allOf:
    - type: object
      properties:
        validatorName:
          type: string
          description: >-
              Name of the new ID Token Validator
    - $ref: '#/definitions/id-token-validator-properties'
    required:
    - validatorName
  id-token-validator-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the ID Token Validator
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/id-token-validator-properties'
    required:
    - id
    - schemas
  id-token-validator-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/id-token-validator-response'
  id-token-validator-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:id-token-validator:ping-one"
          - "urn:pingidentity:schemas:configuration:2.0:id-token-validator:openid-connect"
      OpenIDConnectMetadataCacheDuration:
        type: string
        description: >-
               How often the PingOne ID Token Validator should refresh its stored cache of OpenID Connect-related metadata.
      subjectClaimName:
        type: string
        description: >-
               The name of the token claim that contains the subject; i.e., the authenticated user.
      signingCertificate:
        type: array
        items:
          type: string
        description: >-
               Specifies the locally stored certificates that may be used to validate the signature of an incoming ID token. This property may be specified if a JWKS endpoint should not be used to retrieve public signing keys.
      OpenIDConnectProvider:
        type: string
        description: >-
               Specifies HTTPS connection settings for the PingOne OpenID Connect provider.
      issuerURL:
        type: string
        description: >-
               Specifies a PingOne base issuer URL.
      jwksEndpointPath:
        type: string
        description: >-
               The relative path to the JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming ID token. This path is relative to the base_url property defined for the validator's OpenID Connect provider. If jwks-endpoint-path is specified, the OpenID Connect ID Token Validator will not consult locally stored certificates for validating token signatures.
      description:
        type: string
        description: >-
               A description for this ID Token Validator
      enabled:
        type: boolean
        description: >-
               Indicates whether this ID Token Validator is enabled for use in the Directory Server.
      evaluationOrderIndex:
        type: integer
        description: >-
               When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.
      identityMapper:
        type: string
        description: >-
               Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
      jwksCacheDuration:
        type: string
        description: >-
               How often the ID Token Validator should refresh its cache of JWKS token signing keys.
      allowedSigningAlgorithm:
        type: array
        items:
          type: string
          enum:
          - "RS256"
          - "RS384"
          - "RS512"
          - "ES256"
          - "ES384"
          - "ES512"
        description: >-
               Specifies an allow list of JWT signing algorithms that will be accepted by the OpenID Connect ID Token Validator.
      clockSkewGracePeriod:
        type: string
        description: >-
               Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.

  token-claim-validation-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/token-claim-validation-response'
    required:
    - schemas
    - totalResults
  add-token-claim-validation-request:
    allOf:
    - type: object
      properties:
        validationName:
          type: string
          description: >-
              Name of the new Token Claim Validation
    - $ref: '#/definitions/token-claim-validation-properties'
    required:
    - validationName
  token-claim-validation-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Token Claim Validation
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/token-claim-validation-properties'
    required:
    - id
    - schemas
  token-claim-validation-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/token-claim-validation-response'
  token-claim-validation-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string-array"
          - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:boolean"
          - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string"
      claimName:
        type: string
        description: >-
               The name of the claim to be validated.
      allRequiredValue:
        type: array
        items:
          type: string
        description: >-
               The set of all values that the claim must have to be considered valid.
      anyRequiredValue:
        type: array
        items:
          type: string
        description: >-
               The set of values that the claim may have to be considered valid.
      description:
        type: string
        description: >-
               A description for this Token Claim Validation
      requiredValue:
        type: string
        enum:
        - "true"
        - "false"
        description: >-
               Specifies the boolean claim's required value.

  plugin-root-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Plugin Root
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/plugin-root-properties'
    required:
    - id
    - schemas
  plugin-root-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/plugin-root-response'
  plugin-root-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:plugin-root"
      pluginOrderPreParseAbandon:
        type: string
        description: >-
               Specifies the order in which pre-parse abandon plug-ins are to be loaded and invoked.
      pluginOrderPreParseModify:
        type: string
        description: >-
               Specifies the order in which pre-parse modify plug-ins are to be loaded and invoked.
      pluginOrderPreOperationExtended:
        type: string
        description: >-
               Specifies the order in which pre-operation extended operation plug-ins are to be loaded and invoked.
      pluginOrderSearchResultEntry:
        type: string
        description: >-
               Specifies the order in which search result entry plug-ins are to be loaded and invoked.
      pluginOrderPostOperationDelete:
        type: string
        description: >-
               Specifies the order in which post-operation delete plug-ins are to be loaded and invoked.
      pluginOrderPostOperationExtended:
        type: string
        description: >-
               Specifies the order in which post-operation extended operation plug-ins are to be loaded and invoked.
      pluginOrderPreParseAdd:
        type: string
        description: >-
               Specifies the order in which pre-parse add plug-ins are to be loaded and invoked.
      pluginOrderPostResponseModifyDN:
        type: string
        description: >-
               Specifies the order in which post-response modify DN plug-ins are to be loaded and invoked.
      pluginOrderPreOperationCompare:
        type: string
        description: >-
               Specifies the order in which pre-operation compare plug-ins are to be loaded and invoked.
      pluginOrderPreParseModifyDN:
        type: string
        description: >-
               Specifies the order in which pre-parse modify DN plug-ins are to be loaded and invoked.
      pluginOrderPreOperationDelete:
        type: string
        description: >-
               Specifies the order in which pre-operation delete plug-ins are to be loaded and invoked.
      pluginOrderPostResponseSearch:
        type: string
        description: >-
               Specifies the order in which post-response search plug-ins are to be loaded and invoked.
      pluginOrderPostOperationAbandon:
        type: string
        description: >-
               Specifies the order in which post-operation abandon plug-ins are to be loaded and invoked.
      pluginOrderPreOperationModify:
        type: string
        description: >-
               Specifies the order in which pre-operation modify plug-ins are to be loaded and invoked.
      pluginOrderShutdown:
        type: string
        description: >-
               Specifies the order in which shutdown plug-ins are to be loaded and invoked.
      pluginOrderPostResponseAdd:
        type: string
        description: >-
               Specifies the order in which post-response add plug-ins are to be loaded and invoked.
      pluginOrderLDIFExport:
        type: string
        description: >-
               Specifies the order in which LDIF export plug-ins are to be loaded and invoked.
      pluginOrderLDIFImport:
        type: string
        description: >-
               Specifies the order in which LDIF import plug-ins are to be loaded and invoked.
      pluginOrderPostSynchronizationModifyDN:
        type: string
        description: >-
               Specifies the order in which post-synchronization modify DN plug-ins are to be loaded and invoked.
      pluginOrderPreParseDelete:
        type: string
        description: >-
               Specifies the order in which pre-parse delete plug-ins are to be loaded and invoked.
      pluginOrderPostResponseBind:
        type: string
        description: >-
               Specifies the order in which post-response bind plug-ins are to be loaded and invoked.
      pluginOrderPostOperationAdd:
        type: string
        description: >-
               Specifies the order in which post-operation add plug-ins are to be loaded and invoked.
      pluginOrderPostOperationSearch:
        type: string
        description: >-
               Specifies the order in which post-operation search plug-ins are to be loaded and invoked.
      pluginOrderPostSynchronizationModify:
        type: string
        description: >-
               Specifies the order in which post-synchronization modify plug-ins are to be loaded and invoked.
      pluginOrderPreOperationSearch:
        type: string
        description: >-
               Specifies the order in which pre-operation search plug-ins are to be loaded and invoked.
      pluginOrderPreParseBind:
        type: string
        description: >-
               Specifies the order in which pre-parse bind plug-ins are to be loaded and invoked.
      pluginOrderPostOperationModifyDN:
        type: string
        description: >-
               Specifies the order in which post-operation modify DN plug-ins are to be loaded and invoked.
      pluginOrderPostDisconnect:
        type: string
        description: >-
               Specifies the order in which post-disconnect plug-ins are to be loaded and invoked.
      pluginOrderPostResponseCompare:
        type: string
        description: >-
               Specifies the order in which post-response compare plug-ins are to be loaded and invoked.
      pluginOrderPostConnect:
        type: string
        description: >-
               Specifies the order in which post-connect plug-ins are to be loaded and invoked.
      pluginOrderPreParseSearch:
        type: string
        description: >-
               Specifies the order in which pre-parse search plug-ins are to be loaded and invoked.
      pluginOrderPostResponseExtended:
        type: string
        description: >-
               Specifies the order in which post-response extended operation plug-ins are to be loaded and invoked.
      pluginOrderPreParseExtended:
        type: string
        description: >-
               Specifies the order in which pre-parse extended operation plug-ins are to be loaded and invoked.
      pluginOrderSearchResultReference:
        type: string
        description: >-
               Specifies the order in which search result reference plug-ins are to be loaded and invoked.
      pluginOrderPreParseCompare:
        type: string
        description: >-
               Specifies the order in which pre-parse compare plug-ins are to be loaded and invoked.
      pluginOrderPostOperationCompare:
        type: string
        description: >-
               Specifies the order in which post-operation compare plug-ins are to be loaded and invoked.
      pluginOrderPostOperationUnbind:
        type: string
        description: >-
               Specifies the order in which post-operation unbind plug-ins are to be loaded and invoked.
      pluginOrderPreOperationBind:
        type: string
        description: >-
               Specifies the order in which pre-operation bind plug-ins are to be loaded and invoked.
      pluginOrderPreOperationAdd:
        type: string
        description: >-
               Specifies the order in which pre-operation add plug-ins are to be loaded and invoked.
      pluginOrderPostOperationModify:
        type: string
        description: >-
               Specifies the order in which post-operation modify plug-ins are to be loaded and invoked.
      pluginOrderStartup:
        type: string
        description: >-
               Specifies the order in which startup plug-ins are to be loaded and invoked.
      pluginOrderPreOperationModifyDN:
        type: string
        description: >-
               Specifies the order in which pre-operation modify DN plug-ins are to be loaded and invoked.
      pluginOrderPostSynchronizationAdd:
        type: string
        description: >-
               Specifies the order in which post-synchronization add plug-ins are to be loaded and invoked.
      pluginOrderPostSynchronizationDelete:
        type: string
        description: >-
               Specifies the order in which post-synchronization delete plug-ins are to be loaded and invoked.
      pluginOrderSubordinateModifyDN:
        type: string
        description: >-
               Specifies the order in which subordinate modify DN plug-ins are to be loaded and invoked.
      pluginOrderIntermediateResponse:
        type: string
        description: >-
               Specifies the order in which intermediate response plug-ins are to be loaded and invoked.
      pluginOrderPostOperationBind:
        type: string
        description: >-
               Specifies the order in which post-operation bind plug-ins are to be loaded and invoked.
      pluginOrderPostResponseModify:
        type: string
        description: >-
               Specifies the order in which post-response modify plug-ins are to be loaded and invoked.
      pluginOrderPreParseUnbind:
        type: string
        description: >-
               Specifies the order in which pre-parse unbind plug-ins are to be loaded and invoked.
      pluginOrderPostResponseDelete:
        type: string
        description: >-
               Specifies the order in which post-response delete plug-ins are to be loaded and invoked.

  plugin-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/plugin-response'
    required:
    - schemas
    - totalResults
  add-plugin-request:
    allOf:
    - type: object
      properties:
        pluginName:
          type: string
          description: >-
              Name of the new Plugin
    - $ref: '#/definitions/plugin-properties'
    required:
    - pluginName
  plugin-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Plugin
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/plugin-properties'
    required:
    - id
    - schemas
  plugin-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/plugin-response'
  plugin-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:plugin:last-access-time"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:stats-collector"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:internal-search-rate"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:modifiable-password-policy-state"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:seven-bit-clean"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-access-grants"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-gc"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:ping-one-pass-through-authentication"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:changelog-password-encryption"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:processing-time-histogram"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:search-shutdown"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-stats-logger"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:change-subscription-notification"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:sub-operation-timing"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:third-party"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:encrypt-attribute-values"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:pass-through-authentication"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:dn-mapper"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:monitor-history"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:referral-on-update"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:simple-to-external-bind"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:custom"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:snmp-subagent"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:password-policy-import"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:profiler"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-inactive-pingfederate-persistent-sessions"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:composed-attribute"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:ldap-result-code-tracker"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:attribute-mapper"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:delay"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-sessions"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:last-mod"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:pluggable-pass-through-authentication"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:referential-integrity"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:unique-attribute"
      contextName:
        type: string
        description: >-
               The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a topology must have a unique SNMP context name.
      numMostExpensivePhasesShown:
        type: integer
        description: >-
               This controls how many of the most expensive phases are included per operation type in the monitor entry.
      mapAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the enable-attribute-mapping property has a value of "true". Any attributes listed must be defined in the server schema with either the distinguished name syntax or the name and optional UID syntax.
      targetAttribute:
        type: string
        description: >-
               Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute type must be defined in the server schema and must not be equal to the source attribute type.
      type:
        type: array
        items:
          type: string
        description: >-
               Specifies the type of attributes to check for value uniqueness.
      localDBBackendInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        - "verbose"
        description: >-
               Specifies the level of detail to include about the Local DB Backends.
      allowLaxPassThroughAuthenticationPasswords:
        type: boolean
        description: >-
               Indicates whether to overwrite the user's local password even if the password used to authenticate to the PingOne service would have failed validation if the user attempted to set it directly.
      outputFile:
        type: string
        description: >-
               The path of an LDIF file that should be created with the results of the search.
      excludeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of search filters that identify entries for which composed values will not be generated.
      apiURL:
        type: string
        description: >-
               Specifies the API endpoint for the PingOne web service.
      includedLDAPApplication:
        type: array
        items:
          type: string
        description: >-
               If statistics should not be included for all applications, this property names the subset of applications that should be included.
      searchFilterPattern:
        type: string
        description: >-
               A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.
      histogramOpType:
        type: array
        items:
          type: string
          enum:
          - "all"
          - "add"
          - "bind"
          - "compare"
          - "delete"
          - "extended"
          - "modify"
          - "modify-dn"
          - "search"
        description: >-
               Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control this.
      pingInterval:
        type: string
        description: >-
               The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of zero disables the sending of pings by the sub-agent.
      serverAccessMode:
        type: string
        enum:
        - "round-robin"
        - "failover-on-unavailable"
        - "failover-on-any-failure"
        description: >-
               Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.
      ignoredPasswordPolicyStateErrorCondition:
        type: array
        items:
          type: string
          enum:
          - "temporarily-locked-due-to-failures"
          - "permanently-locked-due-to-failures"
          - "locked-due-to-idle-interval"
          - "locked-due-to-maximum-reset-age"
          - "locked-due-to-validation-failure"
          - "password-is-expired"
        description: >-
               A set of password policy state error conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option can only be used if try-local-bind is true.
      rotationPolicy:
        type: array
        items:
          type: string
        description: >-
               The rotation policy to use for the Periodic Stats Logger Plugin .
      statusSummaryInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "verbose"
        description: >-
               Specifies the level of detail to include about the status summary monitor entry.
      peerServerPriorityIndex:
        type: integer
        description: >-
               In a replicated environment, this determines the order in which peer servers should attempt to purge data.
      agentxAddress:
        type: string
        description: >-
               The hostname or IP address of the SNMP master agent.
      previousFileExtension:
        type: string
        description: >-
               An extension that should be appended to the name of an existing output file rather than deleting it. If a file already exists with the full previous file name, then it will be deleted before the current file is renamed to become the previous file.
      environmentID:
        type: string
        description: >-
               Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.
      delay:
        type: string
        description: >-
               The delay to inject for operations matching the associated criteria.
      ldapInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        description: >-
               Specifies the level of detail to include about the LDAP connection handlers.
      replicationInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        - "verbose"
        description: >-
               Specifies the level of detail to include about replication.
      emptyInsteadOfZero:
        type: boolean
        description: >-
               This property controls whether a value in the output is shown as empty if the value is zero.
      maxUpdatesPerSecond:
        type: integer
        description: >-
               This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.
      includeAttribute:
        type: array
        items:
          type: string
        description: >-
               The name of an attribute that should be included in the results. This may include any token which is allowed as a requested attribute in search requests, including the name of an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an object class name preceded with an at symbol (to indicate all attributes associated with that object class), an attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded).
      excludeBaseDN:
        type: array
        items:
          type: string
        description: >-
               The set of base DNs below which composed values will not be generated.
      delayAfterAlert:
        type: string
        description: >-
               Specifies the length of time that the Directory Server should wait after sending the "force-gc-starting" administrative alert before actually invoking the garbage collection processing.
      operationType:
        type: array
        items:
          type: string
          enum:
          - "add"
          - "bind"
          - "compare"
          - "modify"
          - "modify-dn"
          - "search"
        description: >-
               Specifies the types of operations that should result in access time updates.
      datetimeAttribute:
        type: string
        description: >-
               The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.
      collectionInterval:
        type: string
        description: >-
               Some of the calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered, and setting this value too small can have an adverse impact on performance.
      changelogPasswordEncryptionKey:
        type: string
        description: >-
               A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync Server.
      invokeGCDayOfWeek:
        type: array
        items:
          type: string
          enum:
          - "sunday"
          - "monday"
          - "tuesday"
          - "wednesday"
          - "thursday"
          - "friday"
          - "saturday"
        description: >-
               Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will run every day at the specified time.
      sampleInterval:
        type: string
        description: >-
               The duration between statistics collections. Setting this value too small can have an impact on performance. This value should be a multiple of collection-interval.
      server:
        type: array
        items:
          type: string
        description: >-
               Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
      profileSampleInterval:
        type: string
        description: >-
               Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.
      suppressIfIdle:
        type: boolean
        description: >-
               If the server is idle during the specified interval, then do not log any output if this property is set to true. The server is idle if during the interval, no new connections were established, no operations were processed, and no operations are pending.
      encryptionSettingsDefinitionID:
        type: string
        description: >-
               Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
      updatedEntryNewlyMatchesCriteriaBehavior:
        type: string
        enum:
        - "preserve-existing-values-without-composing-new-values"
        - "preserve-existing-values-or-compose-new-values"
        - "preserve-existing-values-and-compose-new-values"
        - "compose-new-values-without-preserving-existing-values"
        description: >-
               The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either the base DN or filter criteria, but now do satisfy that criteria.
      enabled:
        type: boolean
        description: >-
               Indicates whether the plug-in is enabled for use.
      attributeType:
        type: array
        items:
          type: string
        description: >-
               Specifies the name or OID of an attribute type for which values should be checked to ensure that they are 7-bit clean.
      expirationOffset:
        type: string
        description: >-
               The duration to wait after the value specified in datetime-attribute (and optionally datetime-json-field) before purging the data.
      retentionPolicy:
        type: array
        items:
          type: string
        description: >-
               The retention policy to use for the Periodic Stats Logger Plugin .
      loggingErrorBehavior:
        type: string
        enum:
        - "standard-error"
        - "lockdown-mode"
        description: >-
               Specifies the behavior that the server should exhibit if an error occurs during logging processing.
      includeBaseDN:
        type: array
        items:
          type: string
        description: >-
               The set of base DNs below which composed values may be generated.
      separateMonitorEntryPerTrackedApplication:
        type: boolean
        description: >-
               When enabled, separate monitor entries will be included for each application defined in the Global Configuration's tracked-application property.
      numWorkerThreads:
        type: integer
        description: >-
               The number of worker threads to use to handle SNMP requests.
      alwaysMapResponses:
        type: boolean
        description: >-
               Indicates whether DNs in response messages containing the target DN should always be remapped back to the source DN. If this is "false", then mapping will be performed for a response message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.
      retainFilesSparselyByAge:
        type: boolean
        description: >-
               Retain some older files to give greater perspective on how monitoring information has changed over time.
      preventConflictsWithSoftDeletedEntries:
        type: boolean
        description: >-
               Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even if those conflicts only exist in soft-deleted entries.
      connectRetryMaxWait:
        type: string
        description: >-
               The maximum amount of time to wait between attempts to establish a connection to the master agent.
      hostInfo:
        type: array
        items:
          type: string
          enum:
          - "cpu"
          - "disk"
          - "network"
        description: >-
               Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and network activity.
      profileAction:
        type: string
        enum:
        - "none"
        - "start"
        - "stop"
        - "cancel"
        description: >-
               Specifies the action that should be taken by the profiler.
      valuePattern:
        type: array
        items:
          type: string
        description: >-
               Specifies a pattern for constructing the values to use for the target attribute type.
      numThreads:
        type: integer
        description: >-
               Specifies the number of concurrent threads that should be used to process the search operations.
      tryLocalBind:
        type: boolean
        description: >-
               Indicates whether to attempt the bind in the local server first, or to only send it to the PingOne service.
      updateLocalPassword:
        type: boolean
        description: >-
               Indicates whether to overwrite the user's local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service.
      filter:
        type: array
        items:
          type: string
        description: >-
               A filter that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.
      targetDN:
        type: string
        description: >-
               Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.
      updateInterval:
        type: string
        description: >-
               Specifies the interval in seconds when referential integrity updates are made.
      includedLocalEntryBaseDN:
        type: array
        items:
          type: string
        description: >-
               The base DNs for the local users whose authentication attempts may be passed through to the PingOne service.
      lowerBound:
        type: integer
        description: >-
               Specifies the lower bound for the numeric value which will be inserted into the search filter.
      multipleAttributeBehavior:
        type: string
        enum:
        - "unique-within-each-attribute"
        - "unique-across-all-attributes-including-in-same-entry"
        - "unique-across-all-attributes-except-in-same-entry"
        description: >-
               The behavior to exhibit if multiple attribute types are specified.
      sanitize:
        type: boolean
        description: >-
               Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and search filters. Setting this property to true will redact this information from the monitor files. This should only be used when necessary, as it reduces the information available in the archive and can increase the time to find the source of support issues.
      maxSearchResultEntriesToUpdate:
        type: integer
        description: >-
               Specifies the maximum number of entries that should be updated in a search operation. Only search result entries actually returned to the client may have their last access time updated, but because a single search operation may return a very large number of entries, the plugin will only update entries if no more than a specified number of entries are updated.
      overrideLocalPassword:
        type: boolean
        description: >-
               Indicates whether to attempt the authentication in the PingOne service if the local user entry includes a password. This property will only be used if try-local-bind is true.
      invokeForInternalOperations:
        type: boolean
        description: >-
               Indicates whether the plug-in should be invoked for internal operations.
      datetimeFormat:
        type: string
        enum:
        - "generalized-time"
        - "java-system-time-millis"
        - "custom"
        description: >-
               Specifies the format of the datetime stored within the entry that determines when data should be purged.
      enableProfilingOnStartup:
        type: boolean
        description: >-
               Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.
      pollingInterval:
        type: string
        description: >-
               This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).
      includedLDAPStat:
        type: array
        items:
          type: string
          enum:
          - "active-operations"
          - "num-connections"
          - "op-count-and-latency"
          - "work-queue"
          - "ldap-protocol"
        description: >-
               Specifies the types of statistics related to LDAP connections and operation processing that should be included in the output.
      updateLocalPasswordDN:
        type: string
        description: >-
               This is the DN of the user that will be used to overwrite the user's local password if update-local-password is set. The DN put here should be added to 'ignore-changes-by-dn' in the appropriate Sync Source.
      rotationListener:
        type: array
        items:
          type: string
        description: >-
               A listener that should be notified whenever a log file is rotated out of service.
      profileDirectory:
        type: string
        description: >-
               Specifies the path to the directory where profile information is to be written. This path may be either an absolute path or a path that is relative to the root of the Directory Server instance.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be given in the form 'name=value'.
      OAuthClientSecret:
        type: string
        description: >-
               Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.
      OAuthClientSecretPassphraseProvider:
        type: string
        description: >-
               Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to the PingOne API.
      maxUpdateFrequency:
        type: string
        description: >-
               Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit the rate of internal write operations processed in the server.
      numDeleteThreads:
        type: integer
        description: >-
               The number of threads used to delete expired entries.
      passThroughAuthenticationHandler:
        type: string
        description: >-
               The component used to manage authentication with the external authentication service.
      multipleValuePatternBehavior:
        type: string
        enum:
        - "use-first-non-rejected-value-pattern-with-non-empty-values-but-may-reject"
        - "use-first-non-rejected-value-pattern-with-non-empty-values-and-never-reject"
        - "use-first-rejection-or-first-value-pattern-with-non-empty-values"
        - "use-all-non-rejected-value-patterns-with-non-empty-values-but-may-reject"
        - "use-all-non-rejected-value-patterns-with-non-empty-values-and-never-reject"
        - "use-first-rejection-or-all-value-patterns-with-non-empty-values"
        description: >-
               The behavior to exhibit if the plugin is configured with multiple value patterns.
      perApplicationLDAPStats:
        type: string
        enum:
        - "aggregate-only"
        - "per-application-only"
        description: >-
               Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.
      userMappingRemoteJSONField:
        type: array
        items:
          type: string
        description: >-
               The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the local user entry, as specified in the user-mapping-local-attribute property.
      sourceAttribute:
        type: string
        description: >-
               Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute. Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute type.
      logInterval:
        type: string
        description: >-
               The duration between statistics collection and logging. A new line is logged to the output for each interval. Setting this value too small can have an impact on performance.
      customDatetimeFormat:
        type: string
        description: >-
               When the datetime-format property is configured with a value of "custom", this specifies the format (using a string compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.
      customTimezone:
        type: string
        description: >-
               Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The provided value must be accepted by java.util.TimeZone.getTimeZone.
      requestCriteria:
        type: string
        description: >-
               Specifies a set of request criteria that may be used to indicate whether to apply access time updates for the associated operation.
      initialConnections:
        type: integer
        description: >-
               Specifies the initial number of connections to establish to each external server against which authentication may be attempted.
      changelogPasswordEncryptionKeyPassphraseProvider:
        type: string
        description: >-
               A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync Server.
      targetAttributeExistsDuringInitialPopulationBehavior:
        type: string
        enum:
        - "preserve-existing-values"
        - "overwrite-existing-values"
        - "merge-existing-and-composed-values"
        - "reject-existing-values-in-add-but-preserve-in-ldif-import"
        - "reject-existing-values-in-add-but-overwrite-in-ldif-import"
        - "reject-existing-values-in-add-but-merge-in-ldif-import"
        description: >-
               The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).
      updateTargetAttributeBehavior:
        type: string
        enum:
        - "always-allow"
        - "allow-only-for-non-composed-values"
        - "never-allow"
        description: >-
               The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target attribute.
      sourceAttributeRemovalBehavior:
        type: string
        enum:
        - "preserve-non-composed-values"
        - "preserve-all-values"
        - "remove-all-values-but-preserve-all-if-required"
        - "remove-all-values-but-preserve-non-composed-if-required"
        description: >-
               The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a way that this plugin would no longer generate any composed values for that entry.
      connectionCriteria:
        type: string
        description: >-
               A reference to connection criteria that will be used to indicate which bind requests should be passed through to the PingOne service.
      generateCollectorFiles:
        type: boolean
        description: >-
               Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set to false to prevent unnecessary I/O.
      serverInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        description: >-
               Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.
      entryCacheInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        description: >-
               Specifies the level of detail to include for each entry cache.
      logFile:
        type: string
        description: >-
               The file name to use for the log files generated by the Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an absolute path.
      logFilePermissions:
        type: string
        description: >-
               The UNIX permissions of the log files created by this Periodic Stats Logger Plugin.
      histogramFormat:
        type: string
        enum:
        - "count"
        - "aggregate-percentage"
        description: >-
               The format of the data in the processing time histogram.
      sessionTimeout:
        type: string
        description: >-
               Specifies the maximum amount of time to wait for a session to the master agent to be established.
      invokeGCTimeUtc:
        type: array
        items:
          type: string
        description: >-
               Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in "HH:MM" format, with "HH" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC time zone.
      userMappingLocalAttribute:
        type: array
        items:
          type: string
        description: >-
               The names of the attributes in the local user entry whose values must match the values of the corresponding fields in the PingOne service.
      includeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of search filters that identify entries for which composed values may be generated.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Plugin.
      filterPrefix:
        type: string
        description: >-
               Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should contain the entire filter string.
      upperBound:
        type: integer
        description: >-
               Specifies the upper bound for the numeric value which will be inserted into the search filter.
      includedResourceStat:
        type: array
        items:
          type: string
          enum:
          - "memory-utilization"
        description: >-
               Specifies whether statistics related to resource utilization such as JVM memory.
      dnMap:
        type: array
        items:
          type: string
        description: >-
               Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.
      description:
        type: string
        description: >-
               A description for this Plugin
      excludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing the modifiersName and modifyTimestamp values to be updated for that entry.
      datetimeJSONField:
        type: string
        description: >-
               The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.
      purgeBehavior:
        type: string
        enum:
        - "delete-entries"
        - "subtree-delete-entries"
        - "delete-json-attribute-values"
        description: >-
               Specifies whether to delete expired entries or attribute values. By default entries are deleted.
      gaugeInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        description: >-
               Specifies the level of detail to include for Gauges.
      ldapChangelogInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        - "verbose"
        description: >-
               Specifies the level of detail to include for the LDAP changelog.
      histogramCategoryBoundary:
        type: array
        items:
          type: string
        description: >-
               Specifies the boundary values that will be used to separate the processing times into categories. Values should be specified as durations, and all values must be greater than zero.
      authURL:
        type: string
        description: >-
               Specifies the API endpoint for the PingOne authentication service.
      defaultUserPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy is to be used to govern them.
      scope:
        type: string
        enum:
        - "base"
        - "one"
        - "sub"
        - "subordinate-subtree"
        description: >-
               The scope to use for the search.
      enableControlMapping:
        type: boolean
        description: >-
               Indicates whether DN mapping should be applied to DNs that may be present in specific controls. DN mapping will only be applied for control types which are specifically supported by the DN mapper plugin.
      filterSuffix:
        type: string
        description: >-
               Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should be omitted.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given in the form 'name=value'.
      baseDN:
        type: string
        description: >-
               Specifies the base DN to use for the searches to perform.
      includeQueueTime:
        type: boolean
        description: >-
               Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be available if the work queue is configured to monitor the queue time.
      bindDNPattern:
        type: string
        description: >-
               A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.
      maxConnections:
        type: integer
        description: >-
               Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.
      referralBaseURL:
        type: array
        items:
          type: string
        description: >-
               Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address, and port to use to communicate with the target server (e.g., "ldap://server.example.com:389/").
      linesBetweenHeader:
        type: integer
        description: >-
               The number of lines to log between logging the header line that summarizes the columns in the table.
      pluginType:
        type: array
        items:
          type: string
          enum:
          - "startup"
          - "shutdown"
          - "postconnect"
          - "postdisconnect"
          - "ldifimport"
          - "ldifexport"
          - "preparseabandon"
          - "preparseadd"
          - "preparsebind"
          - "preparsecompare"
          - "preparsedelete"
          - "preparseextended"
          - "preparsemodify"
          - "preparsemodifydn"
          - "preparsesearch"
          - "preparseunbind"
          - "preoperationadd"
          - "preoperationbind"
          - "preoperationcompare"
          - "preoperationdelete"
          - "preoperationextended"
          - "preoperationmodify"
          - "preoperationmodifydn"
          - "preoperationsearch"
          - "postoperationabandon"
          - "postoperationadd"
          - "postoperationbind"
          - "postoperationcompare"
          - "postoperationdelete"
          - "postoperationextended"
          - "postoperationmodify"
          - "postoperationmodifydn"
          - "postoperationsearch"
          - "postoperationunbind"
          - "preresponseadd"
          - "preresponsebind"
          - "preresponsecompare"
          - "preresponsedelete"
          - "preresponseextended"
          - "preresponsemodify"
          - "preresponsemodifydn"
          - "preresponsesearch"
          - "postresponseadd"
          - "postresponsebind"
          - "postresponsecompare"
          - "postresponsedelete"
          - "postresponseextended"
          - "postresponsemodify"
          - "postresponsemodifydn"
          - "postresponsesearch"
          - "postsynchronizationadd"
          - "postsynchronizationdelete"
          - "postsynchronizationmodify"
          - "postsynchronizationmodifydn"
          - "searchresultentry"
          - "searchresultreference"
          - "subordinatemodifydn"
          - "intermediateresponse"
        description: >-
               Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.
      additionalUserMappingSCIMFilter:
        type: string
        description: >-
               An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that corresponds to the local entry. Only the "eq", "sw", "and", and "or" filter types may be used.
      logFileFormat:
        type: string
        enum:
        - "csv"
        - "json"
        description: >-
               Specifies the format to use when logging server statistics.
      agentxPort:
        type: integer
        description: >-
               The port number on which the SNMP master agent will be contacted.
      enableAttributeMapping:
        type: boolean
        description: >-
               Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.
      defaultAuthPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy should be used to govern them.
      multiValuedAttributeBehavior:
        type: string
        enum:
        - "use-first-value"
        - "reject-entries-with-any-multivalued-source-attribute"
        - "use-all-values-if-possible-but-reject-if-not"
        - "use-all-values-if-possible-but-only-first-value-if-not"
        description: >-
               The behavior to exhibit for source attributes that have multiple values.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.
      sourceDN:
        type: string
        description: >-
               Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the source DN must not be equal to the target DN.
      delayPostGC:
        type: string
        description: >-
               Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection processing, before removing the "force-gc-starting" administrative alert, which marks the server as unavailable.
      invokeForFailedBinds:
        type: boolean
        description: >-
               Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.
      headerPrefixPerColumn:
        type: boolean
        description: >-
               This property controls whether the header prefix, which applies to a group of columns, appears at the start of each column header or only the first column in a group.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the PingOne service.
      updatedEntryNoLongerMatchesCriteriaBehavior:
        type: string
        enum:
        - "preserve-all-values"
        - "preserve-non-composed-values"
        - "remove-all-values-but-preserve-all-if-required"
        - "remove-all-values-but-preserve-non-composed-if-required"
        description: >-
               The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN and filter criteria, but now no longer satisfies that criteria.
      searchBaseDN:
        type: string
        description: >-
               The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
      OAuthClientID:
        type: string
        description: >-
               Specifies the OAuth Client ID used to authenticate connections to the PingOne API.
      append:
        type: boolean
        description: >-
               Specifies whether to append to existing log files.
      updateSourceAttributeBehavior:
        type: string
        enum:
        - "replace-composed-values"
        - "replace-all-values"
        - "preserve-existing-values"
        description: >-
               The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any of the value patterns.

  custom-logged-stats-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/custom-logged-stats-response'
    required:
    - schemas
    - totalResults
  add-custom-logged-stats-request:
    allOf:
    - type: object
      properties:
        statsName:
          type: string
          description: >-
              Name of the new Custom Logged Stats
    - $ref: '#/definitions/custom-logged-stats-properties'
    required:
    - statsName
  custom-logged-stats-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Custom Logged Stats
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/custom-logged-stats-properties'
    required:
    - id
    - schemas
  custom-logged-stats-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/custom-logged-stats-response'
  custom-logged-stats-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:custom-logged-stats"
      divideValueBy:
        type: string
        description: >-
               An optional floating point value that can be used to scale the resulting value.
      divideValueByAttribute:
        type: string
        description: >-
               An optional property that can scale the resulting value by another attribute in the monitored entry.
      monitorObjectclass:
        type: string
        description: >-
               The objectclass name of the monitor entries to examine for generating these statistics.
      regexPattern:
        type: string
        description: >-
               An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the attribute being monitored.
      description:
        type: string
        description: >-
               A description for this Custom Logged Stats
      enabled:
        type: boolean
        description: >-
               Indicates whether the Custom Logged Stats object is enabled.
      attributeToLog:
        type: array
        items:
          type: string
        description: >-
               Specifies the attributes on the monitor entries that should be included in the output.
      headerPrefix:
        type: string
        description: >-
               An optional prefix that is included in the header before the column name.
      statisticType:
        type: array
        items:
          type: string
          enum:
          - "raw"
          - "counter"
          - "average"
          - "minimum"
          - "maximum"
        description: >-
               Specifies the type of statistic to include in the output for each monitored attribute.
      decimalFormat:
        type: string
        description: >-
               This provides a way to format the monitored attribute value in the output to control the precision for instance.
      headerPrefixAttribute:
        type: string
        description: >-
               An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.
      regexReplacement:
        type: string
        description: >-
               An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value of the attribute being monitored.
      nonZeroImpliesNotIdle:
        type: boolean
        description: >-
               If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an interval is considered "idle" by the Periodic Stats Logger.
      includeFilter:
        type: string
        description: >-
               An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.
      columnName:
        type: array
        items:
          type: string
        description: >-
               Optionally, specifies an explicit name for each column header instead of having these names automatically generated from the monitored attribute name.

  sensitive-attribute-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/sensitive-attribute-response'
    required:
    - schemas
    - totalResults
  add-sensitive-attribute-request:
    allOf:
    - type: object
      properties:
        attributeName:
          type: string
          description: >-
              Name of the new Sensitive Attribute
    - $ref: '#/definitions/sensitive-attribute-properties'
    required:
    - attributeName
  sensitive-attribute-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Sensitive Attribute
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/sensitive-attribute-properties'
    required:
    - id
    - schemas
  sensitive-attribute-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/sensitive-attribute-response'
  sensitive-attribute-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:sensitive-attribute"
      allowInCompare:
        type: string
        enum:
        - "allow"
        - "reject"
        - "secure-only"
        description: >-
               Indicates whether clients will be allowed to target sensitive attributes with compare requests.
      allowInReturnedEntries:
        type: string
        enum:
        - "allow"
        - "suppress"
        - "secure-only"
        description: >-
               Indicates whether sensitive attributes should be included in entries returned to the client. This includes not only search result entries, but also other forms including in the values of controls like the pre-read, post-read, get authorization entry, and LDAP join response controls.
      allowInModify:
        type: string
        enum:
        - "allow"
        - "reject"
        - "secure-only"
        description: >-
               Indicates whether clients will be allowed to target sensitive attributes with modify requests.
      attributeType:
        type: array
        items:
          type: string
        description: >-
               The name(s) or OID(s) of the attribute types for attributes whose values may be considered sensitive.
      description:
        type: string
        description: >-
               A description for this Sensitive Attribute
      includeDefaultSensitiveOperationalAttributes:
        type: boolean
        description: >-
               Indicates whether to automatically include any server-generated operational attributes that may contain sensitive data.
      allowInFilter:
        type: string
        enum:
        - "allow"
        - "reject"
        - "secure-only"
        description: >-
               Indicates whether clients will be allowed to include sensitive attributes in search filters. This also includes filters that may be used in other forms, including assertion and LDAP join request controls.
      allowInAdd:
        type: string
        enum:
        - "allow"
        - "reject"
        - "secure-only"
        description: >-
               Indicates whether clients will be allowed to include sensitive attributes in add requests.

  access-token-validator-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/access-token-validator-response'
    required:
    - schemas
    - totalResults
  add-access-token-validator-request:
    allOf:
    - type: object
      properties:
        validatorName:
          type: string
          description: >-
              Name of the new Access Token Validator
    - $ref: '#/definitions/access-token-validator-properties'
    required:
    - validatorName
  access-token-validator-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Access Token Validator
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/access-token-validator-properties'
    required:
    - id
    - schemas
  access-token-validator-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/access-token-validator-response'
  access-token-validator-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:access-token-validator:ping-federate"
          - "urn:pingidentity:schemas:configuration:2.0:access-token-validator:jwt"
          - "urn:pingidentity:schemas:configuration:2.0:access-token-validator:mock"
          - "urn:pingidentity:schemas:configuration:2.0:access-token-validator:third-party"
      subjectClaimName:
        type: string
        description: >-
               The name of the token claim that contains the subject, i.e. the logged-in user in an access token. This property goes hand-in-hand with the identity-mapper property and tells the Identity Mapper which field to use to look up the user entry on the server.
      signingCertificate:
        type: array
        items:
          type: string
        description: >-
               Specifies the locally stored certificates that may be used to validate the signature of an incoming JWT access token. If this property is specified, the JWT Access Token Validator will not use a JWKS endpoint to retrieve public keys.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Access Token Validator.
      accessTokenManagerID:
        type: string
        description: >-
               The Access Token Manager instance ID to specify when calling the PingFederate introspection endpoint. If this property is set the include-aud-parameter property is ignored.
      scopeClaimName:
        type: string
        description: >-
               The name of the token claim that contains the scopes granted by the token.
      clientID:
        type: string
        description: >-
               The client identifier to use when authenticating to the PingFederate authorization server.
      authorizationServer:
        type: string
        description: >-
               Specifies the external server that will be used to aid in validating access tokens. In most cases this will be the Authorization Server that minted the token.
      jwksEndpointPath:
        type: string
        description: >-
               The relative path to JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming JWT access token. This path is relative to the base_url property defined for the validator's external authorization server. If jwks-endpoint-path is specified, the JWT Access Token Validator will not consult locally stored certificates for validating token signatures.
      includeAudParameter:
        type: boolean
        description: >-
               Whether to include the incoming request URL as the "aud" parameter when calling the PingFederate introspection endpoint. This property is ignored if the access-token-manager-id property is set.
      description:
        type: string
        description: >-
               A description for this Access Token Validator
      encryptionKeyPair:
        type: string
        description: >-
               The public-private key pair that is used to encrypt the JWT payload. If specified, the JWT Access Token Validator will use the private key to decrypt the JWT payload, and the public key must be exported to the Authorization Server that is issuing access tokens.
      endpointCacheRefresh:
        type: string
        description: >-
               How often the Access Token Validator should refresh its stored value of the PingFederate server's token introspection endpoint.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Access Token Validator is enabled for use in Directory Server.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Access Token Validator. Each configuration property should be given in the form 'name=value'.
      clientSecretPassphraseProvider:
        type: string
        description: >-
               The passphrase provider for obtaining the client secret to use when authenticating to the PingFederate authorization server.
      allowedContentEncryptionAlgorithm:
        type: array
        items:
          type: string
          enum:
          - "A128CBC_HS256"
          - "A192CBC_HS384"
          - "A256CBC_HS512"
        description: >-
               Specifies an allow list of JWT content encryption algorithms that will be accepted by the JWT Access Token Validator.
      clientIDClaimName:
        type: string
        description: >-
               The name of the token claim that contains the OAuth2 client Id.
      evaluationOrderIndex:
        type: integer
        description: >-
               When multiple Ping Federate Access Token Validators are defined for a single Directory Server, this property determines the evaluation order for determining the correct validator class for an access token received by the Directory Server. Values of this property must be unique among all Ping Federate Access Token Validators defined within Directory Server but not necessarily contiguous. Ping Federate Access Token Validators with a smaller value will be evaluated first to determine if they are able to validate the access token.
      allowedKeyEncryptionAlgorithm:
        type: array
        items:
          type: string
          enum:
          - "RSA_OAEP"
          - "ECDH_ES"
          - "ECDH_ES_A128KW"
          - "ECDH_ES_A192KW"
          - "ECDH_ES_A256KW"
        description: >-
               Specifies an allow list of JWT key encryption algorithms that will be accepted by the JWT Access Token Validator. This setting is only used if encryption-key-pair is set.
      clientSecret:
        type: string
        description: >-
               The client secret to use when authenticating to the PingFederate authorization server.
      identityMapper:
        type: string
        description: >-
               Specifies the name of the Identity Mapper that should be used for associating user entries with Bearer token subject names. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
      allowedSigningAlgorithm:
        type: array
        items:
          type: string
          enum:
          - "RS256"
          - "RS384"
          - "RS512"
          - "ES256"
          - "ES384"
          - "ES512"
        description: >-
               Specifies an allow list of JWT signing algorithms that will be accepted by the JWT Access Token Validator.
      clockSkewGracePeriod:
        type: string
        description: >-
               Specifies the amount of clock skew that is tolerated by the JWT Access Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.

  root-dse-backend-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Root DSE Backend
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/root-dse-backend-properties'
    required:
    - id
    - schemas
  root-dse-backend-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/root-dse-backend-response'
  root-dse-backend-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:root-dse-backend"
      subordinateBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of base DNs used for singleLevel, wholeSubtree, and subordinateSubtree searches based at the root DSE.
      additionalSupportedControlOID:
        type: array
        items:
          type: string
        description: >-
               Specifies an additional OID that should appear in the list of supportedControl values in the server's root DSE.
      showAllAttributes:
        type: boolean
        description: >-
               Indicates whether all attributes in the root DSE are to be treated like user attributes (and therefore returned to clients by default) regardless of the Directory Server schema configuration.
      useLegacyVendorVersion:
        type: boolean
        description: >-
               Indicates whether the server's root DSE should reflect current or legacy values for the vendorName and vendorVersion attributes.

  log-field-mapping-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/log-field-mapping-response'
    required:
    - schemas
    - totalResults
  add-log-field-mapping-request:
    allOf:
    - type: object
      properties:
        mappingName:
          type: string
          description: >-
              Name of the new Log Field Mapping
    - $ref: '#/definitions/log-field-mapping-properties'
    required:
    - mappingName
  log-field-mapping-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Log Field Mapping
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/log-field-mapping-properties'
    required:
    - id
    - schemas
  log-field-mapping-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/log-field-mapping-response'
  log-field-mapping-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:log-field-mapping:access"
          - "urn:pingidentity:schemas:configuration:2.0:log-field-mapping:error"
      logFieldAuthenticationFailureID:
        type: string
        description: >-
               The numeric identifier for the authentication failure reason.
      logFieldRequestedAttributes:
        type: string
        description: >-
               The set of requested attributes for the search operation.
      logFieldTargetProtocol:
        type: string
        description: >-
               The protocol used when forwarding the request to a backend server.
      logFieldSourceAddress:
        type: string
        description: >-
               The address of the client from which the connection was established.
      logFieldScope:
        type: string
        description: >-
               The scope for the search operation.
      logFieldMessageType:
        type: string
        description: >-
               The type of log message. Message types may include "CONNECT", "DISCONNECT", "FORWARD", "RESULT", "ENTRY", or "REFERENCE".
      logFieldStartupid:
        type: string
        description: >-
               The startup ID for the Directory Server. A different value will be generated each time the server is started, and it may be used to distinguish between operations with the same connection ID and operation ID across server restarts.
      logFieldRequestControls:
        type: string
        description: >-
               The OIDs of the request controls returned to the client.
      logFieldNewSuperiorDN:
        type: string
        description: >-
               The new superior DN from a modify DN operation.
      logFieldReplicationChangeID:
        type: string
        description: >-
               The replication change ID.
      logFieldRequesterDN:
        type: string
        description: >-
               The DN of the user that requested the operation.
      logFieldReferralUrls:
        type: string
        description: >-
               The referral URLs returned to the client.
      logFieldMessageID:
        type: string
        description: >-
               The message ID included in the client request.
      logFieldProductName:
        type: string
        description: >-
               The name for this Directory Server product, which may be used to identify which product was used to log the message if multiple products log to the same database table.
      logFieldAlternateAuthorizationDN:
        type: string
        description: >-
               The DN of the alternate authorization identity used when processing the operation.
      logFieldSASLMechanismName:
        type: string
        description: >-
               The name of the SASL mechanism used to authenticate.
      logFieldNewRDN:
        type: string
        description: >-
               The new RDN to use for a modify DN operation.
      logFieldProtocolName:
        type: string
        description: >-
               The name of the protocol the client is using to communicate with the Directory Server.
      logFieldAuthenticatedUserDN:
        type: string
        description: >-
               The DN of the user that authenticated to the server.
      logFieldRequestOID:
        type: string
        description: >-
               The OID of an extended request.
      logFieldResponseControls:
        type: string
        description: >-
               The OIDs of the response controls returned to the client.
      logFieldTargetHost:
        type: string
        description: >-
               The address of the server to which the request has been forwarded.
      logFieldTimestamp:
        type: string
        description: >-
               The time that the operation was processed.
      logFieldSeverity:
        type: string
        description: >-
               The severity for the log message.
      logFieldDeleteOldRDN:
        type: string
        description: >-
               Indicates whether the old RDN values should be removed from an entry while processing a modify DN operation.
      logFieldInstanceName:
        type: string
        description: >-
               A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to log the message if multiple server instances log to the same database table.
      logFieldBindDN:
        type: string
        description: >-
               The bind DN for a bind operation.
      logFieldTargetAddress:
        type: string
        description: >-
               The network address of the Directory Server to which the client connection has been established.
      logFieldIntermediateClientResult:
        type: string
        description: >-
               The contents of the intermediate client response control returned to the client.
      logFieldIntermediateClientRequest:
        type: string
        description: >-
               The contents of the intermediate client request control provided by the client.
      logFieldRequesterIPAddress:
        type: string
        description: >-
               The IP address of the client that requested the operation.
      logFieldResponseOID:
        type: string
        description: >-
               The OID of an extended response.
      logFieldProcessingTime:
        type: string
        description: >-
               The length of time (in milliseconds with microsecond accuracy) required to process the operation.
      description:
        type: string
        description: >-
               A description for this Log Field Mapping
      logFieldTargetPort:
        type: string
        description: >-
               The network port of the Directory Server to which the client connection has been established, or of the backend server to which the request has been forwarded.
      logFieldTargetAttribute:
        type: string
        description: >-
               The name of the attribute targeted by a compare operation.
      logFieldBaseDN:
        type: string
        description: >-
               The base DN for a search operation.
      logFieldAuthenticationType:
        type: string
        description: >-
               The type of authentication requested by the client.
      logFieldEntriesReturned:
        type: string
        description: >-
               The number of search result entries returned to the client.
      logFieldAuthenticationFailureReason:
        type: string
        description: >-
               A message explaining the reason that the authentication attempt failed.
      logFieldMatchedDN:
        type: string
        description: >-
               The DN of the superior entry closest to the DN specified by the client.
      logFieldMessage:
        type: string
        description: >-
               The diagnostic message for the operation.
      logFieldMessageIDToAbandon:
        type: string
        description: >-
               The message ID of the operation to be abandoned.
      logFieldCategory:
        type: string
        description: >-
               The category for the log message.
      logFieldOperationID:
        type: string
        description: >-
               The operation ID for the operation processed by the server.
      logFieldOperationType:
        type: string
        description: >-
               The type of operation that was processed.
      logFieldUnindexed:
        type: string
        description: >-
               Indicates whether the requested search operation was unindexed.
      logFieldResultCode:
        type: string
        description: >-
               The numeric result code for the operation.
      logFieldOrigin:
        type: string
        description: >-
               The origin for the operation. Values may include "replication" (if the operation was received via replication), "internal" (if it was an internal operation processed by a server component), or "external" (if it was a request from a client).
      logFieldFilter:
        type: string
        description: >-
               The filter from a search operation.
      logFieldAdditionalInformation:
        type: string
        description: >-
               Additional information about the operation that was processed which was not returned to the client.
      logFieldConnectionID:
        type: string
        description: >-
               The connection ID assigned to the client connection.
      logFieldDisconnectReason:
        type: string
        description: >-
               The reason that the client connection was closed.
      logFieldEntryDN:
        type: string
        description: >-
               The DN of the entry targeted by the operation.
      logFieldProtocolVersion:
        type: string
        description: >-
               The protocol version used by the client when communicating with the Directory Server.

  password-generator-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/password-generator-response'
    required:
    - schemas
    - totalResults
  add-password-generator-request:
    allOf:
    - type: object
      properties:
        generatorName:
          type: string
          description: >-
              Name of the new Password Generator
    - $ref: '#/definitions/password-generator-properties'
    required:
    - generatorName
  password-generator-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Password Generator
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/password-generator-properties'
    required:
    - id
    - schemas
  password-generator-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/password-generator-response'
  password-generator-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:password-generator:random"
          - "urn:pingidentity:schemas:configuration:2.0:password-generator:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:password-generator:passphrase"
          - "urn:pingidentity:schemas:configuration:2.0:password-generator:third-party"
      minimumPasswordCharacters:
        type: integer
        description: >-
               The minimum number of characters that generated passwords will be required to have.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Password Generator.
      passwordFormat:
        type: string
        description: >-
               Specifies the format to use for the generated password.
      dictionaryFile:
        type: string
        description: >-
               The path to the dictionary file that will be used to obtain the words for use in generated passwords.
      passwordCharacterSet:
        type: array
        items:
          type: string
        description: >-
               Specifies one or more named character sets.
      description:
        type: string
        description: >-
               A description for this Password Generator
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Password Generator.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Password Generator. Each configuration property should be given in the form 'name=value'.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Password Generator is enabled for use.
      minimumPasswordWords:
        type: integer
        description: >-
               The minimum number of words that must be concatenated in the course of generating a password.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Password Generator. Each configuration property should be given in the form 'name=value'.
      capitalizeWords:
        type: boolean
        description: >-
               Indicates whether to capitalize each word used in the generated password.

  otp-delivery-mechanism-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/otp-delivery-mechanism-response'
    required:
    - schemas
    - totalResults
  add-otp-delivery-mechanism-request:
    allOf:
    - type: object
      properties:
        mechanismName:
          type: string
          description: >-
              Name of the new OTP Delivery Mechanism
    - $ref: '#/definitions/otp-delivery-mechanism-properties'
    required:
    - mechanismName
  otp-delivery-mechanism-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the OTP Delivery Mechanism
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/otp-delivery-mechanism-properties'
    required:
    - id
    - schemas
  otp-delivery-mechanism-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/otp-delivery-mechanism-response'
  otp-delivery-mechanism-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:twilio"
          - "urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:email"
          - "urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party OTP Delivery Mechanism.
      senderAddress:
        type: string
        description: >-
               The e-mail address to use as the sender for the one-time password.
      twilioAuthTokenPassphraseProvider:
        type: string
        description: >-
               The passphrase provider that may be used to obtain the auth token for the Twilio account that will be used.
      senderPhoneNumber:
        type: array
        items:
          type: string
        description: >-
               The outgoing phone number to use for the messages. Values must be phone numbers you have obtained for use with your Twilio account.
      messageSubject:
        type: string
        description: >-
               The subject to use for the e-mail message.
      twilioAccountSID:
        type: string
        description: >-
               The unique identifier assigned to the Twilio account that will be used.
      phoneNumberAttributeType:
        type: string
        description: >-
               The name or OID of the attribute in the user's entry that holds the phone number to which the message should be sent.
      phoneNumberJSONField:
        type: string
        description: >-
               The name of the JSON field whose value is the phone number to which the message should be sent. The phone number must be contained in a top-level field whose value is a single string.
      twilioAuthToken:
        type: string
        description: >-
               The auth token for the Twilio account that will be used.
      phoneNumberJSONObjectFilter:
        type: string
        description: >-
               A JSON object filter that may be used to identify which phone number value to use when sending the message.
      description:
        type: string
        description: >-
               A description for this OTP Delivery Mechanism
      emailAddressJSONField:
        type: string
        description: >-
               The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.
      enabled:
        type: boolean
        description: >-
               Indicates whether this OTP Delivery Mechanism is enabled for use in the server.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party OTP Delivery Mechanism. Each configuration property should be given in the form 'name=value'.
      messageTextAfterOTP:
        type: string
        description: >-
               Any text that should appear in the message after the one-time password value.
      messageTextBeforeOTP:
        type: string
        description: >-
               Any text that should appear in the message before the one-time password value.
      emailAddressAttributeType:
        type: string
        description: >-
               The name or OID of the attribute that holds the email address to which the message should be sent.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the Twilio service.
      emailAddressJSONObjectFilter:
        type: string
        description: >-
               A JSON object filter that may be used to identify which email address value to use when sending the message.

  log-field-behavior-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/log-field-behavior-response'
    required:
    - schemas
    - totalResults
  add-log-field-behavior-request:
    allOf:
    - type: object
      properties:
        behaviorName:
          type: string
          description: >-
              Name of the new Log Field Behavior
    - $ref: '#/definitions/log-field-behavior-properties'
    required:
    - behaviorName
  log-field-behavior-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Log Field Behavior
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/log-field-behavior-properties'
    required:
    - id
    - schemas
  log-field-behavior-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/log-field-behavior-response'
  log-field-behavior-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:log-field-behavior:text-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-field-behavior:json-formatted-access"
      tokenizeValueComponentsField:
        type: array
        items:
          type: string
          enum:
          - "abandon-message-id"
          - "add-attributes"
          - "add-entry-dn"
          - "add-undelete-from-dn"
          - "additional-info"
          - "administrative-operation"
          - "assurance-timeout-millis"
          - "authorization-dn"
          - "auto-authenticated-as"
          - "bind-authentication-dn"
          - "bind-authentication-failure-id"
          - "bind-authentication-failure-name"
          - "bind-authentication-failure-reason"
          - "bind-authentication-type"
          - "bind-authorization-dn"
          - "bind-dn"
          - "bind-protocol-version"
          - "bind-retired-password-used"
          - "bind-sasl-mechanism"
          - "change-to-soft-deleted-entry"
          - "cipher"
          - "client-connection-policy"
          - "collect-support-data-comment"
          - "collect-support-data-encrypted"
          - "collect-support-data-include-binary-files"
          - "collect-support-data-include-expensive-data"
          - "collect-support-data-include-extension-source"
          - "collect-support-data-include-replication-state-dump"
          - "collect-support-data-jstack-count"
          - "collect-support-data-log-duration"
          - "collect-support-data-log-file-head-collection-size-kb"
          - "collect-support-data-log-file-tail-collection-size-kb"
          - "collect-support-data-log-time-window"
          - "collect-support-data-report-count"
          - "collect-support-data-report-interval-seconds"
          - "collect-support-data-security-level"
          - "collect-support-data-use-sequential-mode"
          - "compare-assertion-value"
          - "compare-attribute-name"
          - "compare-entry-dn"
          - "connect-from-address"
          - "connect-from-port"
          - "connect-to-address"
          - "connect-to-port"
          - "connection-id"
          - "delete-entry-dn"
          - "delete-soft-deleted-entry-dn"
          - "deliver-otp-authentication-id"
          - "deliver-otp-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-dn"
          - "deliver-password-reset-token-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-successful-delivery-mechanism"
          - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
          - "diagnostic-message"
          - "disconnect-message"
          - "disconnect-reason"
          - "entry-rebalancing-admin-action-message"
          - "entry-rebalancing-base-dn"
          - "entry-rebalancing-entries-added-to-target"
          - "entry-rebalancing-entries-deleted-from-source"
          - "entry-rebalancing-entries-read-from-source"
          - "entry-rebalancing-error-message"
          - "entry-rebalancing-operation-id"
          - "entry-rebalancing-size-limit"
          - "entry-rebalancing-source-backend-set"
          - "entry-rebalancing-source-server"
          - "entry-rebalancing-source-server-altered"
          - "entry-rebalancing-target-backend-set"
          - "entry-rebalancing-target-server"
          - "entry-rebalancing-target-server-altered"
          - "export-reversible-passwords-backend-id"
          - "export-reversible-passwords-encryption-settings-definition-id"
          - "export-reversible-passwords-entries-excluded-not-matching-filter"
          - "export-reversible-passwords-entries-excluded-without-passwords"
          - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
          - "export-reversible-passwords-entries-exported-with-reversible-passwords"
          - "export-reversible-passwords-entries-exported-without-passwords"
          - "export-reversible-passwords-export-non-reversible-passwords"
          - "export-reversible-passwords-export-only-entries-with-passwords"
          - "export-reversible-passwords-filter"
          - "export-reversible-passwords-include-virtual-attributes"
          - "export-reversible-passwords-output-file"
          - "export-reversible-passwords-total-entries-examined"
          - "export-reversible-passwords-total-entries-excluded"
          - "export-reversible-passwords-total-entries-exported"
          - "extended-request-oid"
          - "extended-request-type"
          - "extended-response-oid"
          - "extended-response-type"
          - "externally-processed-bind-authentication-id"
          - "externally-processed-bind-auth-failure-reason"
          - "externally-processed-bind-end-client-ip-address"
          - "externally-processed-bind-external-mechanism-name"
          - "externally-processed-bind-was-password-based"
          - "externally-processed-bind-was-secure"
          - "externally-processed-bind-was-successful"
          - "generate-password-num-passwords"
          - "generate-password-max-validation-attempts"
          - "generate-password-password-generator"
          - "generate-password-password-policy"
          - "get-supported-otp-delivery-mechanisms-dn"
          - "gssapi-bind-qop"
          - "gssapi-bind-requested-authentication-id"
          - "gssapi-bind-requested-authorization-id"
          - "indexes-with-keys-accessed-exceeding-entry-limit"
          - "indexes-with-keys-accessed-near-entry-limit"
          - "instance-name"
          - "inter-server-bind-connection-privileges"
          - "inter-server-bind-connection-purpose"
          - "inter-server-bind-source-certificate-subject"
          - "inter-server-component"
          - "inter-server-control-forwarded-client-connection-policy"
          - "inter-server-properties"
          - "inter-server-operation-purpose"
          - "intermediate-client-request"
          - "intermediate-client-result"
          - "intermediate-response-name"
          - "intermediate-response-oid"
          - "intermediate-response-value"
          - "intermediate-responses-returned"
          - "issuer-certificate-subject-dn"
          - "ldap-client-decode-error-message"
          - "local-assurance-level"
          - "local-assurance-satisfied"
          - "matched-dn"
          - "message-id"
          - "missing-privileges"
          - "moddn-delete-old-rdn"
          - "moddn-entry-dn"
          - "moddn-new-rdn"
          - "moddn-new-superior-dn"
          - "modify-attributes"
          - "modify-entry-dn"
          - "multi-update-connection-id"
          - "multi-update-first-failed-operation"
          - "multi-update-first-failed-operation-error-message"
          - "multi-update-first-failed-operation-result-code"
          - "multi-update-operation-id"
          - "non-critical-json-formatted-request-control-decode-errors"
          - "non-critical-request-controls-ignored-due-to-acl"
          - "oauthbearer-bind-access-token-client-id"
          - "oauthbearer-bind-access-token-expiration-time"
          - "oauthbearer-bind-access-token-identifier"
          - "oauthbearer-bind-access-token-identity-mapper"
          - "oauthbearer-bind-access-token-is-active"
          - "oauthbearer-bind-access-token-issued-at"
          - "oauthbearer-bind-access-token-issuer"
          - "oauthbearer-bind-access-token-not-before"
          - "oauthbearer-bind-access-token-owner"
          - "oauthbearer-bind-access-token-scope"
          - "oauthbearer-bind-access-token-subject"
          - "oauthbearer-bind-access-token-type"
          - "oauthbearer-bind-access-token-username"
          - "oauthbearer-bind-access-token-validator"
          - "oauthbearer-bind-authorization-error-code"
          - "oauthbearer-bind-authorization-id"
          - "oauthbearer-bind-id-token-client-id"
          - "oauthbearer-bind-id-token-expiration-time"
          - "oauthbearer-bind-id-token-identifier"
          - "oauthbearer-bind-id-token-identity-mapper"
          - "oauthbearer-bind-id-token-is-active"
          - "oauthbearer-bind-id-token-issued-at"
          - "oauthbearer-bind-id-token-issuer"
          - "oauthbearer-bind-id-token-not-before"
          - "oauthbearer-bind-id-token-owner"
          - "oauthbearer-bind-id-token-subject"
          - "oauthbearer-bind-id-token-type"
          - "oauthbearer-bind-id-token-username"
          - "oauthbearer-bind-id-token-validator"
          - "operation-id"
          - "operation-oauth-scopes"
          - "operation-purpose"
          - "origin"
          - "pass-through-authentication-mapped-dn"
          - "pass-through-authentication-succeeded"
          - "pass-through-authentication-updated-local-password"
          - "password-modify-grace-login-used"
          - "password-modify-target-entry"
          - "password-modify-used-password-reset-token"
          - "password-policy-state-entry-dn"
          - "password-update-behavior-allow-pre-encoded-password"
          - "password-update-behavior-ignore-minimum-password-age"
          - "password-update-behavior-ignore-password-history"
          - "password-update-behavior-is-self-change"
          - "password-update-behavior-must-change-password"
          - "password-update-behavior-password-storage-scheme"
          - "password-update-behavior-skip-password-validation"
          - "peer-certificate-subject-dn"
          - "ping-one-pass-through-authentication-auth-failure-reason"
          - "ping-one-pass-through-authentication-mapped-id"
          - "ping-one-pass-through-authentication-updated-local-user-password"
          - "pluggable-pass-through-authentication-failure-reason"
          - "pluggable-pass-through-authentication-mapped-user-identifier"
          - "pluggable-pass-through-authentication-result-code"
          - "pluggable-pass-through-authentication-updated-local-user-password"
          - "pre-authorization-used-privileges"
          - "processing-time-millis"
          - "product-name"
          - "protocol"
          - "referral-urls"
          - "remote-assurance-level"
          - "remote-assurance-satisfied"
          - "replace-certificate-certificate-decode-error"
          - "replace-certificate-certificate-source"
          - "replace-certificate-key-store-error"
          - "replace-certificate-key-store-path"
          - "replace-certificate-private-key-decode-error"
          - "replace-certificate-request-decode-error"
          - "replace-certificate-tool-error"
          - "replication-change-id"
          - "request-control-oids"
          - "requester-dn"
          - "requester-ip-address"
          - "response-control-oids"
          - "response-delayed-by-assurance"
          - "result-code-name"
          - "result-code-value"
          - "search-base-dn"
          - "search-deref-policy"
          - "search-entries-returned"
          - "search-filter"
          - "search-requested-attributes"
          - "search-result-entry-dn"
          - "search-result-entry-attributes"
          - "search-scope-value"
          - "search-size-limit"
          - "search-time-limit-seconds"
          - "search-types-only"
          - "search-unindexed"
          - "server-assurance-results"
          - "servers-accessed"
          - "single-use-token-successful-delivery-mechanism"
          - "single-use-token-token-id"
          - "single-use-token-unsuccessful-delivery-mechanisms"
          - "single-use-token-user-dn"
          - "startup-id"
          - "target-host"
          - "target-port"
          - "target-protocol"
          - "thread-id"
          - "totp-shared-secret-authentication-id"
          - "totp-shared-secret-static-password-provided"
          - "triggered-by-connection-id"
          - "triggered-by-operation-id"
          - "uncached-data-accessed"
          - "uniqueness-request-control"
          - "used-privileges"
          - "using-admin-session-worker-thread"
          - "work-queue-wait-time-millis"
          - "yubikey-otp-bind-authentication-id"
          - "yubikey-otp-bind-authorization-id"
          - "yubikey-otp-device-authentication-id"
          - "yubikey-otp-device-static-password-provided"
          - "yubikey-otp-device-yubikey-public-id"
        description: >-
               The log fields whose values will include tokenized components.
      redactValueComponentsFieldName:
        type: array
        items:
          type: string
        description: >-
               The names of any custom fields for which to redact components within the value. This should generally only be used for fields that are not available through the redact-value-components-field property (for example, custom log fields defined in Server SDK extensions).
      omitField:
        type: array
        items:
          type: string
          enum:
          - "abandon-message-id"
          - "add-attributes"
          - "add-entry-dn"
          - "add-undelete-from-dn"
          - "additional-info"
          - "administrative-operation"
          - "assurance-timeout-millis"
          - "authorization-dn"
          - "auto-authenticated-as"
          - "bind-authentication-dn"
          - "bind-authentication-failure-id"
          - "bind-authentication-failure-name"
          - "bind-authentication-failure-reason"
          - "bind-authentication-type"
          - "bind-authorization-dn"
          - "bind-dn"
          - "bind-protocol-version"
          - "bind-retired-password-used"
          - "bind-sasl-mechanism"
          - "change-to-soft-deleted-entry"
          - "cipher"
          - "client-connection-policy"
          - "collect-support-data-comment"
          - "collect-support-data-encrypted"
          - "collect-support-data-include-binary-files"
          - "collect-support-data-include-expensive-data"
          - "collect-support-data-include-extension-source"
          - "collect-support-data-include-replication-state-dump"
          - "collect-support-data-jstack-count"
          - "collect-support-data-log-duration"
          - "collect-support-data-log-file-head-collection-size-kb"
          - "collect-support-data-log-file-tail-collection-size-kb"
          - "collect-support-data-log-time-window"
          - "collect-support-data-report-count"
          - "collect-support-data-report-interval-seconds"
          - "collect-support-data-security-level"
          - "collect-support-data-use-sequential-mode"
          - "compare-assertion-value"
          - "compare-attribute-name"
          - "compare-entry-dn"
          - "connect-from-address"
          - "connect-from-port"
          - "connect-to-address"
          - "connect-to-port"
          - "connection-id"
          - "delete-entry-dn"
          - "delete-soft-deleted-entry-dn"
          - "deliver-otp-authentication-id"
          - "deliver-otp-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-dn"
          - "deliver-password-reset-token-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-successful-delivery-mechanism"
          - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
          - "diagnostic-message"
          - "disconnect-message"
          - "disconnect-reason"
          - "entry-rebalancing-admin-action-message"
          - "entry-rebalancing-base-dn"
          - "entry-rebalancing-entries-added-to-target"
          - "entry-rebalancing-entries-deleted-from-source"
          - "entry-rebalancing-entries-read-from-source"
          - "entry-rebalancing-error-message"
          - "entry-rebalancing-operation-id"
          - "entry-rebalancing-size-limit"
          - "entry-rebalancing-source-backend-set"
          - "entry-rebalancing-source-server"
          - "entry-rebalancing-source-server-altered"
          - "entry-rebalancing-target-backend-set"
          - "entry-rebalancing-target-server"
          - "entry-rebalancing-target-server-altered"
          - "export-reversible-passwords-backend-id"
          - "export-reversible-passwords-encryption-settings-definition-id"
          - "export-reversible-passwords-entries-excluded-not-matching-filter"
          - "export-reversible-passwords-entries-excluded-without-passwords"
          - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
          - "export-reversible-passwords-entries-exported-with-reversible-passwords"
          - "export-reversible-passwords-entries-exported-without-passwords"
          - "export-reversible-passwords-export-non-reversible-passwords"
          - "export-reversible-passwords-export-only-entries-with-passwords"
          - "export-reversible-passwords-filter"
          - "export-reversible-passwords-include-virtual-attributes"
          - "export-reversible-passwords-output-file"
          - "export-reversible-passwords-total-entries-examined"
          - "export-reversible-passwords-total-entries-excluded"
          - "export-reversible-passwords-total-entries-exported"
          - "extended-request-oid"
          - "extended-request-type"
          - "extended-response-oid"
          - "extended-response-type"
          - "externally-processed-bind-authentication-id"
          - "externally-processed-bind-auth-failure-reason"
          - "externally-processed-bind-end-client-ip-address"
          - "externally-processed-bind-external-mechanism-name"
          - "externally-processed-bind-was-password-based"
          - "externally-processed-bind-was-secure"
          - "externally-processed-bind-was-successful"
          - "generate-password-num-passwords"
          - "generate-password-max-validation-attempts"
          - "generate-password-password-generator"
          - "generate-password-password-policy"
          - "get-supported-otp-delivery-mechanisms-dn"
          - "gssapi-bind-qop"
          - "gssapi-bind-requested-authentication-id"
          - "gssapi-bind-requested-authorization-id"
          - "indexes-with-keys-accessed-exceeding-entry-limit"
          - "indexes-with-keys-accessed-near-entry-limit"
          - "instance-name"
          - "inter-server-bind-connection-privileges"
          - "inter-server-bind-connection-purpose"
          - "inter-server-bind-source-certificate-subject"
          - "inter-server-component"
          - "inter-server-control-forwarded-client-connection-policy"
          - "inter-server-properties"
          - "inter-server-operation-purpose"
          - "intermediate-client-request"
          - "intermediate-client-result"
          - "intermediate-response-name"
          - "intermediate-response-oid"
          - "intermediate-response-value"
          - "intermediate-responses-returned"
          - "issuer-certificate-subject-dn"
          - "ldap-client-decode-error-message"
          - "local-assurance-level"
          - "local-assurance-satisfied"
          - "matched-dn"
          - "message-id"
          - "missing-privileges"
          - "moddn-delete-old-rdn"
          - "moddn-entry-dn"
          - "moddn-new-rdn"
          - "moddn-new-superior-dn"
          - "modify-attributes"
          - "modify-entry-dn"
          - "multi-update-connection-id"
          - "multi-update-first-failed-operation"
          - "multi-update-first-failed-operation-error-message"
          - "multi-update-first-failed-operation-result-code"
          - "multi-update-operation-id"
          - "non-critical-json-formatted-request-control-decode-errors"
          - "non-critical-request-controls-ignored-due-to-acl"
          - "oauthbearer-bind-access-token-client-id"
          - "oauthbearer-bind-access-token-expiration-time"
          - "oauthbearer-bind-access-token-identifier"
          - "oauthbearer-bind-access-token-identity-mapper"
          - "oauthbearer-bind-access-token-is-active"
          - "oauthbearer-bind-access-token-issued-at"
          - "oauthbearer-bind-access-token-issuer"
          - "oauthbearer-bind-access-token-not-before"
          - "oauthbearer-bind-access-token-owner"
          - "oauthbearer-bind-access-token-scope"
          - "oauthbearer-bind-access-token-subject"
          - "oauthbearer-bind-access-token-type"
          - "oauthbearer-bind-access-token-username"
          - "oauthbearer-bind-access-token-validator"
          - "oauthbearer-bind-authorization-error-code"
          - "oauthbearer-bind-authorization-id"
          - "oauthbearer-bind-id-token-client-id"
          - "oauthbearer-bind-id-token-expiration-time"
          - "oauthbearer-bind-id-token-identifier"
          - "oauthbearer-bind-id-token-identity-mapper"
          - "oauthbearer-bind-id-token-is-active"
          - "oauthbearer-bind-id-token-issued-at"
          - "oauthbearer-bind-id-token-issuer"
          - "oauthbearer-bind-id-token-not-before"
          - "oauthbearer-bind-id-token-owner"
          - "oauthbearer-bind-id-token-subject"
          - "oauthbearer-bind-id-token-type"
          - "oauthbearer-bind-id-token-username"
          - "oauthbearer-bind-id-token-validator"
          - "operation-id"
          - "operation-oauth-scopes"
          - "operation-purpose"
          - "origin"
          - "pass-through-authentication-mapped-dn"
          - "pass-through-authentication-succeeded"
          - "pass-through-authentication-updated-local-password"
          - "password-modify-grace-login-used"
          - "password-modify-target-entry"
          - "password-modify-used-password-reset-token"
          - "password-policy-state-entry-dn"
          - "password-update-behavior-allow-pre-encoded-password"
          - "password-update-behavior-ignore-minimum-password-age"
          - "password-update-behavior-ignore-password-history"
          - "password-update-behavior-is-self-change"
          - "password-update-behavior-must-change-password"
          - "password-update-behavior-password-storage-scheme"
          - "password-update-behavior-skip-password-validation"
          - "peer-certificate-subject-dn"
          - "ping-one-pass-through-authentication-auth-failure-reason"
          - "ping-one-pass-through-authentication-mapped-id"
          - "ping-one-pass-through-authentication-updated-local-user-password"
          - "pluggable-pass-through-authentication-failure-reason"
          - "pluggable-pass-through-authentication-mapped-user-identifier"
          - "pluggable-pass-through-authentication-result-code"
          - "pluggable-pass-through-authentication-updated-local-user-password"
          - "pre-authorization-used-privileges"
          - "processing-time-millis"
          - "product-name"
          - "protocol"
          - "referral-urls"
          - "remote-assurance-level"
          - "remote-assurance-satisfied"
          - "replace-certificate-certificate-decode-error"
          - "replace-certificate-certificate-source"
          - "replace-certificate-key-store-error"
          - "replace-certificate-key-store-path"
          - "replace-certificate-private-key-decode-error"
          - "replace-certificate-request-decode-error"
          - "replace-certificate-tool-error"
          - "replication-change-id"
          - "request-control-oids"
          - "requester-dn"
          - "requester-ip-address"
          - "response-control-oids"
          - "response-delayed-by-assurance"
          - "result-code-name"
          - "result-code-value"
          - "search-base-dn"
          - "search-deref-policy"
          - "search-entries-returned"
          - "search-filter"
          - "search-requested-attributes"
          - "search-result-entry-dn"
          - "search-result-entry-attributes"
          - "search-scope-value"
          - "search-size-limit"
          - "search-time-limit-seconds"
          - "search-types-only"
          - "search-unindexed"
          - "server-assurance-results"
          - "servers-accessed"
          - "single-use-token-successful-delivery-mechanism"
          - "single-use-token-token-id"
          - "single-use-token-unsuccessful-delivery-mechanisms"
          - "single-use-token-user-dn"
          - "startup-id"
          - "target-host"
          - "target-port"
          - "target-protocol"
          - "thread-id"
          - "totp-shared-secret-authentication-id"
          - "totp-shared-secret-static-password-provided"
          - "triggered-by-connection-id"
          - "triggered-by-operation-id"
          - "uncached-data-accessed"
          - "uniqueness-request-control"
          - "used-privileges"
          - "using-admin-session-worker-thread"
          - "work-queue-wait-time-millis"
          - "yubikey-otp-bind-authentication-id"
          - "yubikey-otp-bind-authorization-id"
          - "yubikey-otp-device-authentication-id"
          - "yubikey-otp-device-static-password-provided"
          - "yubikey-otp-device-yubikey-public-id"
        description: >-
               The log fields that should be omitted entirely from log messages. Neither the field name nor value will be included.
      redactEntireValueField:
        type: array
        items:
          type: string
          enum:
          - "abandon-message-id"
          - "add-attributes"
          - "add-entry-dn"
          - "add-undelete-from-dn"
          - "additional-info"
          - "administrative-operation"
          - "assurance-timeout-millis"
          - "authorization-dn"
          - "auto-authenticated-as"
          - "bind-authentication-dn"
          - "bind-authentication-failure-id"
          - "bind-authentication-failure-name"
          - "bind-authentication-failure-reason"
          - "bind-authentication-type"
          - "bind-authorization-dn"
          - "bind-dn"
          - "bind-protocol-version"
          - "bind-retired-password-used"
          - "bind-sasl-mechanism"
          - "change-to-soft-deleted-entry"
          - "cipher"
          - "client-connection-policy"
          - "collect-support-data-comment"
          - "collect-support-data-encrypted"
          - "collect-support-data-include-binary-files"
          - "collect-support-data-include-expensive-data"
          - "collect-support-data-include-extension-source"
          - "collect-support-data-include-replication-state-dump"
          - "collect-support-data-jstack-count"
          - "collect-support-data-log-duration"
          - "collect-support-data-log-file-head-collection-size-kb"
          - "collect-support-data-log-file-tail-collection-size-kb"
          - "collect-support-data-log-time-window"
          - "collect-support-data-report-count"
          - "collect-support-data-report-interval-seconds"
          - "collect-support-data-security-level"
          - "collect-support-data-use-sequential-mode"
          - "compare-assertion-value"
          - "compare-attribute-name"
          - "compare-entry-dn"
          - "connect-from-address"
          - "connect-from-port"
          - "connect-to-address"
          - "connect-to-port"
          - "connection-id"
          - "delete-entry-dn"
          - "delete-soft-deleted-entry-dn"
          - "deliver-otp-authentication-id"
          - "deliver-otp-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-dn"
          - "deliver-password-reset-token-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-successful-delivery-mechanism"
          - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
          - "diagnostic-message"
          - "disconnect-message"
          - "disconnect-reason"
          - "entry-rebalancing-admin-action-message"
          - "entry-rebalancing-base-dn"
          - "entry-rebalancing-entries-added-to-target"
          - "entry-rebalancing-entries-deleted-from-source"
          - "entry-rebalancing-entries-read-from-source"
          - "entry-rebalancing-error-message"
          - "entry-rebalancing-operation-id"
          - "entry-rebalancing-size-limit"
          - "entry-rebalancing-source-backend-set"
          - "entry-rebalancing-source-server"
          - "entry-rebalancing-source-server-altered"
          - "entry-rebalancing-target-backend-set"
          - "entry-rebalancing-target-server"
          - "entry-rebalancing-target-server-altered"
          - "export-reversible-passwords-backend-id"
          - "export-reversible-passwords-encryption-settings-definition-id"
          - "export-reversible-passwords-entries-excluded-not-matching-filter"
          - "export-reversible-passwords-entries-excluded-without-passwords"
          - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
          - "export-reversible-passwords-entries-exported-with-reversible-passwords"
          - "export-reversible-passwords-entries-exported-without-passwords"
          - "export-reversible-passwords-export-non-reversible-passwords"
          - "export-reversible-passwords-export-only-entries-with-passwords"
          - "export-reversible-passwords-filter"
          - "export-reversible-passwords-include-virtual-attributes"
          - "export-reversible-passwords-output-file"
          - "export-reversible-passwords-total-entries-examined"
          - "export-reversible-passwords-total-entries-excluded"
          - "export-reversible-passwords-total-entries-exported"
          - "extended-request-oid"
          - "extended-request-type"
          - "extended-response-oid"
          - "extended-response-type"
          - "externally-processed-bind-authentication-id"
          - "externally-processed-bind-auth-failure-reason"
          - "externally-processed-bind-end-client-ip-address"
          - "externally-processed-bind-external-mechanism-name"
          - "externally-processed-bind-was-password-based"
          - "externally-processed-bind-was-secure"
          - "externally-processed-bind-was-successful"
          - "generate-password-num-passwords"
          - "generate-password-max-validation-attempts"
          - "generate-password-password-generator"
          - "generate-password-password-policy"
          - "get-supported-otp-delivery-mechanisms-dn"
          - "gssapi-bind-qop"
          - "gssapi-bind-requested-authentication-id"
          - "gssapi-bind-requested-authorization-id"
          - "indexes-with-keys-accessed-exceeding-entry-limit"
          - "indexes-with-keys-accessed-near-entry-limit"
          - "instance-name"
          - "inter-server-bind-connection-privileges"
          - "inter-server-bind-connection-purpose"
          - "inter-server-bind-source-certificate-subject"
          - "inter-server-component"
          - "inter-server-control-forwarded-client-connection-policy"
          - "inter-server-properties"
          - "inter-server-operation-purpose"
          - "intermediate-client-request"
          - "intermediate-client-result"
          - "intermediate-response-name"
          - "intermediate-response-oid"
          - "intermediate-response-value"
          - "intermediate-responses-returned"
          - "issuer-certificate-subject-dn"
          - "ldap-client-decode-error-message"
          - "local-assurance-level"
          - "local-assurance-satisfied"
          - "matched-dn"
          - "message-id"
          - "missing-privileges"
          - "moddn-delete-old-rdn"
          - "moddn-entry-dn"
          - "moddn-new-rdn"
          - "moddn-new-superior-dn"
          - "modify-attributes"
          - "modify-entry-dn"
          - "multi-update-connection-id"
          - "multi-update-first-failed-operation"
          - "multi-update-first-failed-operation-error-message"
          - "multi-update-first-failed-operation-result-code"
          - "multi-update-operation-id"
          - "non-critical-json-formatted-request-control-decode-errors"
          - "non-critical-request-controls-ignored-due-to-acl"
          - "oauthbearer-bind-access-token-client-id"
          - "oauthbearer-bind-access-token-expiration-time"
          - "oauthbearer-bind-access-token-identifier"
          - "oauthbearer-bind-access-token-identity-mapper"
          - "oauthbearer-bind-access-token-is-active"
          - "oauthbearer-bind-access-token-issued-at"
          - "oauthbearer-bind-access-token-issuer"
          - "oauthbearer-bind-access-token-not-before"
          - "oauthbearer-bind-access-token-owner"
          - "oauthbearer-bind-access-token-scope"
          - "oauthbearer-bind-access-token-subject"
          - "oauthbearer-bind-access-token-type"
          - "oauthbearer-bind-access-token-username"
          - "oauthbearer-bind-access-token-validator"
          - "oauthbearer-bind-authorization-error-code"
          - "oauthbearer-bind-authorization-id"
          - "oauthbearer-bind-id-token-client-id"
          - "oauthbearer-bind-id-token-expiration-time"
          - "oauthbearer-bind-id-token-identifier"
          - "oauthbearer-bind-id-token-identity-mapper"
          - "oauthbearer-bind-id-token-is-active"
          - "oauthbearer-bind-id-token-issued-at"
          - "oauthbearer-bind-id-token-issuer"
          - "oauthbearer-bind-id-token-not-before"
          - "oauthbearer-bind-id-token-owner"
          - "oauthbearer-bind-id-token-subject"
          - "oauthbearer-bind-id-token-type"
          - "oauthbearer-bind-id-token-username"
          - "oauthbearer-bind-id-token-validator"
          - "operation-id"
          - "operation-oauth-scopes"
          - "operation-purpose"
          - "origin"
          - "pass-through-authentication-mapped-dn"
          - "pass-through-authentication-succeeded"
          - "pass-through-authentication-updated-local-password"
          - "password-modify-grace-login-used"
          - "password-modify-target-entry"
          - "password-modify-used-password-reset-token"
          - "password-policy-state-entry-dn"
          - "password-update-behavior-allow-pre-encoded-password"
          - "password-update-behavior-ignore-minimum-password-age"
          - "password-update-behavior-ignore-password-history"
          - "password-update-behavior-is-self-change"
          - "password-update-behavior-must-change-password"
          - "password-update-behavior-password-storage-scheme"
          - "password-update-behavior-skip-password-validation"
          - "peer-certificate-subject-dn"
          - "ping-one-pass-through-authentication-auth-failure-reason"
          - "ping-one-pass-through-authentication-mapped-id"
          - "ping-one-pass-through-authentication-updated-local-user-password"
          - "pluggable-pass-through-authentication-failure-reason"
          - "pluggable-pass-through-authentication-mapped-user-identifier"
          - "pluggable-pass-through-authentication-result-code"
          - "pluggable-pass-through-authentication-updated-local-user-password"
          - "pre-authorization-used-privileges"
          - "processing-time-millis"
          - "product-name"
          - "protocol"
          - "referral-urls"
          - "remote-assurance-level"
          - "remote-assurance-satisfied"
          - "replace-certificate-certificate-decode-error"
          - "replace-certificate-certificate-source"
          - "replace-certificate-key-store-error"
          - "replace-certificate-key-store-path"
          - "replace-certificate-private-key-decode-error"
          - "replace-certificate-request-decode-error"
          - "replace-certificate-tool-error"
          - "replication-change-id"
          - "request-control-oids"
          - "requester-dn"
          - "requester-ip-address"
          - "response-control-oids"
          - "response-delayed-by-assurance"
          - "result-code-name"
          - "result-code-value"
          - "search-base-dn"
          - "search-deref-policy"
          - "search-entries-returned"
          - "search-filter"
          - "search-requested-attributes"
          - "search-result-entry-dn"
          - "search-result-entry-attributes"
          - "search-scope-value"
          - "search-size-limit"
          - "search-time-limit-seconds"
          - "search-types-only"
          - "search-unindexed"
          - "server-assurance-results"
          - "servers-accessed"
          - "single-use-token-successful-delivery-mechanism"
          - "single-use-token-token-id"
          - "single-use-token-unsuccessful-delivery-mechanisms"
          - "single-use-token-user-dn"
          - "startup-id"
          - "target-host"
          - "target-port"
          - "target-protocol"
          - "thread-id"
          - "totp-shared-secret-authentication-id"
          - "totp-shared-secret-static-password-provided"
          - "triggered-by-connection-id"
          - "triggered-by-operation-id"
          - "uncached-data-accessed"
          - "uniqueness-request-control"
          - "used-privileges"
          - "using-admin-session-worker-thread"
          - "work-queue-wait-time-millis"
          - "yubikey-otp-bind-authentication-id"
          - "yubikey-otp-bind-authorization-id"
          - "yubikey-otp-device-authentication-id"
          - "yubikey-otp-device-static-password-provided"
          - "yubikey-otp-device-yubikey-public-id"
        description: >-
               The log fields whose values should be completely redacted in log messages. The field name will be included, but with a fixed value that does not reflect the actual value for the field.
      description:
        type: string
        description: >-
               A description for this Log Field Behavior
      tokenizeEntireValueFieldName:
        type: array
        items:
          type: string
        description: >-
               The names of any custom fields whose values should be completely tokenized. This should generally only be used for fields that are not available through the tokenize-entire-value-field property (for example, custom log fields defined in Server SDK extensions).
      redactValueComponentsField:
        type: array
        items:
          type: string
          enum:
          - "abandon-message-id"
          - "add-attributes"
          - "add-entry-dn"
          - "add-undelete-from-dn"
          - "additional-info"
          - "administrative-operation"
          - "assurance-timeout-millis"
          - "authorization-dn"
          - "auto-authenticated-as"
          - "bind-authentication-dn"
          - "bind-authentication-failure-id"
          - "bind-authentication-failure-name"
          - "bind-authentication-failure-reason"
          - "bind-authentication-type"
          - "bind-authorization-dn"
          - "bind-dn"
          - "bind-protocol-version"
          - "bind-retired-password-used"
          - "bind-sasl-mechanism"
          - "change-to-soft-deleted-entry"
          - "cipher"
          - "client-connection-policy"
          - "collect-support-data-comment"
          - "collect-support-data-encrypted"
          - "collect-support-data-include-binary-files"
          - "collect-support-data-include-expensive-data"
          - "collect-support-data-include-extension-source"
          - "collect-support-data-include-replication-state-dump"
          - "collect-support-data-jstack-count"
          - "collect-support-data-log-duration"
          - "collect-support-data-log-file-head-collection-size-kb"
          - "collect-support-data-log-file-tail-collection-size-kb"
          - "collect-support-data-log-time-window"
          - "collect-support-data-report-count"
          - "collect-support-data-report-interval-seconds"
          - "collect-support-data-security-level"
          - "collect-support-data-use-sequential-mode"
          - "compare-assertion-value"
          - "compare-attribute-name"
          - "compare-entry-dn"
          - "connect-from-address"
          - "connect-from-port"
          - "connect-to-address"
          - "connect-to-port"
          - "connection-id"
          - "delete-entry-dn"
          - "delete-soft-deleted-entry-dn"
          - "deliver-otp-authentication-id"
          - "deliver-otp-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-dn"
          - "deliver-password-reset-token-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-successful-delivery-mechanism"
          - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
          - "diagnostic-message"
          - "disconnect-message"
          - "disconnect-reason"
          - "entry-rebalancing-admin-action-message"
          - "entry-rebalancing-base-dn"
          - "entry-rebalancing-entries-added-to-target"
          - "entry-rebalancing-entries-deleted-from-source"
          - "entry-rebalancing-entries-read-from-source"
          - "entry-rebalancing-error-message"
          - "entry-rebalancing-operation-id"
          - "entry-rebalancing-size-limit"
          - "entry-rebalancing-source-backend-set"
          - "entry-rebalancing-source-server"
          - "entry-rebalancing-source-server-altered"
          - "entry-rebalancing-target-backend-set"
          - "entry-rebalancing-target-server"
          - "entry-rebalancing-target-server-altered"
          - "export-reversible-passwords-backend-id"
          - "export-reversible-passwords-encryption-settings-definition-id"
          - "export-reversible-passwords-entries-excluded-not-matching-filter"
          - "export-reversible-passwords-entries-excluded-without-passwords"
          - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
          - "export-reversible-passwords-entries-exported-with-reversible-passwords"
          - "export-reversible-passwords-entries-exported-without-passwords"
          - "export-reversible-passwords-export-non-reversible-passwords"
          - "export-reversible-passwords-export-only-entries-with-passwords"
          - "export-reversible-passwords-filter"
          - "export-reversible-passwords-include-virtual-attributes"
          - "export-reversible-passwords-output-file"
          - "export-reversible-passwords-total-entries-examined"
          - "export-reversible-passwords-total-entries-excluded"
          - "export-reversible-passwords-total-entries-exported"
          - "extended-request-oid"
          - "extended-request-type"
          - "extended-response-oid"
          - "extended-response-type"
          - "externally-processed-bind-authentication-id"
          - "externally-processed-bind-auth-failure-reason"
          - "externally-processed-bind-end-client-ip-address"
          - "externally-processed-bind-external-mechanism-name"
          - "externally-processed-bind-was-password-based"
          - "externally-processed-bind-was-secure"
          - "externally-processed-bind-was-successful"
          - "generate-password-num-passwords"
          - "generate-password-max-validation-attempts"
          - "generate-password-password-generator"
          - "generate-password-password-policy"
          - "get-supported-otp-delivery-mechanisms-dn"
          - "gssapi-bind-qop"
          - "gssapi-bind-requested-authentication-id"
          - "gssapi-bind-requested-authorization-id"
          - "indexes-with-keys-accessed-exceeding-entry-limit"
          - "indexes-with-keys-accessed-near-entry-limit"
          - "instance-name"
          - "inter-server-bind-connection-privileges"
          - "inter-server-bind-connection-purpose"
          - "inter-server-bind-source-certificate-subject"
          - "inter-server-component"
          - "inter-server-control-forwarded-client-connection-policy"
          - "inter-server-properties"
          - "inter-server-operation-purpose"
          - "intermediate-client-request"
          - "intermediate-client-result"
          - "intermediate-response-name"
          - "intermediate-response-oid"
          - "intermediate-response-value"
          - "intermediate-responses-returned"
          - "issuer-certificate-subject-dn"
          - "ldap-client-decode-error-message"
          - "local-assurance-level"
          - "local-assurance-satisfied"
          - "matched-dn"
          - "message-id"
          - "missing-privileges"
          - "moddn-delete-old-rdn"
          - "moddn-entry-dn"
          - "moddn-new-rdn"
          - "moddn-new-superior-dn"
          - "modify-attributes"
          - "modify-entry-dn"
          - "multi-update-connection-id"
          - "multi-update-first-failed-operation"
          - "multi-update-first-failed-operation-error-message"
          - "multi-update-first-failed-operation-result-code"
          - "multi-update-operation-id"
          - "non-critical-json-formatted-request-control-decode-errors"
          - "non-critical-request-controls-ignored-due-to-acl"
          - "oauthbearer-bind-access-token-client-id"
          - "oauthbearer-bind-access-token-expiration-time"
          - "oauthbearer-bind-access-token-identifier"
          - "oauthbearer-bind-access-token-identity-mapper"
          - "oauthbearer-bind-access-token-is-active"
          - "oauthbearer-bind-access-token-issued-at"
          - "oauthbearer-bind-access-token-issuer"
          - "oauthbearer-bind-access-token-not-before"
          - "oauthbearer-bind-access-token-owner"
          - "oauthbearer-bind-access-token-scope"
          - "oauthbearer-bind-access-token-subject"
          - "oauthbearer-bind-access-token-type"
          - "oauthbearer-bind-access-token-username"
          - "oauthbearer-bind-access-token-validator"
          - "oauthbearer-bind-authorization-error-code"
          - "oauthbearer-bind-authorization-id"
          - "oauthbearer-bind-id-token-client-id"
          - "oauthbearer-bind-id-token-expiration-time"
          - "oauthbearer-bind-id-token-identifier"
          - "oauthbearer-bind-id-token-identity-mapper"
          - "oauthbearer-bind-id-token-is-active"
          - "oauthbearer-bind-id-token-issued-at"
          - "oauthbearer-bind-id-token-issuer"
          - "oauthbearer-bind-id-token-not-before"
          - "oauthbearer-bind-id-token-owner"
          - "oauthbearer-bind-id-token-subject"
          - "oauthbearer-bind-id-token-type"
          - "oauthbearer-bind-id-token-username"
          - "oauthbearer-bind-id-token-validator"
          - "operation-id"
          - "operation-oauth-scopes"
          - "operation-purpose"
          - "origin"
          - "pass-through-authentication-mapped-dn"
          - "pass-through-authentication-succeeded"
          - "pass-through-authentication-updated-local-password"
          - "password-modify-grace-login-used"
          - "password-modify-target-entry"
          - "password-modify-used-password-reset-token"
          - "password-policy-state-entry-dn"
          - "password-update-behavior-allow-pre-encoded-password"
          - "password-update-behavior-ignore-minimum-password-age"
          - "password-update-behavior-ignore-password-history"
          - "password-update-behavior-is-self-change"
          - "password-update-behavior-must-change-password"
          - "password-update-behavior-password-storage-scheme"
          - "password-update-behavior-skip-password-validation"
          - "peer-certificate-subject-dn"
          - "ping-one-pass-through-authentication-auth-failure-reason"
          - "ping-one-pass-through-authentication-mapped-id"
          - "ping-one-pass-through-authentication-updated-local-user-password"
          - "pluggable-pass-through-authentication-failure-reason"
          - "pluggable-pass-through-authentication-mapped-user-identifier"
          - "pluggable-pass-through-authentication-result-code"
          - "pluggable-pass-through-authentication-updated-local-user-password"
          - "pre-authorization-used-privileges"
          - "processing-time-millis"
          - "product-name"
          - "protocol"
          - "referral-urls"
          - "remote-assurance-level"
          - "remote-assurance-satisfied"
          - "replace-certificate-certificate-decode-error"
          - "replace-certificate-certificate-source"
          - "replace-certificate-key-store-error"
          - "replace-certificate-key-store-path"
          - "replace-certificate-private-key-decode-error"
          - "replace-certificate-request-decode-error"
          - "replace-certificate-tool-error"
          - "replication-change-id"
          - "request-control-oids"
          - "requester-dn"
          - "requester-ip-address"
          - "response-control-oids"
          - "response-delayed-by-assurance"
          - "result-code-name"
          - "result-code-value"
          - "search-base-dn"
          - "search-deref-policy"
          - "search-entries-returned"
          - "search-filter"
          - "search-requested-attributes"
          - "search-result-entry-dn"
          - "search-result-entry-attributes"
          - "search-scope-value"
          - "search-size-limit"
          - "search-time-limit-seconds"
          - "search-types-only"
          - "search-unindexed"
          - "server-assurance-results"
          - "servers-accessed"
          - "single-use-token-successful-delivery-mechanism"
          - "single-use-token-token-id"
          - "single-use-token-unsuccessful-delivery-mechanisms"
          - "single-use-token-user-dn"
          - "startup-id"
          - "target-host"
          - "target-port"
          - "target-protocol"
          - "thread-id"
          - "totp-shared-secret-authentication-id"
          - "totp-shared-secret-static-password-provided"
          - "triggered-by-connection-id"
          - "triggered-by-operation-id"
          - "uncached-data-accessed"
          - "uniqueness-request-control"
          - "used-privileges"
          - "using-admin-session-worker-thread"
          - "work-queue-wait-time-millis"
          - "yubikey-otp-bind-authentication-id"
          - "yubikey-otp-bind-authorization-id"
          - "yubikey-otp-device-authentication-id"
          - "yubikey-otp-device-static-password-provided"
          - "yubikey-otp-device-yubikey-public-id"
        description: >-
               The log fields whose values will include redacted components.
      tokenizeValueComponentsFieldName:
        type: array
        items:
          type: string
        description: >-
               The names of any custom fields for which to tokenize components within the value. This should generally only be used for fields that are not available through the tokenize-value-components-field property (for example, custom log fields defined in Server SDK extensions).
      redactEntireValueFieldName:
        type: array
        items:
          type: string
        description: >-
               The names of any custom fields whose values should be completely redacted. This should generally only be used for fields that are not available through the redact-entire-value-field property (for example, custom log fields defined in Server SDK extensions).
      defaultBehavior:
        type: string
        enum:
        - "preserve"
        - "omit"
        - "redact-entire-value"
        - "redact-value-components"
        - "tokenize-entire-value"
        - "tokenize-value-components"
        description: >-
               The default behavior that the server should exhibit for fields for which no explicit behavior is defined. If no default behavior is defined, the server will fall back to using the default behavior configured for the syntax used for each log field.
      tokenizeEntireValueField:
        type: array
        items:
          type: string
          enum:
          - "abandon-message-id"
          - "add-attributes"
          - "add-entry-dn"
          - "add-undelete-from-dn"
          - "additional-info"
          - "administrative-operation"
          - "assurance-timeout-millis"
          - "authorization-dn"
          - "auto-authenticated-as"
          - "bind-authentication-dn"
          - "bind-authentication-failure-id"
          - "bind-authentication-failure-name"
          - "bind-authentication-failure-reason"
          - "bind-authentication-type"
          - "bind-authorization-dn"
          - "bind-dn"
          - "bind-protocol-version"
          - "bind-retired-password-used"
          - "bind-sasl-mechanism"
          - "change-to-soft-deleted-entry"
          - "cipher"
          - "client-connection-policy"
          - "collect-support-data-comment"
          - "collect-support-data-encrypted"
          - "collect-support-data-include-binary-files"
          - "collect-support-data-include-expensive-data"
          - "collect-support-data-include-extension-source"
          - "collect-support-data-include-replication-state-dump"
          - "collect-support-data-jstack-count"
          - "collect-support-data-log-duration"
          - "collect-support-data-log-file-head-collection-size-kb"
          - "collect-support-data-log-file-tail-collection-size-kb"
          - "collect-support-data-log-time-window"
          - "collect-support-data-report-count"
          - "collect-support-data-report-interval-seconds"
          - "collect-support-data-security-level"
          - "collect-support-data-use-sequential-mode"
          - "compare-assertion-value"
          - "compare-attribute-name"
          - "compare-entry-dn"
          - "connect-from-address"
          - "connect-from-port"
          - "connect-to-address"
          - "connect-to-port"
          - "connection-id"
          - "delete-entry-dn"
          - "delete-soft-deleted-entry-dn"
          - "deliver-otp-authentication-id"
          - "deliver-otp-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-dn"
          - "deliver-password-reset-token-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-successful-delivery-mechanism"
          - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
          - "diagnostic-message"
          - "disconnect-message"
          - "disconnect-reason"
          - "entry-rebalancing-admin-action-message"
          - "entry-rebalancing-base-dn"
          - "entry-rebalancing-entries-added-to-target"
          - "entry-rebalancing-entries-deleted-from-source"
          - "entry-rebalancing-entries-read-from-source"
          - "entry-rebalancing-error-message"
          - "entry-rebalancing-operation-id"
          - "entry-rebalancing-size-limit"
          - "entry-rebalancing-source-backend-set"
          - "entry-rebalancing-source-server"
          - "entry-rebalancing-source-server-altered"
          - "entry-rebalancing-target-backend-set"
          - "entry-rebalancing-target-server"
          - "entry-rebalancing-target-server-altered"
          - "export-reversible-passwords-backend-id"
          - "export-reversible-passwords-encryption-settings-definition-id"
          - "export-reversible-passwords-entries-excluded-not-matching-filter"
          - "export-reversible-passwords-entries-excluded-without-passwords"
          - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
          - "export-reversible-passwords-entries-exported-with-reversible-passwords"
          - "export-reversible-passwords-entries-exported-without-passwords"
          - "export-reversible-passwords-export-non-reversible-passwords"
          - "export-reversible-passwords-export-only-entries-with-passwords"
          - "export-reversible-passwords-filter"
          - "export-reversible-passwords-include-virtual-attributes"
          - "export-reversible-passwords-output-file"
          - "export-reversible-passwords-total-entries-examined"
          - "export-reversible-passwords-total-entries-excluded"
          - "export-reversible-passwords-total-entries-exported"
          - "extended-request-oid"
          - "extended-request-type"
          - "extended-response-oid"
          - "extended-response-type"
          - "externally-processed-bind-authentication-id"
          - "externally-processed-bind-auth-failure-reason"
          - "externally-processed-bind-end-client-ip-address"
          - "externally-processed-bind-external-mechanism-name"
          - "externally-processed-bind-was-password-based"
          - "externally-processed-bind-was-secure"
          - "externally-processed-bind-was-successful"
          - "generate-password-num-passwords"
          - "generate-password-max-validation-attempts"
          - "generate-password-password-generator"
          - "generate-password-password-policy"
          - "get-supported-otp-delivery-mechanisms-dn"
          - "gssapi-bind-qop"
          - "gssapi-bind-requested-authentication-id"
          - "gssapi-bind-requested-authorization-id"
          - "indexes-with-keys-accessed-exceeding-entry-limit"
          - "indexes-with-keys-accessed-near-entry-limit"
          - "instance-name"
          - "inter-server-bind-connection-privileges"
          - "inter-server-bind-connection-purpose"
          - "inter-server-bind-source-certificate-subject"
          - "inter-server-component"
          - "inter-server-control-forwarded-client-connection-policy"
          - "inter-server-properties"
          - "inter-server-operation-purpose"
          - "intermediate-client-request"
          - "intermediate-client-result"
          - "intermediate-response-name"
          - "intermediate-response-oid"
          - "intermediate-response-value"
          - "intermediate-responses-returned"
          - "issuer-certificate-subject-dn"
          - "ldap-client-decode-error-message"
          - "local-assurance-level"
          - "local-assurance-satisfied"
          - "matched-dn"
          - "message-id"
          - "missing-privileges"
          - "moddn-delete-old-rdn"
          - "moddn-entry-dn"
          - "moddn-new-rdn"
          - "moddn-new-superior-dn"
          - "modify-attributes"
          - "modify-entry-dn"
          - "multi-update-connection-id"
          - "multi-update-first-failed-operation"
          - "multi-update-first-failed-operation-error-message"
          - "multi-update-first-failed-operation-result-code"
          - "multi-update-operation-id"
          - "non-critical-json-formatted-request-control-decode-errors"
          - "non-critical-request-controls-ignored-due-to-acl"
          - "oauthbearer-bind-access-token-client-id"
          - "oauthbearer-bind-access-token-expiration-time"
          - "oauthbearer-bind-access-token-identifier"
          - "oauthbearer-bind-access-token-identity-mapper"
          - "oauthbearer-bind-access-token-is-active"
          - "oauthbearer-bind-access-token-issued-at"
          - "oauthbearer-bind-access-token-issuer"
          - "oauthbearer-bind-access-token-not-before"
          - "oauthbearer-bind-access-token-owner"
          - "oauthbearer-bind-access-token-scope"
          - "oauthbearer-bind-access-token-subject"
          - "oauthbearer-bind-access-token-type"
          - "oauthbearer-bind-access-token-username"
          - "oauthbearer-bind-access-token-validator"
          - "oauthbearer-bind-authorization-error-code"
          - "oauthbearer-bind-authorization-id"
          - "oauthbearer-bind-id-token-client-id"
          - "oauthbearer-bind-id-token-expiration-time"
          - "oauthbearer-bind-id-token-identifier"
          - "oauthbearer-bind-id-token-identity-mapper"
          - "oauthbearer-bind-id-token-is-active"
          - "oauthbearer-bind-id-token-issued-at"
          - "oauthbearer-bind-id-token-issuer"
          - "oauthbearer-bind-id-token-not-before"
          - "oauthbearer-bind-id-token-owner"
          - "oauthbearer-bind-id-token-subject"
          - "oauthbearer-bind-id-token-type"
          - "oauthbearer-bind-id-token-username"
          - "oauthbearer-bind-id-token-validator"
          - "operation-id"
          - "operation-oauth-scopes"
          - "operation-purpose"
          - "origin"
          - "pass-through-authentication-mapped-dn"
          - "pass-through-authentication-succeeded"
          - "pass-through-authentication-updated-local-password"
          - "password-modify-grace-login-used"
          - "password-modify-target-entry"
          - "password-modify-used-password-reset-token"
          - "password-policy-state-entry-dn"
          - "password-update-behavior-allow-pre-encoded-password"
          - "password-update-behavior-ignore-minimum-password-age"
          - "password-update-behavior-ignore-password-history"
          - "password-update-behavior-is-self-change"
          - "password-update-behavior-must-change-password"
          - "password-update-behavior-password-storage-scheme"
          - "password-update-behavior-skip-password-validation"
          - "peer-certificate-subject-dn"
          - "ping-one-pass-through-authentication-auth-failure-reason"
          - "ping-one-pass-through-authentication-mapped-id"
          - "ping-one-pass-through-authentication-updated-local-user-password"
          - "pluggable-pass-through-authentication-failure-reason"
          - "pluggable-pass-through-authentication-mapped-user-identifier"
          - "pluggable-pass-through-authentication-result-code"
          - "pluggable-pass-through-authentication-updated-local-user-password"
          - "pre-authorization-used-privileges"
          - "processing-time-millis"
          - "product-name"
          - "protocol"
          - "referral-urls"
          - "remote-assurance-level"
          - "remote-assurance-satisfied"
          - "replace-certificate-certificate-decode-error"
          - "replace-certificate-certificate-source"
          - "replace-certificate-key-store-error"
          - "replace-certificate-key-store-path"
          - "replace-certificate-private-key-decode-error"
          - "replace-certificate-request-decode-error"
          - "replace-certificate-tool-error"
          - "replication-change-id"
          - "request-control-oids"
          - "requester-dn"
          - "requester-ip-address"
          - "response-control-oids"
          - "response-delayed-by-assurance"
          - "result-code-name"
          - "result-code-value"
          - "search-base-dn"
          - "search-deref-policy"
          - "search-entries-returned"
          - "search-filter"
          - "search-requested-attributes"
          - "search-result-entry-dn"
          - "search-result-entry-attributes"
          - "search-scope-value"
          - "search-size-limit"
          - "search-time-limit-seconds"
          - "search-types-only"
          - "search-unindexed"
          - "server-assurance-results"
          - "servers-accessed"
          - "single-use-token-successful-delivery-mechanism"
          - "single-use-token-token-id"
          - "single-use-token-unsuccessful-delivery-mechanisms"
          - "single-use-token-user-dn"
          - "startup-id"
          - "target-host"
          - "target-port"
          - "target-protocol"
          - "thread-id"
          - "totp-shared-secret-authentication-id"
          - "totp-shared-secret-static-password-provided"
          - "triggered-by-connection-id"
          - "triggered-by-operation-id"
          - "uncached-data-accessed"
          - "uniqueness-request-control"
          - "used-privileges"
          - "using-admin-session-worker-thread"
          - "work-queue-wait-time-millis"
          - "yubikey-otp-bind-authentication-id"
          - "yubikey-otp-bind-authorization-id"
          - "yubikey-otp-device-authentication-id"
          - "yubikey-otp-device-static-password-provided"
          - "yubikey-otp-device-yubikey-public-id"
        description: >-
               The log fields whose values should be completely tokenized in log messages. The field name will be included, but the value will be replaced with a token that does not reveal the actual value, but that is generated from the value.
      preserveFieldName:
        type: array
        items:
          type: string
        description: >-
               The names of any custom fields whose values should be preserved. This should generally only be used for fields that are not available through the preserve-field property (for example, custom log fields defined in Server SDK extensions).
      omitFieldName:
        type: array
        items:
          type: string
        description: >-
               The names of any custom fields that should be omitted from log messages. This should generally only be used for fields that are not available through the omit-field property (for example, custom log fields defined in Server SDK extensions).
      preserveField:
        type: array
        items:
          type: string
          enum:
          - "abandon-message-id"
          - "add-attributes"
          - "add-entry-dn"
          - "add-undelete-from-dn"
          - "additional-info"
          - "administrative-operation"
          - "assurance-timeout-millis"
          - "authorization-dn"
          - "auto-authenticated-as"
          - "bind-authentication-dn"
          - "bind-authentication-failure-id"
          - "bind-authentication-failure-name"
          - "bind-authentication-failure-reason"
          - "bind-authentication-type"
          - "bind-authorization-dn"
          - "bind-dn"
          - "bind-protocol-version"
          - "bind-retired-password-used"
          - "bind-sasl-mechanism"
          - "change-to-soft-deleted-entry"
          - "cipher"
          - "client-connection-policy"
          - "collect-support-data-comment"
          - "collect-support-data-encrypted"
          - "collect-support-data-include-binary-files"
          - "collect-support-data-include-expensive-data"
          - "collect-support-data-include-extension-source"
          - "collect-support-data-include-replication-state-dump"
          - "collect-support-data-jstack-count"
          - "collect-support-data-log-duration"
          - "collect-support-data-log-file-head-collection-size-kb"
          - "collect-support-data-log-file-tail-collection-size-kb"
          - "collect-support-data-log-time-window"
          - "collect-support-data-report-count"
          - "collect-support-data-report-interval-seconds"
          - "collect-support-data-security-level"
          - "collect-support-data-use-sequential-mode"
          - "compare-assertion-value"
          - "compare-attribute-name"
          - "compare-entry-dn"
          - "connect-from-address"
          - "connect-from-port"
          - "connect-to-address"
          - "connect-to-port"
          - "connection-id"
          - "delete-entry-dn"
          - "delete-soft-deleted-entry-dn"
          - "deliver-otp-authentication-id"
          - "deliver-otp-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-dn"
          - "deliver-password-reset-token-preferred-delivery-mechanisms"
          - "deliver-password-reset-token-successful-delivery-mechanism"
          - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
          - "diagnostic-message"
          - "disconnect-message"
          - "disconnect-reason"
          - "entry-rebalancing-admin-action-message"
          - "entry-rebalancing-base-dn"
          - "entry-rebalancing-entries-added-to-target"
          - "entry-rebalancing-entries-deleted-from-source"
          - "entry-rebalancing-entries-read-from-source"
          - "entry-rebalancing-error-message"
          - "entry-rebalancing-operation-id"
          - "entry-rebalancing-size-limit"
          - "entry-rebalancing-source-backend-set"
          - "entry-rebalancing-source-server"
          - "entry-rebalancing-source-server-altered"
          - "entry-rebalancing-target-backend-set"
          - "entry-rebalancing-target-server"
          - "entry-rebalancing-target-server-altered"
          - "export-reversible-passwords-backend-id"
          - "export-reversible-passwords-encryption-settings-definition-id"
          - "export-reversible-passwords-entries-excluded-not-matching-filter"
          - "export-reversible-passwords-entries-excluded-without-passwords"
          - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
          - "export-reversible-passwords-entries-exported-with-reversible-passwords"
          - "export-reversible-passwords-entries-exported-without-passwords"
          - "export-reversible-passwords-export-non-reversible-passwords"
          - "export-reversible-passwords-export-only-entries-with-passwords"
          - "export-reversible-passwords-filter"
          - "export-reversible-passwords-include-virtual-attributes"
          - "export-reversible-passwords-output-file"
          - "export-reversible-passwords-total-entries-examined"
          - "export-reversible-passwords-total-entries-excluded"
          - "export-reversible-passwords-total-entries-exported"
          - "extended-request-oid"
          - "extended-request-type"
          - "extended-response-oid"
          - "extended-response-type"
          - "externally-processed-bind-authentication-id"
          - "externally-processed-bind-auth-failure-reason"
          - "externally-processed-bind-end-client-ip-address"
          - "externally-processed-bind-external-mechanism-name"
          - "externally-processed-bind-was-password-based"
          - "externally-processed-bind-was-secure"
          - "externally-processed-bind-was-successful"
          - "generate-password-num-passwords"
          - "generate-password-max-validation-attempts"
          - "generate-password-password-generator"
          - "generate-password-password-policy"
          - "get-supported-otp-delivery-mechanisms-dn"
          - "gssapi-bind-qop"
          - "gssapi-bind-requested-authentication-id"
          - "gssapi-bind-requested-authorization-id"
          - "indexes-with-keys-accessed-exceeding-entry-limit"
          - "indexes-with-keys-accessed-near-entry-limit"
          - "instance-name"
          - "inter-server-bind-connection-privileges"
          - "inter-server-bind-connection-purpose"
          - "inter-server-bind-source-certificate-subject"
          - "inter-server-component"
          - "inter-server-control-forwarded-client-connection-policy"
          - "inter-server-properties"
          - "inter-server-operation-purpose"
          - "intermediate-client-request"
          - "intermediate-client-result"
          - "intermediate-response-name"
          - "intermediate-response-oid"
          - "intermediate-response-value"
          - "intermediate-responses-returned"
          - "issuer-certificate-subject-dn"
          - "ldap-client-decode-error-message"
          - "local-assurance-level"
          - "local-assurance-satisfied"
          - "matched-dn"
          - "message-id"
          - "missing-privileges"
          - "moddn-delete-old-rdn"
          - "moddn-entry-dn"
          - "moddn-new-rdn"
          - "moddn-new-superior-dn"
          - "modify-attributes"
          - "modify-entry-dn"
          - "multi-update-connection-id"
          - "multi-update-first-failed-operation"
          - "multi-update-first-failed-operation-error-message"
          - "multi-update-first-failed-operation-result-code"
          - "multi-update-operation-id"
          - "non-critical-json-formatted-request-control-decode-errors"
          - "non-critical-request-controls-ignored-due-to-acl"
          - "oauthbearer-bind-access-token-client-id"
          - "oauthbearer-bind-access-token-expiration-time"
          - "oauthbearer-bind-access-token-identifier"
          - "oauthbearer-bind-access-token-identity-mapper"
          - "oauthbearer-bind-access-token-is-active"
          - "oauthbearer-bind-access-token-issued-at"
          - "oauthbearer-bind-access-token-issuer"
          - "oauthbearer-bind-access-token-not-before"
          - "oauthbearer-bind-access-token-owner"
          - "oauthbearer-bind-access-token-scope"
          - "oauthbearer-bind-access-token-subject"
          - "oauthbearer-bind-access-token-type"
          - "oauthbearer-bind-access-token-username"
          - "oauthbearer-bind-access-token-validator"
          - "oauthbearer-bind-authorization-error-code"
          - "oauthbearer-bind-authorization-id"
          - "oauthbearer-bind-id-token-client-id"
          - "oauthbearer-bind-id-token-expiration-time"
          - "oauthbearer-bind-id-token-identifier"
          - "oauthbearer-bind-id-token-identity-mapper"
          - "oauthbearer-bind-id-token-is-active"
          - "oauthbearer-bind-id-token-issued-at"
          - "oauthbearer-bind-id-token-issuer"
          - "oauthbearer-bind-id-token-not-before"
          - "oauthbearer-bind-id-token-owner"
          - "oauthbearer-bind-id-token-subject"
          - "oauthbearer-bind-id-token-type"
          - "oauthbearer-bind-id-token-username"
          - "oauthbearer-bind-id-token-validator"
          - "operation-id"
          - "operation-oauth-scopes"
          - "operation-purpose"
          - "origin"
          - "pass-through-authentication-mapped-dn"
          - "pass-through-authentication-succeeded"
          - "pass-through-authentication-updated-local-password"
          - "password-modify-grace-login-used"
          - "password-modify-target-entry"
          - "password-modify-used-password-reset-token"
          - "password-policy-state-entry-dn"
          - "password-update-behavior-allow-pre-encoded-password"
          - "password-update-behavior-ignore-minimum-password-age"
          - "password-update-behavior-ignore-password-history"
          - "password-update-behavior-is-self-change"
          - "password-update-behavior-must-change-password"
          - "password-update-behavior-password-storage-scheme"
          - "password-update-behavior-skip-password-validation"
          - "peer-certificate-subject-dn"
          - "ping-one-pass-through-authentication-auth-failure-reason"
          - "ping-one-pass-through-authentication-mapped-id"
          - "ping-one-pass-through-authentication-updated-local-user-password"
          - "pluggable-pass-through-authentication-failure-reason"
          - "pluggable-pass-through-authentication-mapped-user-identifier"
          - "pluggable-pass-through-authentication-result-code"
          - "pluggable-pass-through-authentication-updated-local-user-password"
          - "pre-authorization-used-privileges"
          - "processing-time-millis"
          - "product-name"
          - "protocol"
          - "referral-urls"
          - "remote-assurance-level"
          - "remote-assurance-satisfied"
          - "replace-certificate-certificate-decode-error"
          - "replace-certificate-certificate-source"
          - "replace-certificate-key-store-error"
          - "replace-certificate-key-store-path"
          - "replace-certificate-private-key-decode-error"
          - "replace-certificate-request-decode-error"
          - "replace-certificate-tool-error"
          - "replication-change-id"
          - "request-control-oids"
          - "requester-dn"
          - "requester-ip-address"
          - "response-control-oids"
          - "response-delayed-by-assurance"
          - "result-code-name"
          - "result-code-value"
          - "search-base-dn"
          - "search-deref-policy"
          - "search-entries-returned"
          - "search-filter"
          - "search-requested-attributes"
          - "search-result-entry-dn"
          - "search-result-entry-attributes"
          - "search-scope-value"
          - "search-size-limit"
          - "search-time-limit-seconds"
          - "search-types-only"
          - "search-unindexed"
          - "server-assurance-results"
          - "servers-accessed"
          - "single-use-token-successful-delivery-mechanism"
          - "single-use-token-token-id"
          - "single-use-token-unsuccessful-delivery-mechanisms"
          - "single-use-token-user-dn"
          - "startup-id"
          - "target-host"
          - "target-port"
          - "target-protocol"
          - "thread-id"
          - "totp-shared-secret-authentication-id"
          - "totp-shared-secret-static-password-provided"
          - "triggered-by-connection-id"
          - "triggered-by-operation-id"
          - "uncached-data-accessed"
          - "uniqueness-request-control"
          - "used-privileges"
          - "using-admin-session-worker-thread"
          - "work-queue-wait-time-millis"
          - "yubikey-otp-bind-authentication-id"
          - "yubikey-otp-bind-authorization-id"
          - "yubikey-otp-device-authentication-id"
          - "yubikey-otp-device-static-password-provided"
          - "yubikey-otp-device-yubikey-public-id"
        description: >-
               The log fields whose values should be logged with the intended value. The values for these fields will be preserved, although they may be sanitized for parsability or safety purposes (for example, to escape special characters in the value), and values that are too long may be truncated.

  server-instance-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/server-instance-response'
    required:
    - schemas
    - totalResults
  add-server-instance-request:
    allOf:
    - type: object
      properties:
        instanceName:
          type: string
          description: >-
              Name of the new Server Instance
    - $ref: '#/definitions/server-instance-properties'
    required:
    - instanceName
  server-instance-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Server Instance
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/server-instance-properties'
    required:
    - id
    - schemas
  server-instance-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/server-instance-response'
  server-instance-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:server-instance:proxy"
          - "urn:pingidentity:schemas:configuration:2.0:server-instance:metrics-engine"
          - "urn:pingidentity:schemas:configuration:2.0:server-instance:authorize"
          - "urn:pingidentity:schemas:configuration:2.0:server-instance:directory"
          - "urn:pingidentity:schemas:configuration:2.0:server-instance:sync"
      replicationServerID:
        type: integer
        description: >-
               Specifies a unique identifier for the replication server on this server instance.
      serverVersion:
        type: string
        description: >-
               The version of the server.
      serverInstanceType:
        type: string
        enum:
        - "ds"
        - "proxy"
        - "authorize"
        - "metrics"
        - "sync"
        description: >-
               Specifies the type of server installation.
      jmxPort:
        type: integer
        description: >-
               The TCP port on which this server is listening for JMX connections.
      memberOfServerGroup:
        type: array
        items:
          type: string
        description: >-
               The set of groups of which this server is a member.
      interServerCertificate:
        type: string
        description: >-
               The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
      replicationSetName:
        type: string
        description: >-
               The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within instances using the same replication set name.
      httpPort:
        type: integer
        description: >-
               The TCP port on which this server is listening for HTTP connections.
      ldapsPort:
        type: integer
        description: >-
               The TCP port on which this server is listening for LDAP secure connections.
      replicationDomainServerID:
        type: array
        items:
          type: integer
        description: >-
               Specifies a unique identifier for the Directory Server within the replication domain.
      serverRoot:
        type: string
        description: >-
               The file system path where this Server Instance is installed.
      ldapPort:
        type: integer
        description: >-
               The TCP port on which this server is listening for LDAP connections.
      serverInstanceName:
        type: string
        description: >-
               The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
      httpsPort:
        type: integer
        description: >-
               The TCP port on which this server is listening for HTTPS connections.
      startTLSEnabled:
        type: boolean
        description: >-
               Indicates whether StartTLS is enabled on this server.
      loadBalancingAlgorithmName:
        type: array
        items:
          type: string
        description: >-
               The name of the configuration object for a load-balancing algorithm that should include this server.
      hostname:
        type: string
        description: >-
               The name of the host where this Server Instance is installed.
      serverInstanceLocation:
        type: string
        description: >-
               Specifies the location for the Server Instance.
      clusterName:
        type: string
        description: >-
               The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
      preferredSecurity:
        type: string
        enum:
        - "none"
        - "ssl"
        - "starttls"
        description: >-
               Specifies the preferred mechanism to use for securing connections to the server.
      replicationPort:
        type: integer
        description: >-
               The replication TCP port.
      jmxsPort:
        type: integer
        description: >-
               The TCP port on which this server is listening for JMX secure connections.
      baseDN:
        type: array
        items:
          type: string
        description: >-
               The set of base DNs under the root DSE.

  server-instance-listener-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/server-instance-listener-response'
    required:
    - schemas
    - totalResults
  add-server-instance-listener-request:
    allOf:
    - type: object
      properties:
        listenerName:
          type: string
          description: >-
              Name of the new Server Instance Listener
    - $ref: '#/definitions/server-instance-listener-properties'
    required:
    - listenerName
  server-instance-listener-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Server Instance Listener
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/server-instance-listener-properties'
    required:
    - id
    - schemas
  server-instance-listener-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/server-instance-listener-response'
  server-instance-listener-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:ldap"
          - "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:http"
      listenerCertificate:
        type: string
        description: >-
               The public component of the certificate that the listener is expected to present to clients. When establishing a connection to this server, only the certificate(s) listed here will be trusted.
      connectionSecurity:
        type: string
        enum:
        - "none"
        - "ssl"
        - "starttls"
        description: >-
               Specifies the mechanism to use for securing connections to the server.
      purpose:
        type: array
        items:
          type: string
          enum:
          - "mirrored-config"
        description: >-
               Identifies the purpose of this Server Instance Listener.
      listenAddress:
        type: string
        description: >-
               If the server is listening on a particular address different from the hostname, then this property may be used to specify the address on which to listen for connections from HTTP clients.
      serverHTTPPort:
        type: integer
        description: >-
               The TCP port number on which the HTTP server is listening.
      serverLDAPPort:
        type: integer
        description: >-
               The TCP port number on which the LDAP server is listening.

  mac-secret-key-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/mac-secret-key-response'
    required:
    - schemas
    - totalResults
  add-mac-secret-key-request:
    allOf:
    - type: object
      properties:
        keyName:
          type: string
          description: >-
              Name of the new Mac Secret Key
    - $ref: '#/definitions/mac-secret-key-properties'
    required:
    - keyName
  mac-secret-key-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Mac Secret Key
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/mac-secret-key-properties'
    required:
    - id
    - schemas
  mac-secret-key-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/mac-secret-key-response'
  mac-secret-key-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:mac-secret-key"
      macAlgorithmName:
        type: string
        description: >-
               The algorithm name used to generate this MAC key, e.g. HmacMD5, HmacSHA1, HMacSHA256, etc.
      keyLengthBits:
        type: integer
        description: >-
               The length of the key in bits.
      isCompromised:
        type: boolean
        description: >-
               If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.
      keyID:
        type: string
        description: >-
               The unique system-generated identifier for the Secret Key.
      symmetricKey:
        type: array
        items:
          type: string
        description: >-
               The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.

  cipher-secret-key-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/cipher-secret-key-response'
    required:
    - schemas
    - totalResults
  add-cipher-secret-key-request:
    allOf:
    - type: object
      properties:
        keyName:
          type: string
          description: >-
              Name of the new Cipher Secret Key
    - $ref: '#/definitions/cipher-secret-key-properties'
    required:
    - keyName
  cipher-secret-key-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Cipher Secret Key
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/cipher-secret-key-properties'
    required:
    - id
    - schemas
  cipher-secret-key-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/cipher-secret-key-response'
  cipher-secret-key-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:cipher-secret-key"
      cipherTransformationName:
        type: string
        description: >-
               The algorithm name used to produce this cipher, e.g. AES/CBC/PKCS5Padding.
      keyLengthBits:
        type: integer
        description: >-
               The length of the key in bits.
      isCompromised:
        type: boolean
        description: >-
               If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.
      keyID:
        type: string
        description: >-
               The unique system-generated identifier for the Secret Key.
      initializationVectorLengthBits:
        type: integer
        description: >-
               The initialization vector length of the cipher in bits.
      symmetricKey:
        type: array
        items:
          type: string
        description: >-
               The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.

  inter-server-authentication-info-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/inter-server-authentication-info-response'
    required:
    - schemas
    - totalResults
  add-inter-server-authentication-info-request:
    allOf:
    - type: object
      properties:
        infoName:
          type: string
          description: >-
              Name of the new Inter Server Authentication Info
    - $ref: '#/definitions/inter-server-authentication-info-properties'
    required:
    - infoName
  inter-server-authentication-info-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Inter Server Authentication Info
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/inter-server-authentication-info-properties'
    required:
    - id
    - schemas
  inter-server-authentication-info-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/inter-server-authentication-info-response'
  inter-server-authentication-info-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:password"
          - "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:certificate"
      bindDN:
        type: string
        description: >-
               A DN of the username that should be used for the bind request.
      password:
        type: string
        description: >-
               The password for the username or bind-dn.
      purpose:
        type: array
        items:
          type: string
          enum:
          - "mirrored-config"
        description: >-
               Identifies the purpose of this Inter Server Authentication Info.
      authenticationType:
        type: string
        enum:
        - "simple"
        - "sasl-plain"
        description: >-
               Identifies the type of password authentication that will be used.
      username:
        type: string
        description: >-
               The username that should be used for the bind request.

  log-file-rotation-listener-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/log-file-rotation-listener-response'
    required:
    - schemas
    - totalResults
  add-log-file-rotation-listener-request:
    allOf:
    - type: object
      properties:
        listenerName:
          type: string
          description: >-
              Name of the new Log File Rotation Listener
    - $ref: '#/definitions/log-file-rotation-listener-properties'
    required:
    - listenerName
  log-file-rotation-listener-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Log File Rotation Listener
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/log-file-rotation-listener-properties'
    required:
    - id
    - schemas
  log-file-rotation-listener-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/log-file-rotation-listener-response'
  log-file-rotation-listener-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:summarize"
          - "urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:copy"
          - "urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Log File Rotation Listener.
      description:
        type: string
        description: >-
               A description for this Log File Rotation Listener
      outputDirectory:
        type: string
        description: >-
               The path to the directory in which the summarize-access-log output should be written. If no value is provided, the output file will be written into the same directory as the rotated log file.
      compressOnCopy:
        type: boolean
        description: >-
               Indicates whether the file should be gzip-compressed as it is copied into the destination directory.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Log File Rotation Listener is enabled for use.
      copyToDirectory:
        type: string
        description: >-
               The path to the directory to which log files should be copied. It must be different from the directory to which the log file is originally written, and administrators should ensure that the filesystem has sufficient space to hold files as they are copied.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Log File Rotation Listener. Each configuration property should be given in the form 'name=value'.

  password-policy-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/password-policy-response'
    required:
    - schemas
    - totalResults
  add-password-policy-request:
    allOf:
    - type: object
      properties:
        policyName:
          type: string
          description: >-
              Name of the new Password Policy
    - $ref: '#/definitions/password-policy-properties'
    required:
    - policyName
  password-policy-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Password Policy
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/password-policy-properties'
    required:
    - id
    - schemas
  password-policy-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/password-policy-response'
  password-policy-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:password-policy"
      previousLastLoginTimeFormat:
        type: array
        items:
          type: string
        description: >-
               Specifies the format string(s) that might have been used with the last login time at any point in the past for users associated with the password policy.
      recentLoginHistorySimilarAttemptBehavior:
        type: string
        enum:
        - "collapse-similar-attempts-on-the-same-date"
        - "maintain-every-attempt"
        - "update-at-most-once-per-day"
        description: >-
               The behavior that the server will exhibit when multiple similar authentication attempts (with the same values for the successful, authentication-method, client-ip-address, and failure-reason fields) are processed for an account.
      maxPasswordAge:
        type: string
        description: >-
               Specifies the maximum length of time that a user can continue using the same password before it must be changed (that is, the password expiration interval).
      requireChangeByTime:
        type: string
        description: >-
               Specifies the time by which all users with the associated password policy must change their passwords.
      requireSecurePasswordChanges:
        type: boolean
        description: >-
               Indicates whether users with the associated password policy are required to change their password in a secure manner that does not expose the credentials.
      accountStatusNotificationHandler:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the account status notification handlers that are used with the associated password storage scheme.
      passwordHistoryDuration:
        type: string
        description: >-
               Specifies the maximum length of time that passwords remain in the password history.
      deprecatedPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password storage schemes that are considered deprecated for this password policy.
      lockoutFailureCount:
        type: integer
        description: >-
               Specifies the maximum number of authentication failures that a user is allowed before the account is locked out.
      failureLockoutAction:
        type: string
        description: >-
               The action that the server should take for authentication attempts that target a user with more than the configured number of outstanding authentication failures.
      requireSecureAuthentication:
        type: boolean
        description: >-
               Indicates whether users with the associated password policy are required to authenticate in a secure manner.
      defaultPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password storage schemes that are used to encode clear-text passwords for this password policy.
      maxPasswordResetAge:
        type: string
        description: >-
               Specifies the maximum length of time that users have to change passwords after they have been reset by an administrator before they become locked.
      forceChangeOnReset:
        type: boolean
        description: >-
               Indicates whether users are forced to change their passwords if they are reset by an administrator. If a user's password is changed by any other user, that is considered an administrative password reset.
      minPasswordAge:
        type: string
        description: >-
               Specifies the minimum length of time after a password change before the user is allowed to change the password again.
      minimumBindPasswordValidationFrequency:
        type: string
        description: >-
               Indicates how frequently password validation should be performed during bind operations for each user to whom this password policy is assigned.
      skipValidationForAdministrators:
        type: boolean
        description: >-
               Indicates whether passwords set by administrators are allowed to bypass the password validation process that is required for user password changes.
      forceChangeOnAdd:
        type: boolean
        description: >-
               Indicates whether users are forced to change their passwords upon first authenticating to the Directory Server after their account has been created.
      maximumRecentLoginHistoryFailedAuthenticationCount:
        type: integer
        description: >-
               The maximum number of failed authentication attempts to include in the recent login history for each account.
      ignoreDuplicatePasswordFailures:
        type: boolean
        description: >-
               Indicates whether to ignore subsequent authentication failures using the same password as an earlier failed authentication attempt (within the time frame defined by the lockout failure expiration interval). If this option is "true", then multiple failed attempts using the same password will be considered only a single failure. If this option is "false", then any failure will be tracked regardless of whether it used the same password as an earlier attempt.
      lastLoginTimeFormat:
        type: string
        description: >-
               Specifies the format string that is used to generate the last login time value for users with the associated password policy. Last login time values will be written using the UTC (also known as GMT, or Greenwich Mean Time) time zone.
      passwordGenerator:
        type: string
        description: >-
               Specifies the name of the password generator that is used with the associated password policy.
      expirePasswordsWithoutWarning:
        type: boolean
        description: >-
               Indicates whether the Directory Server allows a user's password to expire even if that user has never seen an expiration warning notification.
      passwordAttribute:
        type: string
        description: >-
               Specifies the attribute type used to hold user passwords.
      passwordChangeRequiresCurrentPassword:
        type: boolean
        description: >-
               Indicates whether user password changes must use the password modify extended operation and must include the user's current password before the change is allowed.
      lastLoginTimeAttribute:
        type: string
        description: >-
               Specifies the name or OID of the attribute type that is used to hold the last login time for users with the associated password policy.
      lastLoginIPAddressAttribute:
        type: string
        description: >-
               Specifies the name or OID of the attribute type that is used to hold the IP address of the client from which the user last authenticated.
      enableDebug:
        type: boolean
        description: >-
               Indicates whether to enable debugging for the password policy state.
      returnPasswordExpirationControls:
        type: string
        enum:
        - "unless-password-policy-control-is-used"
        - "always"
        - "never"
        description: >-
               Indicates whether the server should return the password expiring and password expired response controls (as described in draft-vchu-ldap-pwd-policy).
      passwordExpirationWarningInterval:
        type: string
        description: >-
               Specifies the maximum length of time before a user's password actually expires that the server begins to include warning notifications in bind responses for that user.
      graceLoginCount:
        type: integer
        description: >-
               Specifies the number of grace logins that a user is allowed after the account has expired to allow that user to choose a new password.
      description:
        type: string
        description: >-
               A description for this Password Policy
      bindPasswordValidator:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password validators that should be invoked for bind operations.
      maximumRecentLoginHistorySuccessfulAuthenticationDuration:
        type: string
        description: >-
               The maximum age of successful authentication attempts to include in the recent login history for each account.
      idleLockoutInterval:
        type: string
        description: >-
               Specifies the maximum length of time that an account may remain idle (that is, the associated user does not authenticate to the server) before that user is locked out.
      lockoutFailureExpirationInterval:
        type: string
        description: >-
               Specifies the length of time before an authentication failure is no longer counted against a user for the purposes of account lockout.
      allowPreEncodedPasswords:
        type: boolean
        description: >-
               Indicates whether users can change their passwords by providing a pre-encoded value.
      stateUpdateFailurePolicy:
        type: string
        enum:
        - "ignore"
        - "reactive"
        - "proactive"
        description: >-
               Specifies how the server deals with the inability to update password policy state information during an authentication attempt.
      allowMultiplePasswordValues:
        type: boolean
        description: >-
               Indicates whether user entries can have multiple distinct values for the password attribute.
      allowExpiredPasswordChanges:
        type: boolean
        description: >-
               Indicates whether a user whose password is expired is still allowed to change that password using the password modify extended operation.
      maximumRecentLoginHistorySuccessfulAuthenticationCount:
        type: integer
        description: >-
               The maximum number of successful authentication attempts to include in the recent login history for each account.
      maxRetiredPasswordAge:
        type: string
        description: >-
               Specifies the maximum length of time that a retired password should be considered valid and may be used to authenticate to the server.
      allowedPasswordResetTokenUseCondition:
        type: array
        items:
          type: string
          enum:
          - "account-usable"
          - "password-expired"
          - "account-locked-due-to-failures"
          - "account-locked-due-to-idle-time-limit"
          - "account-locked-due-to-admin-reset-timeout"
          - "account-locked-due-to-validation-failure"
        description: >-
               The set of conditions under which a user governed by this Password Policy will be permitted to generate a password reset token via the deliver password reset token extended operation, and to use that token in lieu of the current password via the password modify extended operation.
      maximumRecentLoginHistoryFailedAuthenticationDuration:
        type: string
        description: >-
               The maximum age of failed authentication attempts to include in the recent login history for each account.
      bindPasswordValidationFailureAction:
        type: string
        enum:
        - "reject-bind"
        - "force-password-change"
        - "generate-account-status-notification"
        description: >-
               Specifies the behavior that the server should exhibit if a bind password fails validation by one or more of the configured bind password validators.
      passwordHistoryCount:
        type: integer
        description: >-
               Specifies the maximum number of former passwords to maintain in the password history.
      lockoutDuration:
        type: string
        description: >-
               Specifies the length of time that an account is locked after too many authentication failures.
      allowUserPasswordChanges:
        type: boolean
        description: >-
               Indicates whether users can change their own passwords.
      passwordValidator:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password validators that are used with the associated password storage scheme.
      passwordRetirementBehavior:
        type: array
        items:
          type: string
          enum:
          - "retire-on-self-change"
          - "retire-on-administrative-reset"
          - "retire-on-request-with-control"
        description: >-
               Specifies the conditions under which the server may retire a user's current password in the course of setting a new password for that user (whether via a modify operation or a password modify extended operation).

  delegated-admin-rights-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/delegated-admin-rights-response'
    required:
    - schemas
    - totalResults
  add-delegated-admin-rights-request:
    allOf:
    - type: object
      properties:
        rightsName:
          type: string
          description: >-
              Name of the new Delegated Admin Rights
    - $ref: '#/definitions/delegated-admin-rights-properties'
    required:
    - rightsName
  delegated-admin-rights-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Delegated Admin Rights
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/delegated-admin-rights-properties'
    required:
    - id
    - schemas
  delegated-admin-rights-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/delegated-admin-rights-response'
  delegated-admin-rights-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-rights"
      adminUserDN:
        type: string
        description: >-
               Specifies the DN of an administrative user who has authority to manage resources. Either admin-user-dn or admin-group-dn must be specified, but not both.
      description:
        type: string
        description: >-
               A description for this Delegated Admin Rights
      adminGroupDN:
        type: string
        description: >-
               Specifies the DN of a group of administrative users who have authority to manage resources. Either admin-user-dn or admin-group-dn must be specified, but not both.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Delegated Admin Rights is enabled.

  delegated-admin-resource-rights-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/delegated-admin-resource-rights-response'
    required:
    - schemas
    - totalResults
  add-delegated-admin-resource-rights-request:
    allOf:
    - type: object
      properties:
        restResourceType:
          type: string
          description: >-
              Name of the new Delegated Admin Resource Rights
    - $ref: '#/definitions/delegated-admin-resource-rights-properties'
    required:
    - restResourceType
  delegated-admin-resource-rights-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Delegated Admin Resource Rights
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/delegated-admin-resource-rights-properties'
    required:
    - id
    - schemas
  delegated-admin-resource-rights-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/delegated-admin-resource-rights-response'
  delegated-admin-resource-rights-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-resource-rights"
      resourcesInGroup:
        type: array
        items:
          type: string
        description: >-
               Specifies groups whose members can be managed by the administrator(s). The admin-scope must be set to resources-in-specific-groups.
      restResourceType:
        type: string
        description: >-
               Specifies the resource type applicable to these Delegated Admin Resource Rights.
      adminScope:
        type: string
        enum:
        - "resources-in-specific-groups"
        - "resources-in-specific-subtrees"
        - "all-resources-in-base"
        description: >-
               Specifies the scope of these Delegated Admin Resource Rights.
      adminPermission:
        type: array
        items:
          type: string
          enum:
          - "create"
          - "read"
          - "reference"
          - "update"
          - "update-profile"
          - "reset-password"
          - "delete"
          - "manage-group-membership"
          - "download"
          - "upload"
        description: >-
               Specifies administrator(s) permissions.
      resourceSubtree:
        type: array
        items:
          type: string
        description: >-
               Specifies subtrees within the search base whose entries can be managed by the administrator(s). The admin-scope must be set to resources-in-specific-subtrees.
      description:
        type: string
        description: >-
               A description for this Delegated Admin Resource Rights
      enabled:
        type: boolean
        description: >-
               Indicates whether these Delegated Admin Resource Rights are enabled.

  uncached-attribute-criteria-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/uncached-attribute-criteria-response'
    required:
    - schemas
    - totalResults
  add-uncached-attribute-criteria-request:
    allOf:
    - type: object
      properties:
        criteriaName:
          type: string
          description: >-
              Name of the new Uncached Attribute Criteria
    - $ref: '#/definitions/uncached-attribute-criteria-properties'
    required:
    - criteriaName
  uncached-attribute-criteria-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Uncached Attribute Criteria
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/uncached-attribute-criteria-properties'
    required:
    - id
    - schemas
  uncached-attribute-criteria-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/uncached-attribute-criteria-response'
  uncached-attribute-criteria-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:default"
          - "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:simple"
          - "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Uncached Attribute Criteria.
      minTotalValueSize:
        type: string
        description: >-
               Specifies the minimum total value size (i.e., the sum of the sizes of all values) that an attribute must have before it will be written into the uncached-id2entry database.
      attributeType:
        type: array
        items:
          type: string
        description: >-
               Specifies the attribute types for attributes that may be written to the uncached-id2entry database.
      description:
        type: string
        description: >-
               A description for this Uncached Attribute Criteria
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Uncached Attribute Criteria.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Uncached Attribute Criteria. Each configuration property should be given in the form 'name=value'.
      minValueCount:
        type: integer
        description: >-
               Specifies the minimum number of values that an attribute must have before it will be written into the uncached-id2entry database.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Uncached Attribute Criteria is enabled for use in the server.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Uncached Attribute Criteria. Each configuration property should be given in the form 'name=value'.

  result-code-map-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/result-code-map-response'
    required:
    - schemas
    - totalResults
  add-result-code-map-request:
    allOf:
    - type: object
      properties:
        mapName:
          type: string
          description: >-
              Name of the new Result Code Map
    - $ref: '#/definitions/result-code-map-properties'
    required:
    - mapName
  result-code-map-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Result Code Map
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/result-code-map-properties'
    required:
    - id
    - schemas
  result-code-map-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/result-code-map-response'
  result-code-map-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:result-code-map"
      bindMissingPasswordResultCode:
        type: integer
        description: >-
               Specifies the result code that should be returned if a password-based bind attempt fails because the target user entry does not have a password.
      serverErrorResultCode:
        type: integer
        description: >-
               Specifies the result code that should be returned if a generic error occurs within the server.
      bindMissingUserResultCode:
        type: integer
        description: >-
               Specifies the result code that should be returned if a bind attempt fails because the target user entry does not exist in the server.
      description:
        type: string
        description: >-
               A description for this Result Code Map
      bindAccountLockedResultCode:
        type: integer
        description: >-
               Specifies the result code that should be returned if a bind attempt fails because the user's account is locked as a result of too many failed authentication attempts.

  synchronization-provider-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/synchronization-provider-response'
    required:
    - schemas
    - totalResults
  add-synchronization-provider-request:
    allOf:
    - type: object
      properties:
        providerName:
          type: string
          description: >-
              Name of the new Synchronization Provider
    - $ref: '#/definitions/synchronization-provider-properties'
    required:
    - providerName
  synchronization-provider-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Synchronization Provider
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/synchronization-provider-properties'
    required:
    - id
    - schemas
  synchronization-provider-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/synchronization-provider-response'
  synchronization-provider-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:replication"
          - "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:custom"
      numUpdateReplayThreads:
        type: integer
        description: >-
               Specifies the number of update replay threads.
      description:
        type: string
        description: >-
               A description for this Synchronization Provider
      enabled:
        type: boolean
        description: >-
               Indicates whether the Synchronization Provider is enabled for use.

  replication-server-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Replication Server
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/replication-server-properties'
    required:
    - id
    - schemas
  replication-server-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/replication-server-response'
  replication-server-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:replication-server"
      jeProperty:
        type: array
        items:
          type: string
        description: >-
               Specifies the database and environment properties for the Berkeley DB Java Edition database for the replication changelog.
      replicationServerID:
        type: integer
        description: >-
               Specifies a unique identifier for the Replication Server.
      heartbeatInterval:
        type: string
        description: >-
               Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.
      replicationPurgeDelay:
        type: string
        description: >-
               Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting target-database-size can allow additional changes to be maintained up to the configured size on disk.
      listenOnAllAddresses:
        type: boolean
        description: >-
               Indicates whether the Replication Server should listen on all addresses for this host. If set to FALSE, then the Replication Server will listen only to the address resolved from the hostname provided.
      replicationDBDirectory:
        type: string
        description: >-
               The path where the Replication Server stores all persistent information.
      targetDatabaseSize:
        type: string
        description: >-
               The replication changelog database is allowed to grow up to this size even if changes are older than the configured replication-purge-delay.
      restrictedDomain:
        type: array
        items:
          type: string
        description: >-
               Specifies the base DN of domains that are only replicated between server instances that belong to the same replication set.
      replicationPort:
        type: integer
        description: >-
               The port on which this Replication Server waits for connections from other Replication Servers or Directory Server instances.
      compressionCriteria:
        type: string
        enum:
        - "always"
        - "remote"
        - "never"
        description: >-
               Specifies when the replication traffic should be compressed.
      gatewayPriority:
        type: integer
        description: >-
               Specifies the gateway priority of the Replication Server in the current location.
      remoteMonitorUpdateInterval:
        type: string
        description: >-
               Specifies the duration that topology monitor data will be cached before it is requested again from a remote server.

  replication-domain-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/replication-domain-response'
    required:
    - schemas
    - totalResults
  add-replication-domain-request:
    allOf:
    - type: object
      properties:
        domainName:
          type: string
          description: >-
              Name of the new Replication Domain
    - $ref: '#/definitions/replication-domain-properties'
    required:
    - domainName
  replication-domain-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Replication Domain
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/replication-domain-properties'
    required:
    - id
    - schemas
  replication-domain-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/replication-domain-response'
  replication-domain-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:replication-domain"
      heartbeatInterval:
        type: string
        description: >-
               Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.
      windowSize:
        type: integer
        description: >-
               Specifies the maximum number of replication updates the Directory Server can have outstanding from the Replication Server.
      restricted:
        type: boolean
        description: >-
               When set to true, changes are only replicated with server instances that belong to the same replication set.
      dependentOpsReplayFailureWaitTime:
        type: string
        description: >-
               Defines how long to wait before retrying certain operations, specifically operations that might have failed because they depend on an operation from a different server that has not yet replicated to this instance.
      syncHistPurgeDelay:
        type: string
        description: >-
               The time in seconds after which historical information used in replication conflict resolution is purged. The information is removed from entries when they are modified after the purge delay has elapsed.
      onReplayFailureWaitForDependentOpsTimeout:
        type: string
        description: >-
               Defines the maximum time to retry a failed operation. An operation will be retried only if it appears that the failure might be dependent on an earlier operation from a different server that hasn't replicated yet. The frequency of the retry is determined by the dependent-ops-replay-failure-wait-time property.
      baseDN:
        type: string
        description: >-
               Specifies the base DN of the replicated data.
      serverID:
        type: integer
        description: >-
               Specifies a unique identifier for the Directory Server within the Replication Domain.

  connection-criteria-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/connection-criteria-response'
    required:
    - schemas
    - totalResults
  add-connection-criteria-request:
    allOf:
    - type: object
      properties:
        criteriaName:
          type: string
          description: >-
              Name of the new Connection Criteria
    - $ref: '#/definitions/connection-criteria-properties'
    required:
    - criteriaName
  connection-criteria-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Connection Criteria
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/connection-criteria-properties'
    required:
    - id
    - schemas
  connection-criteria-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/connection-criteria-response'
  connection-criteria-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:simple"
          - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:aggregate"
          - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Connection Criteria.
      includedClientAddress:
        type: array
        items:
          type: string
        description: >-
               Specifies an address mask that may be used to specify a set of clients that should be included in this Simple Connection Criteria.
      excludedClientAddress:
        type: array
        items:
          type: string
        description: >-
               Specifies an address mask that may be used to specify a set of clients that should be excluded from this Simple Connection Criteria.
      includedUserSASLMechanism:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a SASL mechanism that should be used by clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
      description:
        type: string
        description: >-
               A description for this Connection Criteria
      includedUserBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies a base DN below which authenticated user entries may exist for clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
      authenticationSecurityLevel:
        type: string
        enum:
        - "any"
        - "secure-only"
        - "insecure-only"
        description: >-
               Indicates whether this Simple Connection Criteria should require or allow clients that authenticated using a secure manner. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      noneIncludedUserGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which authenticated users must not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member any of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
      noneIncludedConnectionCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a connection criteria object that must not match the associated client connection in order to match the aggregate connection criteria. If one or more none-included connection criteria objects are provided, then a client connection must not match any of them in order to match the aggregate connection criteria.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Connection Criteria. Each configuration property should be given in the form 'name=value'.
      excludedProtocol:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a communication protocol that should be used by clients excluded from this Simple Connection Criteria.
      allIncludedUserFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that must match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then all of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      anyIncludedUserPrivilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "use-admin-session"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               Specifies the name of a privilege that may be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have at least one of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      communicationSecurityLevel:
        type: string
        enum:
        - "any"
        - "secure-only"
        - "insecure-only"
        description: >-
               Indicates whether this Simple Connection Criteria should require or allow clients using a secure communication channel.
      anyIncludedUserGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which authenticated users may exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of at least one of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
      notAllIncludedUserFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that should not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must not match the authenticated user entry (that is, the user entry may match zero or more of those filters, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      notAllIncludedUserPrivilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "use-admin-session"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      allIncludedConnectionCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a connection criteria object that must match the associated client connection in order to match the aggregate connection criteria. If one or more all-included connection criteria objects are provided, then a client connection must match all of them in order to match the aggregate connection criteria.
      anyIncludedConnectionCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a connection criteria object that may match the associated client connection in order to match the aggregate connection criteria. If one or more any-included connection criteria objects are provided, then a client connection must match at least one of them in order to match the aggregate connection criteria.
      noneIncludedUserPrivilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "use-admin-session"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      allIncludedUserGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which authenticated users must exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of all of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
      notAllIncludedUserGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which authenticated users should not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
      excludedUserSASLMechanism:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a SASL mechanism that should be used by clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
      allIncludedUserPrivilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "use-admin-session"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               Specifies the name of a privilege that must be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have all of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      noneIncludedUserFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that must not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then none of those filters may match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      anyIncludedUserFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that may match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
      includedProtocol:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a communication protocol that should be used by clients included in this Simple Connection Criteria.
      excludedConnectionHandler:
        type: array
        items:
          type: string
        description: >-
               Specifies a connection handler for clients that should be excluded from this Simple Connection Criteria.
      userAuthType:
        type: array
        items:
          type: string
          enum:
          - "none"
          - "simple"
          - "sasl"
          - "internal"
        description: >-
               Specifies the authentication types for client connections that may be included in this Simple Connection Criteria.
      includedConnectionHandler:
        type: array
        items:
          type: string
        description: >-
               Specifies a connection handler for clients that should be included in this Simple Connection Criteria.
      notAllIncludedConnectionCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a connection criteria object that should not match the associated client connection in order to match the aggregate connection criteria. If one or more not-all-included connection criteria objects are provided, then a client connection must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate connection criteria.
      excludedUserBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies a base DN below which authenticated user entries may exist for clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).

  root-dn-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Root DN
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/root-dn-properties'
    required:
    - id
    - schemas
  root-dn-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/root-dn-response'
  root-dn-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:root-dn"
      defaultRootPrivilegeName:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "use-admin-session"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               Specifies the names of the privileges that root users will be granted by default.

  root-dn-user-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/root-dn-user-response'
    required:
    - schemas
    - totalResults
  add-root-dn-user-request:
    allOf:
    - type: object
      properties:
        userName:
          type: string
          description: >-
              Name of the new Root DN User
    - $ref: '#/definitions/root-dn-user-properties'
    required:
    - userName
  root-dn-user-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Root DN User
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/root-dn-user-properties'
    required:
    - id
    - schemas
  root-dn-user-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/root-dn-user-response'
  root-dn-user-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:root-dn-user"
      lastName:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's last name. This is stored in the sn LDAP attribute.
      accountActivationTime:
        type: string
        description: >-
               Specifies the time, in generalized time format (e.g., '20160101070000Z'), that the root user account should become active. If an activation time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, until the activation time has arrived. This is stored in the ds-pwp-account-activation-time LDAP attribute.
      requireSecureConnections:
        type: boolean
        description: >-
               Indicates whether this User must be required to communicate with the server over a secure connection. When set to "true", the User will only be allowed to communicate with the server over a secure connection (i.e., using TLS or the StartTLS extended operation).
      description:
        type: string
        description: >-
               A description for this User.
      isProxyableByURL:
        type: array
        items:
          type: string
        description: >-
               Specifies LDAP URLs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
      privilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "-audit-data-security"
          - "bypass-acl"
          - "-bypass-acl"
          - "bypass-read-acl"
          - "-bypass-read-acl"
          - "modify-acl"
          - "-modify-acl"
          - "config-read"
          - "-config-read"
          - "config-write"
          - "-config-write"
          - "jmx-read"
          - "-jmx-read"
          - "jmx-write"
          - "-jmx-write"
          - "jmx-notify"
          - "-jmx-notify"
          - "ldif-import"
          - "-ldif-import"
          - "ldif-export"
          - "-ldif-export"
          - "backend-backup"
          - "-backend-backup"
          - "backend-restore"
          - "-backend-restore"
          - "server-shutdown"
          - "-server-shutdown"
          - "server-restart"
          - "-server-restart"
          - "proxied-auth"
          - "-proxied-auth"
          - "disconnect-client"
          - "-disconnect-client"
          - "password-reset"
          - "-password-reset"
          - "update-schema"
          - "-update-schema"
          - "privilege-change"
          - "-privilege-change"
          - "unindexed-search"
          - "-unindexed-search"
          - "unindexed-search-with-control"
          - "-unindexed-search-with-control"
          - "bypass-pw-policy"
          - "-bypass-pw-policy"
          - "lockdown-mode"
          - "-lockdown-mode"
          - "stream-values"
          - "-stream-values"
          - "third-party-task"
          - "-third-party-task"
          - "use-admin-session"
          - "-use-admin-session"
          - "soft-delete-read"
          - "-soft-delete-read"
          - "metrics-read"
          - "-metrics-read"
          - "remote-log-read"
          - "-remote-log-read"
          - "manage-topology"
          - "-manage-topology"
          - "permit-get-password-policy-state-issues"
          - "-permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "-permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "-permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "-permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "-permit-forwarding-client-connection-policy"
          - "exec-task"
          - "-exec-task"
          - "collect-support-data"
          - "-collect-support-data"
          - "file-servlet-access"
          - "-file-servlet-access"
          - "permit-replace-certificate-request"
          - "-permit-replace-certificate-request"
        description: >-
               Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.
      userID:
        type: string
        description: >-
               Specifies the user's user ID. This is stored in the uid LDAP attribute.
      mayProxyAsGroup:
        type: array
        items:
          type: string
        description: >-
               This restricts the set of accounts that this User can proxy as to entries that are in the group with the specified DN.
      workTelephoneNumber:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's work telephone number. This is stored in the telephoneNumber LDAP attribute.
      password:
        type: string
        description: >-
               Specifies the user's password. This is stored in the userPassword LDAP attribute. To set a pre-hashed value, the account making the change must have the bypass-pw-policy privilege.
      emailAddress:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's email address. This is stored in the mail LDAP attribute.
      alternateBindDN:
        type: array
        items:
          type: string
        description: >-
               Specifies one or more alternate DNs that can be used to bind to the server as this User.
      homeTelephoneNumber:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's home telephone number. This is stored in the homePhone LDAP attribute.
      allowedAuthenticationType:
        type: array
        items:
          type: string
        description: >-
               Indicates that User should only be allowed to authenticate in certain ways. Allowed values include "simple" (to indicate that the user should be allowed to bind using simple authentication) or "sasl {mech}" (to indicate that the user should be allowed to bind using the specified SASL mechanism, like "sasl PLAIN"). The list of available SASL mechanisms can be retrieved by running "dsconfig --advanced list-sasl-mechanism-handlers".
      disabled:
        type: boolean
        description: >-
               Specifies whether the root user account should be disabled. A disabled account is not permitted to authenticate, nor can it be used as an authorization identity. This is stored in the ds-pwp-account-disabled LDAP attribute.
      requireSecureAuthentication:
        type: boolean
        description: >-
               Indicates whether this User must authenticate in a secure manner. When set to "true", the User will only be allowed to authenticate over a secure connection or using a mechanism that does not expose user credentials (e.g., the CRAM-MD5, DIGEST-MD5, and GSSAPI SASL mechanisms).
      isProxyable:
        type: string
        enum:
        - "allowed"
        - "prohibited"
        - "required"
        description: >-
               This can be used to indicate whether the User can be used as an alternate authorization identity (using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity).
      isProxyableByGroup:
        type: array
        items:
          type: string
        description: >-
               Specifies the DNs of groups whose members can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
      preferredOTPDeliveryMechanism:
        type: array
        items:
          type: string
        description: >-
               Overrides the default settings for the mechanisms (e.g., email or SMS) that are used to deliver one time passwords to Users.
      pagerTelephoneNumber:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's pager telephone number. This is stored in the pager LDAP attribute.
      lookThroughEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of candidate entries that the server may examine in the course of processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-lookthrough-limit LDAP attribute.
      passwordPolicy:
        type: string
        description: >-
               Specifies the password policy for the user. This is stored in the ds-pwp-password-policy-dn LDAP attribute.
      mayProxyAsURL:
        type: array
        items:
          type: string
        description: >-
               This restricts the set of accounts that this User can proxy as to entries that are matched by the specified LDAP URL.
      allowedAuthenticationIPAddress:
        type: array
        items:
          type: string
        description: >-
               An IPv4 or IPv6 address mask that controls the set of IP addresses from which this User can authenticate to the server. For instance a value of 127.0.0.1 (or ::1 in IPv6) would restricted access only to localhost connections, whereas 10.6.1.* would restrict access to servers on the 10.6.1.* subnet.
      searchResultEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that the server may return to the user in response to any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-size-limit LDAP attribute.
      mayProxyAsDN:
        type: array
        items:
          type: string
        description: >-
               This restricts the set of accounts that this User can proxy as to entries with the specified DNs.
      idleTimeLimitSeconds:
        type: integer
        description: >-
               Specifies the maximum length of time (in seconds) that a connection authenticated as this user may remain established without issuing any requests. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-idle-time-limit LDAP attribute.
      firstName:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's first name. This is stored in the givenName LDAP attribute.
      isProxyableByDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DNs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
      inheritDefaultRootPrivileges:
        type: boolean
        description: >-
               Indicates whether this User should be automatically granted the set of privileges defined in the default-root-privilege-name property of the Root DN configuration object.
      accountExpirationTime:
        type: string
        description: >-
               Specifies the time, in generalized time format (e.g., '20240101070000Z'), that the root user account should expire. If an expiration time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, after this time has passed. This is stored in the ds-pwp-account-expiration-time LDAP attribute.
      timeLimitSeconds:
        type: integer
        description: >-
               Specifies the maximum length of time (in seconds) that the server may spend processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-time-limit LDAP attribute.
      mobileTelephoneNumber:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's mobile telephone number. This is stored in the mobile LDAP attribute.

  trust-manager-provider-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/trust-manager-provider-response'
    required:
    - schemas
    - totalResults
  add-trust-manager-provider-request:
    allOf:
    - type: object
      properties:
        providerName:
          type: string
          description: >-
              Name of the new Trust Manager Provider
    - $ref: '#/definitions/trust-manager-provider-properties'
    required:
    - providerName
  trust-manager-provider-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Trust Manager Provider
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/trust-manager-provider-properties'
    required:
    - id
    - schemas
  trust-manager-provider-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/trust-manager-provider-response'
  trust-manager-provider-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:blind"
          - "urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:file-based"
          - "urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:jvm-default"
          - "urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Trust Manager Provider.
      includeJVMDefaultIssuers:
        type: boolean
        description: >-
               Indicates whether certificates issued by an authority included in the JVM's set of default issuers should be automatically trusted, even if they would not otherwise be trusted by this provider.
      trustStorePinPassphraseProvider:
        type: string
        description: >-
               The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Trust Manager Provider.
      trustStoreFile:
        type: string
        description: >-
               Specifies the path to the file containing the trust information. It can be an absolute path or a path that is relative to the Directory Server instance root.
      trustStorePin:
        type: string
        description: >-
               Specifies the clear-text PIN needed to access the File Based Trust Manager Provider.
      trustStoreType:
        type: string
        description: >-
               Specifies the format for the data in the trust store file.
      enabled:
        type: boolean
        description: >-
               Indicate whether the Trust Manager Provider is enabled for use.
      trustStorePinFile:
        type: string
        description: >-
               Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Trust Manager Provider.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Trust Manager Provider. Each configuration property should be given in the form 'name=value'.

  key-pair-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/key-pair-response'
    required:
    - schemas
    - totalResults
  add-key-pair-request:
    allOf:
    - type: object
      properties:
        pairName:
          type: string
          description: >-
              Name of the new Key Pair
    - $ref: '#/definitions/key-pair-properties'
    required:
    - pairName
  key-pair-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Key Pair
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/key-pair-properties'
    required:
    - id
    - schemas
  key-pair-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/key-pair-response'
  key-pair-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:key-pair"
      selfSignedCertificateValidity:
        type: string
        description: >-
               The validity period for a self-signed certificate. If not specified, the self-signed certificate will be valid for approximately 20 years. This is not used when importing an existing key-pair. The system will not automatically rotate expired certificates. It is up to the administrator to do that when that happens.
      privateKey:
        type: string
        description: >-
               The base64-encoded private key that is encrypted using the preferred encryption settings definition.
      keyAlgorithm:
        type: string
        enum:
        - "RSA_2048"
        - "RSA_3072"
        - "RSA_4096"
        - "EC_256"
        - "EC_384"
        - "EC_521"
        description: >-
               The algorithm name and the length in bits of the key, e.g. RSA_2048.
      certificateChain:
        type: string
        description: >-
               The PEM-encoded X.509 certificate chain.
      subjectDN:
        type: string
        description: >-
               The DN that should be used as the subject for the self-signed certificate and certificate signing request. This is not used when importing an existing key-pair.

  request-criteria-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/request-criteria-response'
    required:
    - schemas
    - totalResults
  add-request-criteria-request:
    allOf:
    - type: object
      properties:
        criteriaName:
          type: string
          description: >-
              Name of the new Request Criteria
    - $ref: '#/definitions/request-criteria-properties'
    required:
    - criteriaName
  request-criteria-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Request Criteria
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/request-criteria-properties'
    required:
    - id
    - schemas
  request-criteria-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/request-criteria-response'
  request-criteria-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:request-criteria:root-dse"
          - "urn:pingidentity:schemas:configuration:2.0:request-criteria:simple"
          - "urn:pingidentity:schemas:configuration:2.0:request-criteria:aggregate"
          - "urn:pingidentity:schemas:configuration:2.0:request-criteria:third-party"
      anyIncludedTargetEntryGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which the user associated with the target entry may be a member for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any group DNs are provided, then the target entry must be a member of at least one of those groups.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Request Criteria.
      noneIncludedTargetEntryFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that must not match the target entry for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any filters are provided, then the target entry must not match any of those filters.
      includedTargetAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the name or OID of an attribute type which must be targeted by requests included in this Simple Request Criteria. This will only be taken into account for add, compare, modify, modify DN, and search operations. It will be ignored for abandon, bind, delete, extended, and unbind operations.
      noneIncludedRequestControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that must not be present in the request from the client for operations included in this Simple Request Criteria. If any control OIDs are provided, then the request must not contain any of those controls.
      description:
        type: string
        description: >-
               A description for this Request Criteria
      excludedTargetEntryDN:
        type: array
        items:
          type: string
        description: >-
               Specifies a base DN below which targeted entries may not exist for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations.
      notAllIncludedRequestCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a request criteria object that should not match the associated operation request in order to match the aggregate request criteria. If one or more not-all-included request criteria objects are provided, then an operation request must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate request criteria.
      notAllIncludedTargetEntryGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which the user associated with the target entry should not be a member for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any group DNs are provided, then the target entry must not be a member of at least one of those groups (that is, the target entry may be a member of zero or more of those groups, but not all of them).
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Request Criteria. Each configuration property should be given in the form 'name=value'.
      excludedApplicationName:
        type: array
        items:
          type: string
        description: >-
               Specifies an application name for requests excluded from this Simple Request Criteria.
      allIncludedRequestCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a request criteria object that must match the associated operation request in order to match the aggregate request criteria. If one or more all-included request criteria objects are provided, then an operation request must match all of them in order to match the aggregate request criteria.
      anyIncludedRequestCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a request criteria object that may match the associated operation request in order to the this aggregate request criteria. If one or more any-included request criteria objects are provided, then an operation request must match at least one of them in order to match the aggregate request criteria.
      includedSearchScope:
        type: array
        items:
          type: string
          enum:
          - "base-object"
          - "single-level"
          - "whole-subtree"
          - "subordinate-subtree"
        description: >-
               Specifies the search scope values included in this Simple Request Criteria. This will only be taken into account for search requests and will be ignored for all other types of requests.
      includedApplicationName:
        type: array
        items:
          type: string
        description: >-
               Specifies an application name for requests included in this Simple Request Criteria.
      targetBindType:
        type: array
        items:
          type: string
          enum:
          - "simple"
          - "sasl"
        description: >-
               Specifies the authentication type for bind requests included in this Simple Request Criteria. This will only be taken into account for bind operations and will be ignored for any other type of operation. If no values are provided, then the authentication type will not be considered when determining whether the request should be included in this Simple Request Criteria.
      includedTargetEntryDN:
        type: array
        items:
          type: string
        description: >-
               Specifies a base DN below which targeted entries may exist for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations.
      allIncludedTargetEntryGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which the user associated with the target entry must be a member for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any group DNs are provided, then the target entry must be a member of all of those groups.
      noneIncludedRequestCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a request criteria object that must not match the associated operation request in order to match the aggregate request criteria. If one or more none-included request criteria objects are provided, then an operation request must not match any of them in order to match the aggregate request criteria.
      anyIncludedRequestControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that may be present in the request from the client for operations included in this Simple Request Criteria. If any control OIDs are provided, then the request must contain at least one of those controls.
      noneIncludedTargetEntryGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which the user associated with the target entry must not be a member for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any group DNs are provided, then the target entry must not be a member of any of those groups.
      notAllIncludedRequestControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that should not be present in the request from the client for operations included in this Simple Request Criteria. If any control OIDs are provided, then the request must not contain at least one of those controls (that is, the request may contain zero or more of those controls, but not all of them).
      includedTargetSASLMechanism:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a SASL mechanism for bind requests included in this Simple Request Criteria. This will only be taken into account for SASL bind operations and will be ignored for other types of operations and for bind operations that do not use SASL authentication.
      operationOrigin:
        type: array
        items:
          type: string
          enum:
          - "external-request"
          - "internal-operation"
          - "replicated-operation"
        description: >-
               Specifies the origin for operations to be included in this Simple Request Criteria. If no values are provided, then the operation origin will not be taken into consideration when determining whether an operation matches this Simple Request Criteria.
      notAllIncludedTargetEntryFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that should not match the target entry for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any filters are provided, then the target entry must not match at least one of those filters (that is, the request may match zero or more of those filters, but not of all of them).
      excludedTargetSASLMechanism:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a SASL mechanism for bind requests excluded from this Simple Request Criteria. This will only be taken into account for SASL bind operations and will be ignored for other types of operations and for bind operations that do not use SASL authentication.
      connectionCriteria:
        type: string
        description: >-
               Specifies a connection criteria object that must match the associated client connection for operations included in this Simple Request Criteria.
      anyIncludedTargetEntryFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that may match the target entry for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any filters are provided, then the target entry must match at least one of those filters.
      allIncludedTargetEntryFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that must match the target entry for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any filters are provided, then the target entry must match all of those filters.
      includedExtendedOperationOID:
        type: array
        items:
          type: string
        description: >-
               Specifies the request OID for extended requests included in this Simple Request Criteria. This will only be taken into account for extended requests and will be ignored for all other types of requests.
      allIncludedRequestControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that must be present in the request from the client for operations included in this Simple Request Criteria. If any control OIDs are provided, then the request must contain all of those controls.
      usingAdministrativeSessionWorkerThread:
        type: string
        enum:
        - "true"
        - "false"
        - "any"
        description: >-
               Indicates whether operations being processed using a dedicated administrative session worker thread should be included in this Simple Request Criteria.
      excludedExtendedOperationOID:
        type: array
        items:
          type: string
        description: >-
               Specifies the request OID for extended requests excluded from this Simple Request Criteria. This will only be taken into account for extended requests and will be ignored for all other types of requests.
      operationType:
        type: array
        items:
          type: string
          enum:
          - "compare"
          - "base-object-search"
          - "single-level-search"
          - "whole-subtree-search"
          - "subordinate-subtree-search"
        description: >-
               The types of operations that may be matched by this Root DSE Request Criteria.
      excludedTargetAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the name or OID of an attribute type which must not be targeted by requests included in this Simple Request Criteria. This will only be taken into account for add, compare, modify, modify DN, and search operations. It will be ignored for abandon, bind, delete, extended, and unbind operations.

  log-rotation-policy-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/log-rotation-policy-response'
    required:
    - schemas
    - totalResults
  add-log-rotation-policy-request:
    allOf:
    - type: object
      properties:
        policyName:
          type: string
          description: >-
              Name of the new Log Rotation Policy
    - $ref: '#/definitions/log-rotation-policy-properties'
    required:
    - policyName
  log-rotation-policy-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Log Rotation Policy
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/log-rotation-policy-properties'
    required:
    - id
    - schemas
  log-rotation-policy-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/log-rotation-policy-response'
  log-rotation-policy-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:time-limit"
          - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:fixed-time"
          - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:never-rotate"
          - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:size-limit"
      rotationInterval:
        type: string
        description: >-
               Specifies the time interval between rotations.
      description:
        type: string
        description: >-
               A description for this Log Rotation Policy
      fileSizeLimit:
        type: string
        description: >-
               Specifies the maximum size that a log file can reach before it is rotated.
      timeOfDay:
        type: array
        items:
          type: string
        description: >-
               Specifies the time of day at which log rotation should occur.

  log-field-syntax-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/log-field-syntax-response'
    required:
    - schemas
    - totalResults
  add-log-field-syntax-request:
    allOf:
    - type: object
      properties:
        syntaxName:
          type: string
          description: >-
              Name of the new Log Field Syntax
    - $ref: '#/definitions/log-field-syntax-properties'
    required:
    - syntaxName
  log-field-syntax-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Log Field Syntax
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/log-field-syntax-properties'
    required:
    - id
    - schemas
  log-field-syntax-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/log-field-syntax-response'
  log-field-syntax-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:log-field-syntax:json"
          - "urn:pingidentity:schemas:configuration:2.0:log-field-syntax:attribute-based"
          - "urn:pingidentity:schemas:configuration:2.0:log-field-syntax:generic"
      includedSensitiveField:
        type: array
        items:
          type: string
        description: >-
               The names of the JSON fields that will be considered sensitive.
      includedSensitiveAttribute:
        type: array
        items:
          type: string
        description: >-
               The set of attribute types that will be considered sensitive.
      defaultBehavior:
        type: string
        enum:
        - "preserve"
        - "omit"
        - "redact-entire-value"
        - "redact-value-components"
        - "tokenize-entire-value"
        - "tokenize-value-components"
        description: >-
               The default behavior that the server should exhibit when logging fields with this syntax. This may be overridden on a per-field basis.
      description:
        type: string
        description: >-
               A description for this Log Field Syntax
      excludedSensitiveField:
        type: array
        items:
          type: string
        description: >-
               The names of the JSON fields that will not be considered sensitive.
      excludedSensitiveAttribute:
        type: array
        items:
          type: string
        description: >-
               The set of attribute types that will not be considered sensitive.

  scim-resource-type-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/scim-resource-type-response'
    required:
    - schemas
    - totalResults
  add-scim-resource-type-request:
    allOf:
    - type: object
      properties:
        typeName:
          type: string
          description: >-
              Name of the new SCIM Resource Type
    - $ref: '#/definitions/scim-resource-type-properties'
    required:
    - typeName
  scim-resource-type-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the SCIM Resource Type
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/scim-resource-type-properties'
    required:
    - id
    - schemas
  scim-resource-type-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/scim-resource-type-response'
  scim-resource-type-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:scim-resource-type:ldap-pass-through"
          - "urn:pingidentity:schemas:configuration:2.0:scim-resource-type:ldap-mapping"
      includeOperationalAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of operational LDAP attributes to be provided by this SCIM Resource Type.
      description:
        type: string
        description: >-
               A description for this SCIM Resource Type
      auxiliaryLDAPObjectclass:
        type: array
        items:
          type: string
        description: >-
               Specifies an auxiliary LDAP object class that should be exposed by this SCIM Resource Type.
      enabled:
        type: boolean
        description: >-
               Indicates whether the SCIM Resource Type is enabled.
      endpoint:
        type: string
        description: >-
               The HTTP addressable endpoint of this SCIM Resource Type relative to the '/scim/v2' base URL. Do not include a leading '/'.
      schemaCheckingOption:
        type: array
        items:
          type: string
          enum:
          - "allow-undefined-attributes"
          - "allow-undefined-sub-attributes"
        description: >-
               Options to alter the way schema checking is performed during create or modify requests.
      structuralLDAPObjectclass:
        type: string
        description: >-
               Specifies the LDAP structural object class that should be exposed by this SCIM Resource Type.
      lookthroughLimit:
        type: integer
        description: >-
               The maximum number of resources that the SCIM Resource Type should "look through" in the course of processing a search request.
      coreSchema:
        type: string
        description: >-
               The core schema enforced on core attributes at the top level of a SCIM resource representation exposed by thisMapping SCIM Resource Type.
      requiredSchemaExtension:
        type: array
        items:
          type: string
        description: >-
               Required additive schemas that are enforced on extension attributes in a SCIM resource representation for this Mapping SCIM Resource Type.
      optionalSchemaExtension:
        type: array
        items:
          type: string
        description: >-
               Optional additive schemas that are enforced on extension attributes in a SCIM resource representation for this Mapping SCIM Resource Type.
      includeBaseDN:
        type: string
        description: >-
               Specifies the base DN of the branch of the LDAP directory that can be accessed by this SCIM Resource Type.
      includeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of LDAP filters that define the LDAP entries that should be included in this SCIM Resource Type.
      createDNPattern:
        type: string
        description: >-
               Specifies the template to use for the DN when creating new entries.

  correlated-ldap-data-view-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/correlated-ldap-data-view-response'
    required:
    - schemas
    - totalResults
  add-correlated-ldap-data-view-request:
    allOf:
    - type: object
      properties:
        viewName:
          type: string
          description: >-
              Name of the new Correlated LDAP Data View
    - $ref: '#/definitions/correlated-ldap-data-view-properties'
    required:
    - viewName
  correlated-ldap-data-view-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Correlated LDAP Data View
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/correlated-ldap-data-view-properties'
    required:
    - id
    - schemas
  correlated-ldap-data-view-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/correlated-ldap-data-view-response'
  correlated-ldap-data-view-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:correlated-ldap-data-view"
      includeOperationalAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of operational LDAP attributes to be provided by this Correlated LDAP Data View.
      structuralLDAPObjectclass:
        type: string
        description: >-
               Specifies the LDAP structural object class that should be exposed by this Correlated LDAP Data View.
      secondaryCorrelationAttribute:
        type: string
        description: >-
               The LDAP attribute from the Correlated LDAP Data View whose value will be matched with the primary-correlation-attribute. If multiple correlation attributes are required they may be specified by creating additional correlation-attribute-pairs.
      auxiliaryLDAPObjectclass:
        type: array
        items:
          type: string
        description: >-
               Specifies an auxiliary LDAP object class that should be exposed by this Correlated LDAP Data View.
      primaryCorrelationAttribute:
        type: string
        description: >-
               The LDAP attribute from the parent SCIM Resource Type whose value will be used to match objects in the Correlated LDAP Data View. If multiple correlation attributes are required they may be created using additional correlation-attribute-pairs.
      includeBaseDN:
        type: string
        description: >-
               Specifies the base DN of the branch of the LDAP directory that can be accessed by this Correlated LDAP Data View.
      includeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of LDAP filters that define the LDAP entries that should be included in this Correlated LDAP Data View.
      createDNPattern:
        type: string
        description: >-
               Specifies the template to use for the DN when creating new entries.

  scim-attribute-mapping-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/scim-attribute-mapping-response'
    required:
    - schemas
    - totalResults
  add-scim-attribute-mapping-request:
    allOf:
    - type: object
      properties:
        mappingName:
          type: string
          description: >-
              Name of the new SCIM Attribute Mapping
    - $ref: '#/definitions/scim-attribute-mapping-properties'
    required:
    - mappingName
  scim-attribute-mapping-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the SCIM Attribute Mapping
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/scim-attribute-mapping-properties'
    required:
    - id
    - schemas
  scim-attribute-mapping-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/scim-attribute-mapping-response'
  scim-attribute-mapping-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:scim-attribute-mapping"
      readable:
        type: boolean
        description: >-
               Specifies whether the mapping is used to map from LDAP attribute to SCIM Resource Type attribute in a read operation.
      scimResourceTypeAttribute:
        type: string
        description: >-
               The attribute path of SCIM Resource Type attributes to be mapped.
      authoritative:
        type: boolean
        description: >-
               Specifies that the mapping is authoritative over other mappings for the same SCIM Resource Type attribute (for read operations).
      ldapAttribute:
        type: string
        description: >-
               The LDAP attribute to be mapped, or the path to a specific field of an LDAP attribute with the JSON object attribute syntax.
      correlatedLDAPDataView:
        type: string
        description: >-
               The Correlated LDAP Data View that persists the mapped SCIM Resource Type attribute(s).
      searchable:
        type: boolean
        description: >-
               Specifies that the mapping is used to map from SCIM Resource Type attribute to LDAP attribute in a search filter.
      writable:
        type: boolean
        description: >-
               Specifies that the mapping is used to map from SCIM Resource Type attribute to LDAP attribute in a write operation.

  ldap-correlation-attribute-pair-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/ldap-correlation-attribute-pair-response'
    required:
    - schemas
    - totalResults
  add-ldap-correlation-attribute-pair-request:
    allOf:
    - type: object
      properties:
        pairName:
          type: string
          description: >-
              Name of the new LDAP Correlation Attribute Pair
    - $ref: '#/definitions/ldap-correlation-attribute-pair-properties'
    required:
    - pairName
  ldap-correlation-attribute-pair-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the LDAP Correlation Attribute Pair
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/ldap-correlation-attribute-pair-properties'
    required:
    - id
    - schemas
  ldap-correlation-attribute-pair-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/ldap-correlation-attribute-pair-response'
  ldap-correlation-attribute-pair-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:ldap-correlation-attribute-pair"
      secondaryCorrelationAttribute:
        type: string
        description: >-
               The LDAP attribute from the Correlated LDAP Data View whose value will be matched.
      primaryCorrelationAttribute:
        type: string
        description: >-
               The LDAP attribute from the base SCIM Resource Type whose value will be used to match objects in the Correlated LDAP Data View.

  extended-operation-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/extended-operation-handler-response'
    required:
    - schemas
    - totalResults
  add-extended-operation-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new Extended Operation Handler
    - $ref: '#/definitions/extended-operation-handler-properties'
    required:
    - handlerName
  extended-operation-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Extended Operation Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/extended-operation-handler-properties'
    required:
    - id
    - schemas
  extended-operation-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/extended-operation-handler-response'
  extended-operation-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:cancel"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:validate-totp-password"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:replace-certificate"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-connection-id"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:multi-update"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:notification-subscription"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:password-modify"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:custom"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:collect-support-data"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:export-reversible-passwords"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:batched-transactions"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-changelog-batch"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-supported-otp-delivery-mechanisms"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:single-use-tokens"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:generate-password"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:who-am-i"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:start-tls"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:deliver-password-reset-token"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:password-policy-state"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-password-quality-requirements"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:deliver-otp"
          - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Extended Operation Handler.
      preventTOTPReuse:
        type: boolean
        description: >-
               Indicates whether to prevent clients from re-using TOTP passwords.
      requestCriteria:
        type: string
        description: >-
               A set of criteria that the extended requests must satisfy before they will be processed by the server.
      timeIntervalDuration:
        type: string
        description: >-
               The duration of the time interval used for TOTP processing.
      description:
        type: string
        description: >-
               A description for this Extended Operation Handler
      adjacentIntervalsToCheck:
        type: integer
        description: >-
               The number of adjacent time intervals (both before and after the current time) that should be checked when performing authentication.
      maximumPasswordsPerRequest:
        type: integer
        description: >-
               The maximum number of passwords that may be generated and returned to the client for a single request.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      connectionCriteria:
        type: string
        description: >-
               A set of criteria that client connections must satisfy before they will be allowed to request the associated extended operations.
      maximumValidationAttemptsPerPassword:
        type: integer
        description: >-
               The maximum number of attempts that the server may use to generate a password that passes validation.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Extended Operation Handler. Each configuration property should be given in the form 'name=value'.
      defaultSingleUseTokenValidityDuration:
        type: string
        description: >-
               The default length of time that a single-use token will be considered valid by the server if the client doesn't specify a duration in the deliver single-use token request.
      defaultTokenDeliveryMechanism:
        type: array
        items:
          type: string
        description: >-
               The set of delivery mechanisms that may be used to deliver password reset tokens to users for requests that do not specify one or more preferred delivery mechanisms.
      passwordGenerator:
        type: string
        description: >-
               The password generator that will be used to create the single-use token values to be delivered to the end user.
      allowRemotelyProvidedCertificates:
        type: boolean
        description: >-
               Indicates whether clients should be allowed to directly provide a new listener or inter-server certificate chain in the extended request.
      identityMapper:
        type: string
        description: >-
               Specifies the name of the identity mapper that should be used in conjunction with the password modify extended operation.
      defaultPasswordGenerator:
        type: string
        description: >-
               The default password generator that will be used if the selected password policy is not configured with a password generator.
      defaultOTPDeliveryMechanism:
        type: array
        items:
          type: string
        description: >-
               The set of delivery mechanisms that may be used to deliver single-use tokens to users in requests that do not specify one or more preferred delivery mechanisms.
      allowedOperation:
        type: array
        items:
          type: string
          enum:
          - "replace-listener-certificate"
          - "replace-inter-server-certificate"
          - "purge-retired-listener-certificates"
          - "purge-retired-inter-server-certificates"
        description: >-
               The types of replace certificate operations that clients will be allowed to request.
      sharedSecretAttributeType:
        type: string
        description: >-
               The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
      defaultPasswordPolicy:
        type: string
        description: >-
               The default password policy that should be used when generating and validating passwords if the request does not specify an alternate policy. If this is not provided, then this Generate Password Extended Operation Handler will use the default password policy defined in the global configuration.
      passwordResetTokenValidityDuration:
        type: string
        description: >-
               The maximum length of time that a password reset token should be considered valid.

  azure-authentication-method-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/azure-authentication-method-response'
    required:
    - schemas
    - totalResults
  add-azure-authentication-method-request:
    allOf:
    - type: object
      properties:
        methodName:
          type: string
          description: >-
              Name of the new Azure Authentication Method
    - $ref: '#/definitions/azure-authentication-method-properties'
    required:
    - methodName
  azure-authentication-method-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Azure Authentication Method
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/azure-authentication-method-properties'
    required:
    - id
    - schemas
  azure-authentication-method-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/azure-authentication-method-response'
  azure-authentication-method-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:default"
          - "urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:client-secret"
          - "urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:username-password"
      password:
        type: string
        description: >-
               The password for the user to authenticate.
      clientID:
        type: string
        description: >-
               The client ID to use to authenticate. If this is not provided, then it will be obtained from the AZURE_CLIENT_ID
      tenantID:
        type: string
        description: >-
               The tenant ID to use to authenticate. If this is not provided, then it will be obtained from the AZURE_TENANT_ID environment variable.
      description:
        type: string
        description: >-
               A description for this Azure Authentication Method
      clientSecret:
        type: string
        description: >-
               The client secret to use to authenticate.
      username:
        type: string
        description: >-
               The username for the user to authenticate.

  passphrase-provider-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/passphrase-provider-response'
    required:
    - schemas
    - totalResults
  add-passphrase-provider-request:
    allOf:
    - type: object
      properties:
        providerName:
          type: string
          description: >-
              Name of the new Passphrase Provider
    - $ref: '#/definitions/passphrase-provider-properties'
    required:
    - providerName
  passphrase-provider-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Passphrase Provider
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/passphrase-provider-properties'
    required:
    - id
    - schemas
  passphrase-provider-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/passphrase-provider-response'
  passphrase-provider-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:environment-variable"
          - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:amazon-secrets-manager"
          - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:obscured-value"
          - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:azure-key-vault"
          - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:file-based"
          - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:conjur"
          - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:vault"
          - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:third-party"
      keyVaultURI:
        type: string
        description: >-
               The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Passphrase Provider.
      secretName:
        type: string
        description: >-
               The name of the secret to retrieve.
      azureAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Azure service.
      secretFieldName:
        type: string
        description: >-
               The name of the JSON field whose value is the passphrase that will be retrieved.
      secretVersionStage:
        type: string
        description: >-
               The staging label for the version of the secret to be retrieved.
      maxCacheDuration:
        type: string
        description: >-
               The maximum length of time that the passphrase provider may cache the passphrase that has been read from Vault. A value of zero seconds indicates that the provider should always attempt to read the passphrase from Vault.
      description:
        type: string
        description: >-
               A description for this Passphrase Provider
      secretID:
        type: string
        description: >-
               The Amazon Resource Name (ARN) or the user-friendly name of the secret to be retrieved.
      vaultExternalServer:
        type: string
        description: >-
               An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
      vaultSecretPath:
        type: string
        description: >-
               The path to the desired secret in the Vault service. This will be appended to the value of the base-url property for the associated Vault external server.
      environmentVariable:
        type: string
        description: >-
               The name of the environment variable that is expected to hold the passphrase.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Passphrase Provider is enabled for use in the server.
      secretVersionID:
        type: string
        description: >-
               The unique identifier for the version of the secret to be retrieved.
      conjurExternalServer:
        type: string
        description: >-
               An external server definition with information needed to connect and authenticate to the Conjur instance containing the passphrase.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Passphrase Provider. Each configuration property should be given in the form 'name=value'.
      passwordFile:
        type: string
        description: >-
               The path to the file containing the passphrase.
      awsExternalServer:
        type: string
        description: >-
               The external server with information to use when interacting with the AWS Secrets Manager.
      obscuredValue:
        type: string
        description: >-
               The value to be stored in an obscured form.
      vaultSecretFieldName:
        type: string
        description: >-
               The name of the field in the Vault secret record that contains the passphrase to use to generate the encryption key.
      conjurSecretRelativePath:
        type: string
        description: >-
               The portion of the path that follows the account name in the URI needed to obtain the desired secret. Any special characters in the path must be URL-encoded.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the Azure service.

  soft-delete-policy-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/soft-delete-policy-response'
    required:
    - schemas
    - totalResults
  add-soft-delete-policy-request:
    allOf:
    - type: object
      properties:
        policyName:
          type: string
          description: >-
              Name of the new Soft Delete Policy
    - $ref: '#/definitions/soft-delete-policy-properties'
    required:
    - policyName
  soft-delete-policy-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Soft Delete Policy
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/soft-delete-policy-properties'
    required:
    - id
    - schemas
  soft-delete-policy-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/soft-delete-policy-response'
  soft-delete-policy-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:soft-delete-policy"
      softDeleteRetentionTime:
        type: string
        description: >-
               Specifies the maximum length of time that soft delete entries are retained before they are eligible to purged automatically.
      autoSoftDeleteConnectionCriteria:
        type: string
        description: >-
               Connection criteria used to automatically identify a delete operation for processing as a soft delete request.
      description:
        type: string
        description: >-
               A description for this Soft Delete Policy
      autoSoftDeleteRequestCriteria:
        type: string
        description: >-
               Request criteria used to automatically identify a delete operation for processing as a soft delete request.
      softDeleteRetainNumberOfEntries:
        type: integer
        description: >-
               Specifies the number of soft deleted entries to retain before the oldest entries are purged.

  recurring-task-chain-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/recurring-task-chain-response'
    required:
    - schemas
    - totalResults
  add-recurring-task-chain-request:
    allOf:
    - type: object
      properties:
        chainName:
          type: string
          description: >-
              Name of the new Recurring Task Chain
    - $ref: '#/definitions/recurring-task-chain-properties'
    required:
    - chainName
  recurring-task-chain-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Recurring Task Chain
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/recurring-task-chain-properties'
    required:
    - id
    - schemas
  recurring-task-chain-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/recurring-task-chain-response'
  recurring-task-chain-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task-chain"
      scheduledMonth:
        type: array
        items:
          type: string
          enum:
          - "january"
          - "february"
          - "march"
          - "april"
          - "may"
          - "june"
          - "july"
          - "august"
          - "september"
          - "october"
          - "november"
          - "december"
        description: >-
               The months of the year in which instances of this Recurring Task Chain may be scheduled to start.
      scheduledDayOfTheMonth:
        type: array
        items:
          type: string
          enum:
          - "day-01"
          - "day-02"
          - "day-03"
          - "day-04"
          - "day-05"
          - "day-06"
          - "day-07"
          - "day-08"
          - "day-09"
          - "day-10"
          - "day-11"
          - "day-12"
          - "day-13"
          - "day-14"
          - "day-15"
          - "day-16"
          - "day-17"
          - "day-18"
          - "day-19"
          - "day-20"
          - "day-21"
          - "day-22"
          - "day-23"
          - "day-24"
          - "day-25"
          - "day-26"
          - "day-27"
          - "day-28"
          - "day-29"
          - "day-30"
          - "day-31"
          - "next-to-last-day-of-the-month"
          - "last-day-of-the-month"
        description: >-
               The specific days of the month on which instances of this Recurring Task Chain may be scheduled to start. If the scheduled-day-selection-type property has a value of selected-days-of-the-month, then this property must have one or more values; otherwise, it must be left undefined.
      recurringTask:
        type: array
        items:
          type: string
        description: >-
               The set of recurring tasks that make up this chain. At least one value must be provided. If multiple values are given, then the task instances will be invoked in the order in which they are listed.
      serverOfflineAtStartTimeBehavior:
        type: string
        enum:
        - "run-immediately-upon-server-startup"
        - "cancel-iteration-and-wait-for-next-scheduled-start-time"
        description: >-
               Specifies the behavior that the server should exhibit if it is offline when the start time arrives for the tasks in this Recurring Task Chain.
      scheduledDayOfTheWeek:
        type: array
        items:
          type: string
          enum:
          - "every-sunday"
          - "every-monday"
          - "every-tuesday"
          - "every-wednesday"
          - "every-thursday"
          - "every-friday"
          - "every-saturday"
          - "first-sunday-of-the-month"
          - "first-monday-of-the-month"
          - "first-tuesday-of-the-month"
          - "first-wednesday-of-the-month"
          - "first-thursday-of-the-month"
          - "first-friday-of-the-month"
          - "first-saturday-of-the-month"
          - "second-sunday-of-the-month"
          - "second-monday-of-the-month"
          - "second-tuesday-of-the-month"
          - "second-wednesday-of-the-month"
          - "second-thursday-of-the-month"
          - "second-friday-of-the-month"
          - "second-saturday-of-the-month"
          - "third-sunday-of-the-month"
          - "third-monday-of-the-month"
          - "third-tuesday-of-the-month"
          - "third-wednesday-of-the-month"
          - "third-thursday-of-the-month"
          - "third-friday-of-the-month"
          - "third-saturday-of-the-month"
          - "fourth-sunday-of-the-month"
          - "fourth-monday-of-the-month"
          - "fourth-tuesday-of-the-month"
          - "fourth-wednesday-of-the-month"
          - "fourth-thursday-of-the-month"
          - "fourth-friday-of-the-month"
          - "fourth-saturday-of-the-month"
          - "fifth-sunday-of-the-month"
          - "fifth-monday-of-the-month"
          - "fifth-tuesday-of-the-month"
          - "fifth-wednesday-of-the-month"
          - "fifth-thursday-of-the-month"
          - "fifth-friday-of-the-month"
          - "fifth-saturday-of-the-month"
          - "last-sunday-of-the-month"
          - "last-monday-of-the-month"
          - "last-tuesday-of-the-month"
          - "last-wednesday-of-the-month"
          - "last-thursday-of-the-month"
          - "last-friday-of-the-month"
          - "last-saturday-of-the-month"
        description: >-
               The specific days of the week on which instances of this Recurring Task Chain may be scheduled to start. If the scheduled-day-selection-type property has a value of selected-days-of-the-week, then this property must have one or more values; otherwise, it must be left undefined.
      interruptedByShutdownBehavior:
        type: string
        enum:
        - "cancel-interrupted-task-and-dependencies"
        - "cancel-only-interrupted-task-but-preserve-dependencies"
        description: >-
               Specifies the behavior that the server should exhibit if it is shut down or abnormally terminated while an instance of this Recurring Task Chain is running.
      description:
        type: string
        description: >-
               A description for this Recurring Task Chain
      timeZone:
        type: string
        description: >-
               The time zone that will be used to interpret the scheduled-time-of-day values. If no value is provided, then the JVM's default time zone will be used.
      scheduledDateSelectionType:
        type: string
        enum:
        - "every-day"
        - "selected-days-of-the-week"
        - "selected-days-of-the-month"
        description: >-
               The mechanism used to determine the dates on which instances of this Recurring Task Chain may be scheduled to start.
      scheduledTimeOfDay:
        type: array
        items:
          type: string
        description: >-
               The time of day at which instances of the Recurring Task Chain should be eligible to start running. Values should be in the format HH:MM (where HH is a two-digit representation of the hour of the day, between 00 and 23, inclusive), and MM is a two-digit representation of the minute of the hour (between 00 and 59, inclusive). Alternately, the value can be in the form *:MM, which indicates that the task should be eligible to start at the specified minute of every hour. At least one value must be provided, but multiple values may be given to indicate multiple start times within the same day.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Recurring Task Chain is enabled for use. Recurring Task Chains that are disabled will not have any new instances scheduled, but instances that are already scheduled will be preserved. Those instances may be manually canceled if desired.

  gauge-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/gauge-response'
    required:
    - schemas
    - totalResults
  add-gauge-request:
    allOf:
    - type: object
      properties:
        gaugeName:
          type: string
          description: >-
              Name of the new Gauge
    - $ref: '#/definitions/gauge-properties'
    required:
    - gaugeName
  gauge-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Gauge
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/gauge-properties'
    required:
    - id
    - schemas
  gauge-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/gauge-response'
  gauge-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:gauge:indicator"
          - "urn:pingidentity:schemas:configuration:2.0:gauge:numeric"
      criticalValue:
        type: string
        description: >-
               A regular expression pattern that is used to determine whether the current monitored value indicates this gauge's severity should be critical.
      minorValue:
        type: string
        description: >-
               A regular expression pattern that is used to determine whether the current monitored value indicates this gauge's severity will be 'minor'.
      overrideSeverity:
        type: string
        enum:
        - "normal"
        - "warning"
        - "minor"
        - "major"
        - "critical"
        description: >-
               When defined, causes this Gauge to assume the specified severity, overriding its computed severity. This is useful for testing alarms generated by Gauges as well as suppressing alarms for known conditions.
      alertLevel:
        type: string
        enum:
        - "always"
        - "warning-and-above"
        - "minor-and-above"
        - "major-and-above"
        - "critical-only"
        - "never"
        description: >-
               Specifies the level at which alerts are sent for alarms raised by this Gauge.
      excludeResource:
        type: array
        items:
          type: string
        description: >-
               Specifies resources to exclude from being monitored.
      description:
        type: string
        description: >-
               A description for this Gauge
      majorValue:
        type: string
        description: >-
               A regular expression pattern that is used to determine whether the current monitored value indicates this gauge's severity will be 'major'.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Gauge is enabled.
      warningExitValue:
        type: number
        description: >-
               A value that is used to determine whether the current monitored value indicates this gauge's severity should no longer be 'warning'.
      gaugeDataSource:
        type: string
        description: >-
               Specifies the source of data to use in determining this Indicator Gauge's severity and status.
      includeResource:
        type: array
        items:
          type: string
        description: >-
               Specifies set of resources to be monitored.
      updateInterval:
        type: string
        description: >-
               The frequency with which this Gauge is updated.
      majorExitValue:
        type: number
        description: >-
               A value that is used to determine whether the current monitored value indicates this gauge's severity should no longer be 'major'.
      criticalExitValue:
        type: number
        description: >-
               A value that is used to determine whether the current monitored value indicates this gauge's severity should no longer be 'critical'.
      minorExitValue:
        type: number
        description: >-
               A value that is used to determine whether the current monitored value indicates this gauge's severity should no longer be 'minor'.
      serverDegradedSeverityLevel:
        type: string
        enum:
        - "critical"
        - "major"
        - "minor"
        - "warning"
        - "none"
        description: >-
               Specifies the alarm severity level at or above which the server is considered degraded.
      warningValue:
        type: string
        description: >-
               A regular expression pattern that is used to determine whether the current monitored value indicates this gauge's severity will be 'warning'.
      samplesPerUpdateInterval:
        type: integer
        description: >-
               Indicates the number of times the monitor data source value will be collected during the update interval.
      serverUnavailableSeverityLevel:
        type: string
        enum:
        - "critical"
        - "major"
        - "minor"
        - "warning"
        - "none"
        description: >-
               Specifies the alarm severity level at or above which the server is considered unavailable.

  search-reference-criteria-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/search-reference-criteria-response'
    required:
    - schemas
    - totalResults
  add-search-reference-criteria-request:
    allOf:
    - type: object
      properties:
        criteriaName:
          type: string
          description: >-
              Name of the new Search Reference Criteria
    - $ref: '#/definitions/search-reference-criteria-properties'
    required:
    - criteriaName
  search-reference-criteria-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Search Reference Criteria
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/search-reference-criteria-properties'
    required:
    - id
    - schemas
  search-reference-criteria-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/search-reference-criteria-response'
  search-reference-criteria-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:simple"
          - "urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:aggregate"
          - "urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:third-party"
      notAllIncludedReferenceControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that should not be present in search result references included in this Simple Search Reference Criteria. If any control OIDs are provided, then the reference must not contain at least one of those controls (that is, it may contain zero or more of those controls, but not all of them).
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Search Reference Criteria.
      anyIncludedReferenceControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that may be present in search result references included in this Simple Search Reference Criteria. If any control OIDs are provided, then the reference must contain at least one of those controls.
      noneIncludedSearchReferenceCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a search reference criteria object that must not match the associated search result reference in order to match the aggregate search reference criteria. If one or more none-included search reference criteria objects are provided, then a search result reference must not match any of them in order to match the aggregate search reference criteria.
      noneIncludedReferenceControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that must not be present in search result references included in this Simple Search Reference Criteria. If any control OIDs are provided, then the reference must not contain any of those controls.
      requestCriteria:
        type: string
        description: >-
               Specifies a request criteria object that must match the associated request for references included in this Simple Search Reference Criteria.
      allIncludedSearchReferenceCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a search reference criteria object that must match the associated search result reference in order to match the aggregate search reference criteria. If one or more all-included search reference criteria objects are provided, then a search result reference must match all of them in order to match the aggregate search reference criteria.
      description:
        type: string
        description: >-
               A description for this Search Reference Criteria
      anyIncludedSearchReferenceCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a search reference criteria object that may match the associated search result reference in order to match the aggregate search reference criteria. If one or more any-included search reference criteria objects are provided, then a search result reference must match at least one of them in order to match the aggregate search reference criteria.
      notAllIncludedSearchReferenceCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a search reference criteria object that should not match the associated search result reference in order to match the aggregate search reference criteria. If one or more not-all-included search reference criteria objects are provided, then a search result reference must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate search reference criteria.
      allIncludedReferenceControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that must be present in search result references included in this Simple Search Reference Criteria. If any control OIDs are provided, then the reference must contain all of those controls.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Search Reference Criteria. Each configuration property should be given in the form 'name=value'.

  entry-cache-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/entry-cache-response'
    required:
    - schemas
    - totalResults
  add-entry-cache-request:
    allOf:
    - type: object
      properties:
        cacheName:
          type: string
          description: >-
              Name of the new Entry Cache
    - $ref: '#/definitions/entry-cache-properties'
    required:
    - cacheName
  entry-cache-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Entry Cache
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/entry-cache-properties'
    required:
    - id
    - schemas
  entry-cache-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/entry-cache-response'
  entry-cache-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:entry-cache"
      excludeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of filters that define the entries that should be excluded from the cache.
      maxMemoryPercent:
        type: integer
        description: >-
               Specifies the maximum amount of memory, as a percentage of the total maximum JVM heap size, that this cache should occupy when full. If the amount of memory the cache is using is greater than this amount, then an attempt to put a new entry in the cache will be ignored and will cause the oldest entry to be purged.
      maxEntries:
        type: integer
        description: >-
               Specifies the maximum number of entries that will be allowed in the cache. Once the cache reaches this size, then adding new entries will cause existing entries to be purged, starting with the oldest.
      minCacheEntryValueCount:
        type: integer
        description: >-
               Specifies the minimum number of attribute values (optionally across a specified subset of attributes as defined in the min-cache-entry-attributes property) for entries that should be held in the cache. Entries with fewer than this number of attribute values will be excluded from the cache.
      onlyCacheFrequentlyAccessed:
        type: boolean
        description: >-
               Specifies that the cache should only store entries which are accessed much more frequently than the average entry. The cache will observe attempts to place entries in the cache and compare an entry's accesses to the average entry's.
      description:
        type: string
        description: >-
               A description for this Entry Cache
      cacheUnindexedSearchResults:
        type: boolean
        description: >-
               Indicates whether the entry cache should be updated with entries that have been returned to the client during the course of processing an unindexed search.
      cacheLevel:
        type: integer
        description: >-
               Specifies the cache level in the cache order if more than one instance of the cache is configured.
      includeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of filters that define the entries that should be included in the cache.
      minCacheEntryAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the attribute types for which the min-cache-entry-value-count property should apply. If no attribute types are specified, then all user attributes will be examined.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Entry Cache is enabled.

  access-control-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Access Control Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/access-control-handler-properties'
    required:
    - id
    - schemas
  access-control-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/access-control-handler-response'
  access-control-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:access-control-handler"
      allowedBindControl:
        type: array
        items:
          type: string
          enum:
          - "administrative-operation"
          - "authorization-identity"
          - "get-authorization-entry"
          - "get-backend-set-id"
          - "get-password-policy-state-issues"
          - "get-recent-login-history"
          - "get-server-id"
          - "get-user-resource-limits"
          - "intermediate-client"
          - "operation-purpose"
          - "password-policy"
          - "retain-identity"
          - "route-to-backend-set"
          - "route-to-server"
          - "suppress-operational-attribute-update"
        description: >-
               Specifies a set of controls that clients should be allowed to include in bind requests. As bind requests are evaluated as the unauthenticated user, any controls included in this set will be permitted for any bind attempt. If you wish to grant permission for any bind controls not listed here, then the allowed-bind-control-oid property may be used to accomplish that.
      globalACI:
        type: array
        items:
          type: string
        description: >-
               Defines global access control rules.
      allowedBindControlOID:
        type: array
        items:
          type: string
        description: >-
               Specifies the OIDs of any additional controls (not covered by the allowed-bind-control property) that should be permitted in bind requests.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Access Control Handler is enabled. If set to FALSE, then no access control is enforced, and any client (including unauthenticated or anonymous clients) could be allowed to perform any operation if not subject to other restrictions, such as those enforced by the privilege subsystem.

  alert-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/alert-handler-response'
    required:
    - schemas
    - totalResults
  add-alert-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new Alert Handler
    - $ref: '#/definitions/alert-handler-properties'
    required:
    - handlerName
  alert-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Alert Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/alert-handler-properties'
    required:
    - id
    - schemas
  alert-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/alert-handler-response'
  alert-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:output"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:smtp"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:jmx"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:custom"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:snmp"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:twilio"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:error-log"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:snmp-sub-agent"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:exec"
          - "urn:pingidentity:schemas:configuration:2.0:alert-handler:third-party"
      outputLocation:
        type: string
        enum:
        - "server-out-file"
        - "standard-output"
        - "standard-error"
        description: >-
               The location to which alert messages will be written.
      enabledAlertSeverity:
        type: array
        items:
          type: string
          enum:
          - "info"
          - "warning"
          - "error"
          - "fatal"
        description: >-
               Specifies the alert severities for which this alert handler should be used. If no values are provided, then this alert handler will be enabled for alerts with any severity.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Alert Handler.
      senderAddress:
        type: string
        description: >-
               Specifies the email address to use as the sender for messages generated by this alert handler.
      senderPhoneNumber:
        type: array
        items:
          type: string
        description: >-
               The outgoing phone number to use for the messages. Values must be phone numbers you have obtained for use with your Twilio account.
      twilioAccountSID:
        type: string
        description: >-
               The unique identifier assigned to the Twilio account that will be used.
      twilioAuthToken:
        type: string
        description: >-
               The auth token for the Twilio account that will be used.
      longMessageBehavior:
        type: string
        enum:
        - "truncate"
        - "send-as-multiple-messages"
        description: >-
               The behavior to use for alert messages that are longer than the 160-character size limit for SMS messages.
      description:
        type: string
        description: >-
               A description for this Alert Handler
      serverPort:
        type: integer
        description: >-
               Specifies the port number of the SNMP agent to which traps will be sent.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Alert Handler is enabled.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Alert Handler. Each configuration property should be given in the form 'name=value'.
      disabledAlertType:
        type: array
        items:
          type: string
          enum:
          - "access-control-change"
          - "access-control-disabled"
          - "access-control-enabled"
          - "access-control-parse-failure"
          - "access-log-criteria-matched"
          - "alarm-cleared"
          - "alarm-critical"
          - "alarm-major"
          - "alarm-minor"
          - "alarm-warning"
          - "backend-disabled"
          - "backend-initialization-failed"
          - "backup-failed"
          - "cannot-acquire-shared-backend-lock"
          - "cannot-copy-schema-files"
          - "cannot-decode-entry"
          - "cannot-find-recurring-task"
          - "cannot-register-backend"
          - "cannot-release-shared-backend-lock"
          - "cannot-rename-current-task-file"
          - "cannot-rename-new-task-file"
          - "cannot-restore-backup"
          - "cannot-schedule-recurring-task-iteration"
          - "cannot-write-configuration"
          - "cannot-write-new-schema-files"
          - "cannot-write-server-state-file"
          - "cannot-write-task-backing-file"
          - "config-change"
          - "console-logger-without-no-detach"
          - "crypto-manager-error"
          - "continuous-garbage-collection-detected"
          - "deadlock-detected"
          - "debug-logging-enabled"
          - "delegated-admin-configuration-errors"
          - "duplicate-alerts-suppressed"
          - "duplicate-error-alerts-suppressed"
          - "duplicate-fatal-alerts-suppressed"
          - "duplicate-info-alerts-suppressed"
          - "duplicate-warning-alerts-suppressed"
          - "embedded-postgresql-unavailable"
          - "entering-lockdown-mode"
          - "entry-references-removed-attribute-type"
          - "exec-task-launching-command"
          - "exploded-index-background-delete-cleanup-failed"
          - "exploded-index-background-delete-failed"
          - "external-config-file-edit-handled"
          - "external-config-file-edit-lost"
          - "external-server-initialization-failed"
          - "failed-to-apply-mirrored-configuration"
          - "file-retention-task-delete-failure"
          - "force-gc-complete"
          - "force-gc-starting"
          - "global-index-insufficient-disk-space-error"
          - "global-index-persistence-error"
          - "global-index-read-error"
          - "global-referential-integrity-update-failure"
          - "globally-unique-attribute-conflict"
          - "health-check-available-to-degraded"
          - "health-check-available-to-unavailable"
          - "health-check-degraded-to-available"
          - "health-check-degraded-to-unavailable"
          - "health-check-unavailable-to-available"
          - "health-check-unavailable-to-degraded"
          - "http-connection-handler-duplicate-context-path"
          - "http-connection-handler-duplicate-servlet-extension"
          - "index-corrupt"
          - "index-degraded"
          - "index-rebuild-completed"
          - "index-rebuild-in-progress"
          - "insecure-access-token-validator-enabled"
          - "invalid-privilege"
          - "je-background-sync-failed"
          - "je-cleaner-disabled"
          - "je-daemon-thread-exception"
          - "je-environment-not-closed-cleanly"
          - "je-recovery-required"
          - "jvm-misconfiguration"
          - "large-attribute-update-failure"
          - "lba-no-available-servers"
          - "ldap-connection-handler-cannot-listen"
          - "ldap-connection-handler-consecutive-failures"
          - "ldap-connection-handler-uncaught-error"
          - "ldif-backend-cannot-write"
          - "ldif-connection-handler-parse-error"
          - "ldif-connection-handler-io-error"
          - "leaving-lockdown-mode"
          - "log-file-rotation-listener-invoke-error"
          - "log-file-rotation-listener-processing-takes-too-long"
          - "logging-error"
          - "low-disk-space-error"
          - "low-disk-space-warning"
          - "mirrored-subtree-manager-forced-as-master-error"
          - "mirrored-subtree-manager-forced-as-master-warning"
          - "mirrored-subtree-manager-no-master-found"
          - "mirrored-subtree-server-not-in-topology"
          - "mirrored-subtree-manager-operation-error"
          - "mirrored-subtree-manager-failed-outbound-connection"
          - "mirrored-subtree-manager-connection-asymmetry"
          - "missing-schema-elements-referenced-by-backend"
          - "monitoring-endpoint-unable-to-connect"
          - "no-enabled-alert-handlers"
          - "offline-config-change-detected"
          - "out-of-disk-space-error"
          - "pdp-unavailable"
          - "pdp-trust-framework-version-deprecated"
          - "proxy-entry-balancing-operation-failure"
          - "proxy-entry-balancing-error-multiple-operations-succeeded"
          - "proxy-entry-rebalancing-admin-action-required"
          - "replication-backlogged"
          - "replication-metadata-decode-failure"
          - "replication-missing-changes"
          - "replication-monitor-data-unavailable"
          - "replication-plugin-message-serialization-failure"
          - "replication-server-changelog-failure"
          - "replication-server-listen-failure"
          - "replication-unresolved-conflict"
          - "replication-unsent-changes"
          - "replication-replay-failed"
          - "restart-required"
          - "schema-checking-disabled"
          - "scim-lookthrough-limit-exceeded"
          - "restricted-subtree-accessibility"
          - "server-shutting-down"
          - "server-starting"
          - "server-started"
          - "subtree-delete-interrupted"
          - "sync-resource-connection-error"
          - "sync-resource-operation-error"
          - "sync-pipe-initialization-error"
          - "sync-pipe-backlog-above-threshold"
          - "sync-pipe-backlog-below-threshold"
          - "system-nanotime-stopped"
          - "system-current-time-shifted"
          - "task-started"
          - "task-completed"
          - "task-failed"
          - "third-party-extension-exception"
          - "thread-exit-holding-lock"
          - "threshold-warning-entry"
          - "threshold-warning-exit"
          - "threshold-critical-entry"
          - "threshold-critical-exit"
          - "topology-registry-secret-key-deleted"
          - "uncaught-exception"
          - "unindexed-internal-search"
          - "unique-attribute-sync-conflict"
          - "unique-attribute-sync-error"
          - "uniqueness-control-post-commit-conflict"
          - "unlicensed-product"
          - "unrecognized-alert-type"
          - "user-defined-error"
          - "user-defined-fatal"
          - "user-defined-info"
          - "user-defined-warning"
          - "worker-thread-caught-error"
          - "work-queue-backlogged"
          - "work-queue-full"
          - "work-queue-no-threads-remaining"
          - "server-jvm-paused"
          - "sensitive-trace-data-logged-warning"
          - "replication-generation-id-mismatch"
          - "account-temporarily-locked-account-status-notification"
          - "account-permanently-locked-account-status-notification"
          - "account-unlocked-account-status-notification"
          - "account-idle-locked-account-status-notification"
          - "account-reset-locked-account-status-notification"
          - "account-disabled-account-status-notification"
          - "account-enabled-account-status-notification"
          - "account-not-yet-active-account-status-notification"
          - "account-expired-account-status-notification"
          - "password-expired-account-status-notification"
          - "password-expiring-account-status-notification"
          - "password-reset-account-status-notification"
          - "password-changed-account-status-notification"
          - "account-created-account-status-notification"
          - "account-updated-account-status-notification"
          - "bind-password-failed-validation-account-status-notification"
          - "must-change-password-account-status-notification"
          - "privilege-assigned"
          - "insecure-request-rejected"
          - "incremental-backups-deprecated"
          - "replace-certificate-succeeded"
          - "replace-certificate-failed"
        description: >-
               Specifies the names of the alert types that are disabled for this alert handler.
      includeMonitorDataFilter:
        type: string
        description: >-
               Include monitor entries that match this filter.
      serverHostName:
        type: string
        description: >-
               Specifies the address of the SNMP agent to which traps will be sent.
      asynchronous:
        type: boolean
        description: >-
               Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
      communityName:
        type: string
        description: >-
               Specifies the name of the community to which the traps will be sent.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Alert Handler. Each configuration property should be given in the form 'name=value'.
      recipientAddress:
        type: array
        items:
          type: string
        description: >-
               Specifies an email address to which the messages should be sent.
      outputFormat:
        type: string
        enum:
        - "legacy-text"
        - "single-line-json"
        - "multi-line-json"
        description: >-
               The format to use when writing the alert messages.
      enabledAlertType:
        type: array
        items:
          type: string
          enum:
          - "access-control-change"
          - "access-control-disabled"
          - "access-control-enabled"
          - "access-control-parse-failure"
          - "access-log-criteria-matched"
          - "alarm-cleared"
          - "alarm-critical"
          - "alarm-major"
          - "alarm-minor"
          - "alarm-warning"
          - "backend-disabled"
          - "backend-initialization-failed"
          - "backup-failed"
          - "cannot-acquire-shared-backend-lock"
          - "cannot-copy-schema-files"
          - "cannot-decode-entry"
          - "cannot-find-recurring-task"
          - "cannot-register-backend"
          - "cannot-release-shared-backend-lock"
          - "cannot-rename-current-task-file"
          - "cannot-rename-new-task-file"
          - "cannot-restore-backup"
          - "cannot-schedule-recurring-task-iteration"
          - "cannot-write-configuration"
          - "cannot-write-new-schema-files"
          - "cannot-write-server-state-file"
          - "cannot-write-task-backing-file"
          - "config-change"
          - "console-logger-without-no-detach"
          - "crypto-manager-error"
          - "continuous-garbage-collection-detected"
          - "deadlock-detected"
          - "debug-logging-enabled"
          - "delegated-admin-configuration-errors"
          - "duplicate-alerts-suppressed"
          - "duplicate-error-alerts-suppressed"
          - "duplicate-fatal-alerts-suppressed"
          - "duplicate-info-alerts-suppressed"
          - "duplicate-warning-alerts-suppressed"
          - "embedded-postgresql-unavailable"
          - "entering-lockdown-mode"
          - "entry-references-removed-attribute-type"
          - "exec-task-launching-command"
          - "exploded-index-background-delete-cleanup-failed"
          - "exploded-index-background-delete-failed"
          - "external-config-file-edit-handled"
          - "external-config-file-edit-lost"
          - "external-server-initialization-failed"
          - "failed-to-apply-mirrored-configuration"
          - "file-retention-task-delete-failure"
          - "force-gc-complete"
          - "force-gc-starting"
          - "global-index-insufficient-disk-space-error"
          - "global-index-persistence-error"
          - "global-index-read-error"
          - "global-referential-integrity-update-failure"
          - "globally-unique-attribute-conflict"
          - "health-check-available-to-degraded"
          - "health-check-available-to-unavailable"
          - "health-check-degraded-to-available"
          - "health-check-degraded-to-unavailable"
          - "health-check-unavailable-to-available"
          - "health-check-unavailable-to-degraded"
          - "http-connection-handler-duplicate-context-path"
          - "http-connection-handler-duplicate-servlet-extension"
          - "index-corrupt"
          - "index-degraded"
          - "index-rebuild-completed"
          - "index-rebuild-in-progress"
          - "insecure-access-token-validator-enabled"
          - "invalid-privilege"
          - "je-background-sync-failed"
          - "je-cleaner-disabled"
          - "je-daemon-thread-exception"
          - "je-environment-not-closed-cleanly"
          - "je-recovery-required"
          - "jvm-misconfiguration"
          - "large-attribute-update-failure"
          - "lba-no-available-servers"
          - "ldap-connection-handler-cannot-listen"
          - "ldap-connection-handler-consecutive-failures"
          - "ldap-connection-handler-uncaught-error"
          - "ldif-backend-cannot-write"
          - "ldif-connection-handler-parse-error"
          - "ldif-connection-handler-io-error"
          - "leaving-lockdown-mode"
          - "log-file-rotation-listener-invoke-error"
          - "log-file-rotation-listener-processing-takes-too-long"
          - "logging-error"
          - "low-disk-space-error"
          - "low-disk-space-warning"
          - "mirrored-subtree-manager-forced-as-master-error"
          - "mirrored-subtree-manager-forced-as-master-warning"
          - "mirrored-subtree-manager-no-master-found"
          - "mirrored-subtree-server-not-in-topology"
          - "mirrored-subtree-manager-operation-error"
          - "mirrored-subtree-manager-failed-outbound-connection"
          - "mirrored-subtree-manager-connection-asymmetry"
          - "missing-schema-elements-referenced-by-backend"
          - "monitoring-endpoint-unable-to-connect"
          - "no-enabled-alert-handlers"
          - "offline-config-change-detected"
          - "out-of-disk-space-error"
          - "pdp-unavailable"
          - "pdp-trust-framework-version-deprecated"
          - "proxy-entry-balancing-operation-failure"
          - "proxy-entry-balancing-error-multiple-operations-succeeded"
          - "proxy-entry-rebalancing-admin-action-required"
          - "replication-backlogged"
          - "replication-metadata-decode-failure"
          - "replication-missing-changes"
          - "replication-monitor-data-unavailable"
          - "replication-plugin-message-serialization-failure"
          - "replication-server-changelog-failure"
          - "replication-server-listen-failure"
          - "replication-unresolved-conflict"
          - "replication-unsent-changes"
          - "replication-replay-failed"
          - "restart-required"
          - "schema-checking-disabled"
          - "scim-lookthrough-limit-exceeded"
          - "restricted-subtree-accessibility"
          - "server-shutting-down"
          - "server-starting"
          - "server-started"
          - "subtree-delete-interrupted"
          - "sync-resource-connection-error"
          - "sync-resource-operation-error"
          - "sync-pipe-initialization-error"
          - "sync-pipe-backlog-above-threshold"
          - "sync-pipe-backlog-below-threshold"
          - "system-nanotime-stopped"
          - "system-current-time-shifted"
          - "task-started"
          - "task-completed"
          - "task-failed"
          - "third-party-extension-exception"
          - "thread-exit-holding-lock"
          - "threshold-warning-entry"
          - "threshold-warning-exit"
          - "threshold-critical-entry"
          - "threshold-critical-exit"
          - "topology-registry-secret-key-deleted"
          - "uncaught-exception"
          - "unindexed-internal-search"
          - "unique-attribute-sync-conflict"
          - "unique-attribute-sync-error"
          - "uniqueness-control-post-commit-conflict"
          - "unlicensed-product"
          - "unrecognized-alert-type"
          - "user-defined-error"
          - "user-defined-fatal"
          - "user-defined-info"
          - "user-defined-warning"
          - "worker-thread-caught-error"
          - "work-queue-backlogged"
          - "work-queue-full"
          - "work-queue-no-threads-remaining"
          - "server-jvm-paused"
          - "sensitive-trace-data-logged-warning"
          - "replication-generation-id-mismatch"
          - "account-temporarily-locked-account-status-notification"
          - "account-permanently-locked-account-status-notification"
          - "account-unlocked-account-status-notification"
          - "account-idle-locked-account-status-notification"
          - "account-reset-locked-account-status-notification"
          - "account-disabled-account-status-notification"
          - "account-enabled-account-status-notification"
          - "account-not-yet-active-account-status-notification"
          - "account-expired-account-status-notification"
          - "password-expired-account-status-notification"
          - "password-expiring-account-status-notification"
          - "password-reset-account-status-notification"
          - "password-changed-account-status-notification"
          - "account-created-account-status-notification"
          - "account-updated-account-status-notification"
          - "bind-password-failed-validation-account-status-notification"
          - "must-change-password-account-status-notification"
          - "privilege-assigned"
          - "insecure-request-rejected"
          - "incremental-backups-deprecated"
          - "replace-certificate-succeeded"
          - "replace-certificate-failed"
        description: >-
               Specifies the names of the alert types that are enabled for this alert handler.
      twilioAuthTokenPassphraseProvider:
        type: string
        description: >-
               The passphrase provider that may be used to obtain the auth token for the Twilio account that will be used.
      messageBody:
        type: string
        description: >-
               Specifies the body that should be used for email messages generated by this alert handler.
      messageSubject:
        type: string
        description: >-
               Specifies the subject that should be used for email messages generated by this alert handler.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Alert Handler.
      command:
        type: string
        description: >-
               Specifies the path of the command to execute, without any arguments. It must be an absolute path for reasons of security and reliability.
      recipientPhoneNumber:
        type: array
        items:
          type: string
        description: >-
               The phone number to which alert notifications should be delivered.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the Twilio service.

  license-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the License
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/license-properties'
    required:
    - id
    - schemas
  license-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/license-response'
  license-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:license"
      directoryPlatformLicenseKey:
        type: string
        description: >-
               License key enabling use of Directory Server, Directory Proxy Server, Data Sync Server, and Data Metrics Server products.

  cipher-stream-provider-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/cipher-stream-provider-response'
    required:
    - schemas
    - totalResults
  add-cipher-stream-provider-request:
    allOf:
    - type: object
      properties:
        providerName:
          type: string
          description: >-
              Name of the new Cipher Stream Provider
    - $ref: '#/definitions/cipher-stream-provider-properties'
    required:
    - providerName
  cipher-stream-provider-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Cipher Stream Provider
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/cipher-stream-provider-properties'
    required:
    - id
    - schemas
  cipher-stream-provider-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/cipher-stream-provider-response'
  cipher-stream-provider-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:amazon-key-management-service"
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:amazon-secrets-manager"
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:azure-key-vault"
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:file-based"
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:wait-for-passphrase"
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:conjur"
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:pkcs11"
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:vault"
          - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:third-party"
      keyVaultURI:
        type: string
        description: >-
               The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Cipher Stream Provider.
      vaultServerBaseURI:
        type: array
        items:
          type: string
        description: >-
               The base URL needed to access the Vault server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://vault.example.com:8200/".
      awsAccessKeyID:
        type: string
        description: >-
               The access key ID that will be used if this cipher stream provider will authenticate to the Amazon Key Management Service using an access key rather than an IAM role associated with an EC2 instance.
      azureAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Azure service.
      secretVersionStage:
        type: string
        description: >-
               The staging label for the version of the secret to be retrieved.
      keyStorePinEnvironmentVariable:
        type: string
        description: >-
               The name of an environment variable whose value is the user PIN needed to interact with the PKCS #11 token. The environment variable must be defined and must contain a clear-text representation of the PIN.
      description:
        type: string
        description: >-
               A description for this Cipher Stream Provider
      vaultExternalServer:
        type: string
        description: >-
               An external server definition with information needed to connect and authenticate to the Vault server.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      secretVersionID:
        type: string
        description: >-
               The unique identifier for the version of the secret to be retrieved.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Cipher Stream Provider. Each configuration property should be given in the form 'name=value'.
      encryptionMetadataFile:
        type: string
        description: >-
               The path to a file that will hold metadata about the encryption performed by this Amazon Secrets Manager Cipher Stream Provider.
      trustStoreFile:
        type: string
        description: >-
               The path to a file containing the information needed to trust the certificate presented by the Vault servers.
      awsExternalServer:
        type: string
        description: >-
               The external server with information to use when interacting with the Amazon Key Management Service.
      kmsEncryptionKeyArn:
        type: string
        description: >-
               The Amazon resource name (ARN) for the KMS key that will be used to encrypt the contents of the passphrase file. This key must exist, and the AWS client must have access to encrypt and decrypt data using this key.
      vaultSecretFieldName:
        type: string
        description: >-
               The name of the field in the Vault secret record that contains the passphrase to use to generate the encryption key.
      trustStorePin:
        type: string
        description: >-
               The passphrase needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
      conjurSecretRelativePath:
        type: string
        description: >-
               The portion of the path that follows the account name in the URI needed to obtain the secret passphrase to use to generate the encryption key. Any special characters in the path must be URL-encoded.
      vaultAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Vault server.
      keyStorePinFile:
        type: string
        description: >-
               The path to a file containing the user PIN needed to interact with the PKCS #11 token. The file must exist and must contain exactly one line with a clear-text representation of the PIN.
      pkcs11KeyStoreType:
        type: string
        description: >-
               The key store type to use when obtaining an instance of a key store for interacting with a PKCS #11 token.
      trustStoreType:
        type: string
        description: >-
               The store type for the specified trust store file. The value should likely be one of "JKS" or "PKCS12".
      pkcs11ProviderConfigurationFile:
        type: string
        description: >-
               The path to the file to use to configure the security provider that implements support for interacting with PKCS #11 tokens.
      awsSecretAccessKey:
        type: string
        description: >-
               The secret access key that will be used if this cipher stream provider will authenticate to the Amazon Key Management Service using an access key rather than an IAM role associated with an EC2 instance.
      secretName:
        type: string
        description: >-
               The name of the secret to retrieve.
      awsRegionName:
        type: string
        description: >-
               The name of the Amazon Web Services region that holds the encryption key. This is optional, and if it is not provided, then the server will attempt to determine the region from the key ARN.
      secretFieldName:
        type: string
        description: >-
               The name of the JSON field whose value is the passphrase that will be used to generate the encryption key for protecting the contents of the encryption settings database.
      sslCertNickname:
        type: string
        description: >-
               The alias for the certificate in the PKCS #11 token that will be used to wrap the encryption key. The target certificate must exist in the PKCS #11 token, and it must have an RSA key pair because the JVM does not currently provide adequate key wrapping support for elliptic curve key pairs.  If you have also configured the server to use a PKCS #11 token for accessing listener certificates, we strongly recommend that you use a different certificate to protect the contents of the encryption settings database than you use for negotiating TLS sessions with clients. It is imperative that the certificate used by this PKCS11 Cipher Stream Provider remain constant for the life of the provider because if the certificate were to be replaced, then the contents of the encryption settings database could become inaccessible. Unlike with listener certificates used for TLS negotiation that need to be replaced on a regular basis, this PKCS11 Cipher Stream Provider does not consider the validity period for the associated certificate, and it will continue to function even after the certificate has expired.  If you need to rotate the certificate used to protect the server's encryption settings database, you should first install the desired new certificate in the PKCS #11 token under a different alias. Then, you should create a new instance of this PKCS11 Cipher Stream Provider that is configured to use that certificate, and that also uses a different value for the encryption-metadata-file because the information in that file is tied to the certificate used to generate it. Finally, you will need to update the global configuration so that the encryption-settings-cipher-stream-provider property references the new cipher stream provider rather than this one. The update to the global configuration must be done with the server online so that it can properly re-encrypt the contents of the encryption settings database with the correct key tied to the new certificate.
      secretID:
        type: string
        description: >-
               The Amazon Resource Name (ARN) or the user-friendly name of the secret to be retrieved.
      vaultSecretPath:
        type: string
        description: >-
               The path to the desired secret in the Vault service. This will be appended to the value of the base-url property for the associated Vault external server.
      conjurExternalServer:
        type: string
        description: >-
               An external server definition with information needed to connect and authenticate to the Conjur server.
      keyStorePin:
        type: string
        description: >-
               The clear-text user PIN needed to interact with the PKCS #11 token.
      passwordFile:
        type: string
        description: >-
               The path to the file containing the password to use when generating ciphers.
      vaultEncryptionMetadataFile:
        type: string
        description: >-
               The path to a file that will hold metadata about the encryption performed by this Vault Cipher Stream Provider.
      encryptedPassphraseFile:
        type: string
        description: >-
               The path to a file that will hold the encrypted passphrase used by this cipher stream provider.
      waitForPasswordFile:
        type: boolean
        description: >-
               Indicates whether the server should wait for the password file to become available if it does not exist.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the Azure service.
      pkcs11ProviderClass:
        type: string
        description: >-
               The fully-qualified name of the Java security provider class that implements support for interacting with PKCS #11 tokens.

  vault-authentication-method-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/vault-authentication-method-response'
    required:
    - schemas
    - totalResults
  add-vault-authentication-method-request:
    allOf:
    - type: object
      properties:
        methodName:
          type: string
          description: >-
              Name of the new Vault Authentication Method
    - $ref: '#/definitions/vault-authentication-method-properties'
    required:
    - methodName
  vault-authentication-method-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Vault Authentication Method
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/vault-authentication-method-properties'
    required:
    - id
    - schemas
  vault-authentication-method-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/vault-authentication-method-response'
  vault-authentication-method-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:static-token"
          - "urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:app-role"
          - "urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:user-pass"
      vaultRoleID:
        type: string
        description: >-
               The role ID for the AppRole to authenticate.
      password:
        type: string
        description: >-
               The password for the user to authenticate.
      vaultAccessToken:
        type: string
        description: >-
               The static token used to authenticate to the Vault server.
      vaultSecretID:
        type: string
        description: >-
               The secret ID for the AppRole to authenticate.
      description:
        type: string
        description: >-
               A description for this Vault Authentication Method
      loginMechanismName:
        type: string
        description: >-
               The name used when enabling the desired AppRole authentication mechanism in the Vault server.
      username:
        type: string
        description: >-
               The username for the user to authenticate.

  account-status-notification-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/account-status-notification-handler-response'
    required:
    - schemas
    - totalResults
  add-account-status-notification-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new Account Status Notification Handler
    - $ref: '#/definitions/account-status-notification-handler-properties'
    required:
    - handlerName
  account-status-notification-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Account Status Notification Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/account-status-notification-handler-properties'
    required:
    - id
    - schemas
  account-status-notification-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/account-status-notification-handler-response'
  account-status-notification-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:smtp"
          - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:admin-alert"
          - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:error-log"
          - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:multi-part-email"
          - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.
      senderAddress:
        type: string
        description: >-
               Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate email address.
      accountStatusNotificationType:
        type: array
        items:
          type: string
          enum:
          - "account-temporarily-locked"
          - "account-permanently-locked"
          - "account-unlocked"
          - "account-idle-locked"
          - "account-reset-locked"
          - "account-disabled"
          - "account-enabled"
          - "account-not-yet-active"
          - "account-expired"
          - "password-expired"
          - "password-expiring"
          - "password-reset"
          - "password-changed"
          - "account-created"
          - "account-updated"
          - "bind-password-failed-validation"
          - "must-change-password"
        description: >-
               The types of account status notifications that should result in administrative alerts.
      accountPermanentlyFailureLockedMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.
      accountDisabledMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that a user's account is disabled by an administrator.
      description:
        type: string
        description: >-
               A description for this Account Status Notification Handler
      enabled:
        type: boolean
        description: >-
               Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.
      passwordExpiringMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.
      accountIdleLockedMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.
      asynchronous:
        type: boolean
        description: >-
               Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
      accountUnlockedMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that a user's account has been unlocked (e.g., by an administrative password reset).
      accountEnabledMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that a user's account is enabled by an administrator.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.
      recipientAddress:
        type: array
        items:
          type: string
        description: >-
               Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for whom the notification has been generated.
      emailAddressJSONObjectFilter:
        type: string
        description: >-
               A JSON object filter that may be used to identify which email address value to use when sending the message.
      accountCreatedMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.
      bindPasswordFailedValidationMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
      passwordResetMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that a user's password has been reset by an administrator.
      mustChangePasswordMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.
      sendMessageWithoutEndUserAddress:
        type: boolean
        description: >-
               Indicates whether an email notification message should be generated and sent to the set of notification recipients even if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not possible to notify the end user).
      messageSubject:
        type: array
        items:
          type: string
        description: >-
               Specifies the subject that should be used for email messages generated by this account status notification handler.
      messageTemplateFile:
        type: array
        items:
          type: string
        description: >-
               Specifies the path to the file containing the message template to generate the email notification messages.
      accountUpdateNotificationRequestCriteria:
        type: string
        description: >-
               A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification Handler.
      emailAddressJSONField:
        type: string
        description: >-
               The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.
      accountCreationNotificationRequestCriteria:
        type: string
        description: >-
               A request criteria object that identifies which add requests should result in account creation notifications for this handler.
      passwordChangedMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.
      accountNotYetActiveMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.
      accountResetLockedMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
      emailAddressAttributeType:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.
      accountExpiredMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.
      passwordExpiredMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.
      accountTemporarilyFailureLockedMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.
      accountUpdatedMessageTemplate:
        type: string
        description: >-
               The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.

  server-group-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/server-group-response'
    required:
    - schemas
    - totalResults
  add-server-group-request:
    allOf:
    - type: object
      properties:
        groupName:
          type: string
          description: >-
              Name of the new Server Group
    - $ref: '#/definitions/server-group-properties'
    required:
    - groupName
  server-group-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Server Group
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/server-group-properties'
    required:
    - id
    - schemas
  server-group-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/server-group-response'
  server-group-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:server-group"
      member:
        type: array
        items:
          type: string
        description: >-
               A server instance that is a member of this group.

  pass-through-authentication-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/pass-through-authentication-handler-response'
    required:
    - schemas
    - totalResults
  add-pass-through-authentication-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new Pass Through Authentication Handler
    - $ref: '#/definitions/pass-through-authentication-handler-properties'
    required:
    - handlerName
  pass-through-authentication-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Pass Through Authentication Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/pass-through-authentication-handler-properties'
    required:
    - id
    - schemas
  pass-through-authentication-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/pass-through-authentication-handler-response'
  pass-through-authentication-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:ldap"
          - "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:third-party"
      server:
        type: array
        items:
          type: string
        description: >-
               Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
      serverAccessMode:
        type: string
        enum:
        - "round-robin"
        - "failover-on-unavailable"
        - "failover-on-any-failure"
        description: >-
               Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.
      usePasswordPolicyControl:
        type: boolean
        description: >-
               Indicates whether to include the password policy request control (as defined in draft-behera-ldap-password-policy-10) in bind requests sent to the external server.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Pass Through Authentication Handler.
      dnMap:
        type: array
        items:
          type: string
        description: >-
               Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.
      initialConnections:
        type: integer
        description: >-
               Specifies the initial number of connections to establish to each external server against which authentication may be attempted.
      description:
        type: string
        description: >-
               A description for this Pass Through Authentication Handler
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Pass Through Authentication Handler. Each configuration property should be given in the form 'name=value'.
      useLocation:
        type: boolean
        description: >-
               Indicates whether to take server locations into account when prioritizing the servers to use for pass-through authentication attempts.
      searchFilterPattern:
        type: string
        description: >-
               A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.
      maximumAllowedLocalResponseTime:
        type: string
        description: >-
               The maximum length of time to wait for a response from an external server in the same location as this Directory Server before considering it unavailable.
      maximumAllowedNonlocalResponseTime:
        type: string
        description: >-
               The maximum length of time to wait for a response from an external server in a different location from this Directory Server before considering it unavailable.
      bindDNPattern:
        type: string
        description: >-
               A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.
      searchBaseDN:
        type: string
        description: >-
               The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
      maxConnections:
        type: integer
        description: >-
               Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.

  consent-definition-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/consent-definition-response'
    required:
    - schemas
    - totalResults
  add-consent-definition-request:
    allOf:
    - type: object
      properties:
        definitionName:
          type: string
          description: >-
              Name of the new Consent Definition
    - $ref: '#/definitions/consent-definition-properties'
    required:
    - definitionName
  consent-definition-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Consent Definition
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/consent-definition-properties'
    required:
    - id
    - schemas
  consent-definition-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/consent-definition-response'
  consent-definition-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:consent-definition"
      displayName:
        type: string
        description: >-
               A human-readable display name for this Consent Definition.
      parameter:
        type: array
        items:
          type: string
        description: >-
               Optional parameters for this Consent Definition.
      description:
        type: string
        description: >-
               A description for this Consent Definition
      uniqueID:
        type: string
        description: >-
               A version-independent unique identifier for this Consent Definition.

  consent-definition-localization-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/consent-definition-localization-response'
    required:
    - schemas
    - totalResults
  add-consent-definition-localization-request:
    allOf:
    - type: object
      properties:
        localizationName:
          type: string
          description: >-
              Name of the new Consent Definition Localization
    - $ref: '#/definitions/consent-definition-localization-properties'
    required:
    - localizationName
  consent-definition-localization-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Consent Definition Localization
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/consent-definition-localization-properties'
    required:
    - id
    - schemas
  consent-definition-localization-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/consent-definition-localization-response'
  consent-definition-localization-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:consent-definition-localization"
      dataText:
        type: string
        description: >-
               Localized text describing the data to be shared.
      titleText:
        type: string
        description: >-
               Localized text that may be used to provide a title or summary for a consent request or a granted consent.
      purposeText:
        type: string
        description: >-
               Localized text describing how the data is to be used.
      locale:
        type: string
        description: >-
               The locale of this Consent Definition Localization.
      version:
        type: string
        description: >-
               The version of this Consent Definition Localization, using the format MAJOR.MINOR.

  consent-service-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Consent Service
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/consent-service-properties'
    required:
    - id
    - schemas
  consent-service-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/consent-service-response'
  consent-service-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:consent-service"
      bindDN:
        type: string
        description: >-
               The DN of an internal service account used by the Consent Service to make internal LDAP requests.
      serviceAccountDN:
        type: array
        items:
          type: string
        description: >-
               The set of account DNs that the Consent Service will consider to be privileged.
      audience:
        type: string
        description: >-
               A string or URI that identifies the Consent Service in the context of OAuth2 authorization.
      searchSizeLimit:
        type: integer
        description: >-
               The maximum number of consent resources that may be returned from a search request.
      unprivilegedConsentScope:
        type: string
        description: >-
               The name of a scope that must be present in an access token accepted by the Consent Service for unprivileged clients.
      privilegedConsentScope:
        type: string
        description: >-
               The name of a scope that must be present in an access token accepted by the Consent Service if the client is to be considered privileged.
      baseDN:
        type: string
        description: >-
               The base DN under which consent records are stored.
      consentRecordIdentityMapper:
        type: array
        items:
          type: string
        description: >-
               If specified, the Identity Mapper(s) that may be used to map consent record subject and actor values to DNs. This is typically only needed if privileged API clients will be used.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Consent Service is enabled.

  topology-admin-user-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/topology-admin-user-response'
    required:
    - schemas
    - totalResults
  add-topology-admin-user-request:
    allOf:
    - type: object
      properties:
        userName:
          type: string
          description: >-
              Name of the new Topology Admin User
    - $ref: '#/definitions/topology-admin-user-properties'
    required:
    - userName
  topology-admin-user-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Topology Admin User
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/topology-admin-user-properties'
    required:
    - id
    - schemas
  topology-admin-user-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/topology-admin-user-response'
  topology-admin-user-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:topology-admin-user"
      lastName:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's last name. This is stored in the sn LDAP attribute.
      accountActivationTime:
        type: string
        description: >-
               Specifies the time, in generalized time format (e.g., '20160101070000Z'), that the root user account should become active. If an activation time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, until the activation time has arrived. This is stored in the ds-pwp-account-activation-time LDAP attribute.
      requireSecureConnections:
        type: boolean
        description: >-
               Indicates whether this User must be required to communicate with the server over a secure connection. When set to "true", the User will only be allowed to communicate with the server over a secure connection (i.e., using TLS or the StartTLS extended operation).
      description:
        type: string
        description: >-
               A description for this User.
      isProxyableByURL:
        type: array
        items:
          type: string
        description: >-
               Specifies LDAP URLs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
      privilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "-audit-data-security"
          - "bypass-acl"
          - "-bypass-acl"
          - "bypass-read-acl"
          - "-bypass-read-acl"
          - "modify-acl"
          - "-modify-acl"
          - "config-read"
          - "-config-read"
          - "config-write"
          - "-config-write"
          - "jmx-read"
          - "-jmx-read"
          - "jmx-write"
          - "-jmx-write"
          - "jmx-notify"
          - "-jmx-notify"
          - "ldif-import"
          - "-ldif-import"
          - "ldif-export"
          - "-ldif-export"
          - "backend-backup"
          - "-backend-backup"
          - "backend-restore"
          - "-backend-restore"
          - "server-shutdown"
          - "-server-shutdown"
          - "server-restart"
          - "-server-restart"
          - "proxied-auth"
          - "-proxied-auth"
          - "disconnect-client"
          - "-disconnect-client"
          - "password-reset"
          - "-password-reset"
          - "update-schema"
          - "-update-schema"
          - "privilege-change"
          - "-privilege-change"
          - "unindexed-search"
          - "-unindexed-search"
          - "unindexed-search-with-control"
          - "-unindexed-search-with-control"
          - "bypass-pw-policy"
          - "-bypass-pw-policy"
          - "lockdown-mode"
          - "-lockdown-mode"
          - "stream-values"
          - "-stream-values"
          - "third-party-task"
          - "-third-party-task"
          - "use-admin-session"
          - "-use-admin-session"
          - "soft-delete-read"
          - "-soft-delete-read"
          - "metrics-read"
          - "-metrics-read"
          - "remote-log-read"
          - "-remote-log-read"
          - "manage-topology"
          - "-manage-topology"
          - "permit-get-password-policy-state-issues"
          - "-permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "-permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "-permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "-permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "-permit-forwarding-client-connection-policy"
          - "exec-task"
          - "-exec-task"
          - "collect-support-data"
          - "-collect-support-data"
          - "file-servlet-access"
          - "-file-servlet-access"
          - "permit-replace-certificate-request"
          - "-permit-replace-certificate-request"
        description: >-
               Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.
      userID:
        type: string
        description: >-
               Specifies the user's user ID. This is stored in the uid LDAP attribute.
      mayProxyAsGroup:
        type: array
        items:
          type: string
        description: >-
               This restricts the set of accounts that this User can proxy as to entries that are in the group with the specified DN.
      workTelephoneNumber:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's work telephone number. This is stored in the telephoneNumber LDAP attribute.
      password:
        type: string
        description: >-
               Specifies the user's password. This is stored in the userPassword LDAP attribute. To set a pre-hashed value, the account making the change must have the bypass-pw-policy privilege.
      emailAddress:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's email address. This is stored in the mail LDAP attribute.
      alternateBindDN:
        type: array
        items:
          type: string
        description: >-
               Specifies one or more alternate DNs that can be used to bind to the server as this User.
      homeTelephoneNumber:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's home telephone number. This is stored in the homePhone LDAP attribute.
      allowedAuthenticationType:
        type: array
        items:
          type: string
        description: >-
               Indicates that User should only be allowed to authenticate in certain ways. Allowed values include "simple" (to indicate that the user should be allowed to bind using simple authentication) or "sasl {mech}" (to indicate that the user should be allowed to bind using the specified SASL mechanism, like "sasl PLAIN"). The list of available SASL mechanisms can be retrieved by running "dsconfig --advanced list-sasl-mechanism-handlers".
      disabled:
        type: boolean
        description: >-
               Specifies whether the root user account should be disabled. A disabled account is not permitted to authenticate, nor can it be used as an authorization identity. This is stored in the ds-pwp-account-disabled LDAP attribute.
      requireSecureAuthentication:
        type: boolean
        description: >-
               Indicates whether this User must authenticate in a secure manner. When set to "true", the User will only be allowed to authenticate over a secure connection or using a mechanism that does not expose user credentials (e.g., the CRAM-MD5, DIGEST-MD5, and GSSAPI SASL mechanisms).
      isProxyable:
        type: string
        enum:
        - "allowed"
        - "prohibited"
        - "required"
        description: >-
               This can be used to indicate whether the User can be used as an alternate authorization identity (using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity).
      isProxyableByGroup:
        type: array
        items:
          type: string
        description: >-
               Specifies the DNs of groups whose members can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
      preferredOTPDeliveryMechanism:
        type: array
        items:
          type: string
        description: >-
               Overrides the default settings for the mechanisms (e.g., email or SMS) that are used to deliver one time passwords to Users.
      pagerTelephoneNumber:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's pager telephone number. This is stored in the pager LDAP attribute.
      lookThroughEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of candidate entries that the server may examine in the course of processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-lookthrough-limit LDAP attribute.
      passwordPolicy:
        type: string
        description: >-
               Specifies the password policy for the user. This is stored in the ds-pwp-password-policy-dn LDAP attribute.
      mayProxyAsURL:
        type: array
        items:
          type: string
        description: >-
               This restricts the set of accounts that this User can proxy as to entries that are matched by the specified LDAP URL.
      allowedAuthenticationIPAddress:
        type: array
        items:
          type: string
        description: >-
               An IPv4 or IPv6 address mask that controls the set of IP addresses from which this User can authenticate to the server. For instance a value of 127.0.0.1 (or ::1 in IPv6) would restricted access only to localhost connections, whereas 10.6.1.* would restrict access to servers on the 10.6.1.* subnet.
      searchResultEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that the server may return to the user in response to any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-size-limit LDAP attribute.
      mayProxyAsDN:
        type: array
        items:
          type: string
        description: >-
               This restricts the set of accounts that this User can proxy as to entries with the specified DNs.
      idleTimeLimitSeconds:
        type: integer
        description: >-
               Specifies the maximum length of time (in seconds) that a connection authenticated as this user may remain established without issuing any requests. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-idle-time-limit LDAP attribute.
      firstName:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's first name. This is stored in the givenName LDAP attribute.
      isProxyableByDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DNs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
      inheritDefaultRootPrivileges:
        type: boolean
        description: >-
               Indicates whether this User should be automatically granted the set of privileges defined in the default-root-privilege-name property of the Root DN configuration object.
      accountExpirationTime:
        type: string
        description: >-
               Specifies the time, in generalized time format (e.g., '20240101070000Z'), that the root user account should expire. If an expiration time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, after this time has passed. This is stored in the ds-pwp-account-expiration-time LDAP attribute.
      timeLimitSeconds:
        type: integer
        description: >-
               Specifies the maximum length of time (in seconds) that the server may spend processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-time-limit LDAP attribute.
      mobileTelephoneNumber:
        type: array
        items:
          type: string
        description: >-
               Specifies the user's mobile telephone number. This is stored in the mobile LDAP attribute.

  change-subscription-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/change-subscription-response'
    required:
    - schemas
    - totalResults
  add-change-subscription-request:
    allOf:
    - type: object
      properties:
        subscriptionName:
          type: string
          description: >-
              Name of the new Change Subscription
    - $ref: '#/definitions/change-subscription-properties'
    required:
    - subscriptionName
  change-subscription-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Change Subscription
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/change-subscription-properties'
    required:
    - id
    - schemas
  change-subscription-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/change-subscription-response'
  change-subscription-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:change-subscription"
      requestCriteria:
        type: string
        description: >-
               Specifies a set of request criteria that must match the request associated with an operation in order for that operation to be processed by a change subscription handler.
      resultCriteria:
        type: string
        description: >-
               Specifies a set of result criteria that must match the result associated with an operation in order for that operation to be processed by a change subscription handler.
      expirationTime:
        type: string
        description: >-
               Specifies a timestamp that provides an expiration time for this change subscription. If an expiration time is provided, then the change subscription will not be active after that time has passed.
      description:
        type: string
        description: >-
               A description for this Change Subscription
      connectionCriteria:
        type: string
        description: >-
               Specifies a set of connection criteria that must match the client connection associated with an operation in order for that operation to be processed by a change subscription handler.

  ldap-sdk-debug-logger-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the LDAP SDK Debug Logger
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/ldap-sdk-debug-logger-properties'
    required:
    - id
    - schemas
  ldap-sdk-debug-logger-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/ldap-sdk-debug-logger-response'
  ldap-sdk-debug-logger-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:ldap-sdk-debug-logger"
      debugType:
        type: array
        items:
          type: string
          enum:
          - "asn1"
          - "coding-error"
          - "connect"
          - "exception"
          - "ldap"
          - "ldif"
          - "monitor"
          - "other"
        description: >-
               The types of debug messages that should be logged.
      queueSize:
        type: integer
        description: >-
               The maximum number of log records that can be stored in the asynchronous queue.
      rotationPolicy:
        type: array
        items:
          type: string
        description: >-
               The rotation policy to use for the LDAP SDK Debug Logger .
      compressionMechanism:
        type: string
        enum:
        - "none"
        - "gzip"
        description: >-
               Specifies the type of compression (if any) to use for log files that are written.
      encryptionSettingsDefinitionID:
        type: string
        description: >-
               Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
      description:
        type: string
        description: >-
               A description for this LDAP SDK Debug Logger
      encryptLog:
        type: boolean
        description: >-
               Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
      rotationListener:
        type: array
        items:
          type: string
        description: >-
               A listener that should be notified whenever a log file is rotated out of service.
      enabled:
        type: boolean
        description: >-
               Indicates whether this LDAP SDK Debug Logger is enabled.
      debugLevel:
        type: string
        enum:
        - "severe"
        - "warning"
        - "info"
        - "config"
        - "fine"
        - "finer"
        - "finest"
        description: >-
               The minimum debug level that should be used for messages to be logged.
      autoFlush:
        type: boolean
        description: >-
               Specifies whether to flush the writer after every log record.
      asynchronous:
        type: boolean
        description: >-
               Indicates whether the LDAP SDK Debug Logger will publish records asynchronously.
      logFile:
        type: string
        description: >-
               The path and base name of the file to use for log files generated by this LDAP SDK Debug Logger. The path may be either absolute or relative to the server root.
      logFilePermissions:
        type: string
        description: >-
               The UNIX permissions of the log files created by this LDAP SDK Debug Logger.
      timestampPrecision:
        type: string
        enum:
        - "seconds"
        - "milliseconds"
        description: >-
               Specifies the smallest time unit to be included in timestamps.
      timeInterval:
        type: string
        description: >-
               Specifies the interval at which to check whether the log files need to be rotated.
      includeStackTrace:
        type: boolean
        description: >-
               Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.
      retentionPolicy:
        type: array
        items:
          type: string
        description: >-
               The retention policy to use for the LDAP SDK Debug Logger .
      loggingErrorBehavior:
        type: string
        enum:
        - "standard-error"
        - "lockdown-mode"
        description: >-
               Specifies the behavior that the server should exhibit if an error occurs during logging processing.
      append:
        type: boolean
        description: >-
               Specifies whether to append to existing log files.
      bufferSize:
        type: string
        description: >-
               Specifies the log file buffer size.
      signLog:
        type: boolean
        description: >-
               Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.

  conjur-authentication-method-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/conjur-authentication-method-response'
    required:
    - schemas
    - totalResults
  add-conjur-authentication-method-request:
    allOf:
    - type: object
      properties:
        methodName:
          type: string
          description: >-
              Name of the new Conjur Authentication Method
    - $ref: '#/definitions/conjur-authentication-method-properties'
    required:
    - methodName
  conjur-authentication-method-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Conjur Authentication Method
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/conjur-authentication-method-properties'
    required:
    - id
    - schemas
  conjur-authentication-method-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/conjur-authentication-method-response'
  conjur-authentication-method-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:conjur-authentication-method"
      password:
        type: string
        description: >-
               The password for the user to authenticate. This will be used to obtain an API key for the target user.
      apiKey:
        type: string
        description: >-
               The API key for the user to authenticate.
      description:
        type: string
        description: >-
               A description for this Conjur Authentication Method
      username:
        type: string
        description: >-
               The username for the user to authenticate.

  constructed-attribute-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/constructed-attribute-response'
    required:
    - schemas
    - totalResults
  add-constructed-attribute-request:
    allOf:
    - type: object
      properties:
        attributeName:
          type: string
          description: >-
              Name of the new Constructed Attribute
    - $ref: '#/definitions/constructed-attribute-properties'
    required:
    - attributeName
  constructed-attribute-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Constructed Attribute
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/constructed-attribute-properties'
    required:
    - id
    - schemas
  constructed-attribute-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/constructed-attribute-response'
  constructed-attribute-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:constructed-attribute"
      attributeType:
        type: string
        description: >-
               Specifies the attribute type for the attribute whose values are to be constructed.
      description:
        type: string
        description: >-
               A description for this Constructed Attribute
      valuePattern:
        type: array
        items:
          type: string
        description: >-
               Specifies a pattern for constructing the attribute value using fixed text and attribute values from the entry.

  password-validator-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/password-validator-response'
    required:
    - schemas
    - totalResults
  add-password-validator-request:
    allOf:
    - type: object
      properties:
        validatorName:
          type: string
          description: >-
              Name of the new Password Validator
    - $ref: '#/definitions/password-validator-properties'
    required:
    - validatorName
  password-validator-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Password Validator
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/password-validator-properties'
    required:
    - id
    - schemas
  password-validator-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/password-validator-response'
  password-validator-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:character-set"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:similarity-based"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:attribute-value"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:custom"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:repeated-characters"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:dictionary"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:haystack"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:pwned-passwords"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:length-based"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:regular-expression"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:unique-characters"
          - "urn:pingidentity:schemas:configuration:2.0:password-validator:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Password Validator.
      characterSet:
        type: array
        items:
          type: string
        description: >-
               Specifies a character set containing characters that a password may contain and a value indicating the minimum number of characters required from that set.
      matchAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the name(s) of the attribute(s) whose values should be checked to determine whether they match the provided password. If no values are provided, then the server checks if the proposed password matches the value of any user attribute in the target user's entry.
      validatorRequirementDescription:
        type: string
        description: >-
               Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
      minimumAcceptableTimeToExhaustSearchSpace:
        type: string
        description: >-
               The minimum length of time (using the configured number of password guesses per second) required to exhaust the entire search space for a proposed password in order for that password to be considered acceptable.
      acceptPasswordOnServiceError:
        type: boolean
        description: >-
               Indicates whether to accept the proposed password if an error occurs while attempting to interact with the Pwned Passwords service.
      description:
        type: string
        description: >-
               A description for this Password Validator
      testPasswordSubstringOfAttributeValue:
        type: boolean
        description: >-
               Indicates whether to reject any proposed password that is a substring of a value in one of the match attributes in the target user's entry.
      invokeForAdminReset:
        type: boolean
        description: >-
               Indicates whether this password validator should be used to validate clear-text passwords provided by administrators when changing the password for another user.
      maxPasswordLength:
        type: integer
        description: >-
               Specifies the maximum number of characters that can be included in a proposed password.
      enabled:
        type: boolean
        description: >-
               Indicates whether the password validator is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Password Validator. Each configuration property should be given in the form 'name=value'.
      caseSensitiveValidation:
        type: boolean
        description: >-
               Indicates whether this password validator should treat password characters in a case-sensitive manner.
      validatorFailureMessage:
        type: string
        description: >-
               Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      keyManagerProvider:
        type: string
        description: >-
               Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.
      allowUnclassifiedCharacters:
        type: boolean
        description: >-
               Indicates whether this password validator allows passwords to contain characters outside of any of the user-defined character sets.
      minUniqueCharacters:
        type: integer
        description: >-
               Specifies the minimum number of unique characters that a password will be allowed to contain.
      minPasswordDifference:
        type: integer
        description: >-
               Specifies the minimum difference of new and old password.
      testReversedPassword:
        type: boolean
        description: >-
               Indicates whether to perform matching against the reversed value of the provided password in addition to the order in which it was given.
      maximumAllowedPercentOfPassword:
        type: integer
        description: >-
               The maximum allowed percent of a proposed password that any single dictionary word is allowed to comprise. A value of 100 indicates that a proposed password will only be rejected if the dictionary contains the entire proposed password (after any configured transformations have been applied).
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Password Validator. Each configuration property should be given in the form 'name=value'.
      matchPattern:
        type: string
        description: >-
               The regular expression to use for this password validator.
      matchBehavior:
        type: string
        enum:
        - "require-match"
        - "reject-match"
        description: >-
               The behavior to exhibit if a user's proposed password matches the regular expression defined in the match-pattern property.
      maxConsecutiveLength:
        type: integer
        description: >-
               Specifies the maximum number of times that any character can appear consecutively in a password value.
      ignoreLeadingNonAlphabeticCharacters:
        type: boolean
        description: >-
               Indicates whether to ignore any digits, symbols, or other non-alphabetic characters that may appear at the beginning of a proposed password.
      dictionaryFile:
        type: string
        description: >-
               Specifies the path to the file containing a list of words that cannot be used as passwords.
      trustManagerProvider:
        type: string
        description: >-
               Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the Pwned Password servers).
      invokeForSelfChange:
        type: boolean
        description: >-
               Indicates whether this password validator should be used to validate clear-text passwords provided by an end user in the course of changing their own password.
      alternativePasswordCharacterMapping:
        type: array
        items:
          type: string
        description: >-
               Provides a set of character substitutions that can be applied to the proposed password when checking to see if it is in the provided dictionary. Each mapping should consist of a single character followed by a colon and a list of the alternative characters that may be used in place of that character.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Password Validator.
      minimumAttributeValueLengthForSubstringMatches:
        type: integer
        description: >-
               The minimum length that an attribute value must have for it to be considered when rejecting passwords that contain the value of another attribute as a substring.
      stripDiacriticalMarks:
        type: boolean
        description: >-
               Indicates whether to strip characters of any diacritical marks (like accents, cedillas, circumflexes, diaereses, tildes, and umlauts) they may contain. Any characters with a diacritical mark would be replaced with a base version
      invokeForAdd:
        type: boolean
        description: >-
               Indicates whether this password validator should be used to validate clear-text passwords provided in LDAP add requests.
      ignoreTrailingNonAlphabeticCharacters:
        type: boolean
        description: >-
               Indicates whether to ignore any digits, symbols, or other non-alphabetic characters that may appear at the end of a proposed password.
      testAttributeValueSubstringOfPassword:
        type: boolean
        description: >-
               Indicates whether to reject any proposed password in which a value in one of the match attributes in the target user's entry is a substring of that password.
      assumedPasswordGuessesPerSecond:
        type: string
        description: >-
               The number of password guesses per second that a potential attacker may be expected to make.
      minPasswordLength:
        type: integer
        description: >-
               Specifies the minimum number of characters that must be included in a proposed password.
      pwnedPasswordsBaseURL:
        type: string
        description: >-
               The base URL for requests used to interact with the Pwned Passwords service. The first five characters of the hexadecimal representation of the unsalted SHA-1 digest of a proposed password will be appended to this base URL to construct the HTTP GET request used to obtain information about potential matches.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the Pwned Passwords service.
      minimumRequiredCharacterSets:
        type: integer
        description: >-
               Specifies the minimum number of character sets that must be represented in a proposed password.

  alarm-manager-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Alarm Manager
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/alarm-manager-properties'
    required:
    - id
    - schemas
  alarm-manager-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/alarm-manager-response'
  alarm-manager-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:alarm-manager"
      suppressedAlarm:
        type: array
        items:
          type: string
          enum:
          - "no-enabled-alert-handlers"
          - "pdp-unavailable"
        description: >-
               Specifies the names of the alarm alert types that should be suppressed. If the condition that triggers an alarm in this list occurs, then the alarm will not be raised and no alerts will be generated. Only a subset of alarms can be suppressed in this way. Alarms triggered by a gauge can be disabled by disabling the gauge.
      generatedAlertTypes:
        type: array
        items:
          type: string
          enum:
          - "standard"
          - "alarm"
        description: >-
               Indicates what kind of alert types should be generated.
      defaultGaugeAlertLevel:
        type: string
        enum:
        - "always"
        - "warning-and-above"
        - "minor-and-above"
        - "major-and-above"
        - "critical-only"
        - "never"
        description: >-
               Specifies the level at which alerts are sent for alarms raised by the Alarm Manager.

  connection-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/connection-handler-response'
    required:
    - schemas
    - totalResults
  add-connection-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new Connection Handler
    - $ref: '#/definitions/connection-handler-properties'
    required:
    - handlerName
  connection-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Connection Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/connection-handler-properties'
    required:
    - id
    - schemas
  connection-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/connection-handler-response'
  connection-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:connection-handler:jmx"
          - "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldap"
          - "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldif"
          - "urn:pingidentity:schemas:configuration:2.0:connection-handler:http"
      correlationIDRequestHeader:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of HTTP request headers that may contain a value to be used as the correlation ID. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      numRequestHandlers:
        type: integer
        description: >-
               Specifies the number of request handlers that are used to read requests from clients.
      enableMultipartMIMEParameters:
        type: boolean
        description: >-
               Determines whether request form parameters submitted in multipart/ form-data (RFC 2388) format should be processed as request parameters.
      responseHeader:
        type: array
        items:
          type: string
        description: >-
               Specifies HTTP header fields and values added to response headers for all requests.
      description:
        type: string
        description: >-
               A description for this Connection Handler
      httpRequestHeaderSize:
        type: integer
        description: >-
               Specifies the maximum buffer size of an http request including the request uri and all of the request headers.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Connection Handler is enabled.
      idleTimeLimit:
        type: string
        description: >-
               Specifies the maximum idle time for a connection. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.
      lowResourcesConnectionThreshold:
        type: integer
        description: >-
               Specifies the number of connections, which if exceeded, places this handler in a low resource state where a different idle time limit is applied on the connections.
      keyManagerProvider:
        type: string
        description: >-
               Specifies the name of the key manager that should be used with this JMX Connection Handler .
      listenAddress:
        type: array
        items:
          type: string
        description: >-
               Specifies the address or set of addresses on which this LDAP Connection Handler should listen for connections from LDAP clients.
      ldifDirectory:
        type: string
        description: >-
               Specifies the path to the directory in which the LDIF files should be placed.
      correlationIDResponseHeader:
        type: string
        description: >-
               Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      acceptBacklog:
        type: integer
        description: >-
               Specifies the maximum number of pending connection attempts that are allowed to queue up in the accept backlog before the server starts rejecting new connection attempts.
      autoAuthenticateUsingClientCertificate:
        type: boolean
        description: >-
               Indicates whether to attempt to automatically authenticate a client connection that has established a secure communication channel (using either SSL or StartTLS) and presented its own client certificate. Generally, clients should use the SASL EXTERNAL mechanism to authenticate using a client certificate, but some clients may not support that capability and/or may expect automatic authentication.
      lowResourcesIdleTimeLimit:
        type: string
        description: >-
               Specifies the maximum idle time for a connection when this handler is in a low resource state as defined by low-resource-connections. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.
      closeConnectionsOnExplicitGC:
        type: boolean
        description: >-
               Indicates whether all connections associated with this LDAP Connection Handler should be closed before an explicit garbage collection is performed to allow clients to route requests to another server.
      webApplicationExtension:
        type: array
        items:
          type: string
        description: >-
               Specifies information about web applications that will be provided via this connection handler.
      useTCPKeepAlive:
        type: boolean
        description: >-
               Indicates whether the LDAP Connection Handler should use TCP keep-alive.
      allowTCPReuseAddress:
        type: boolean
        description: >-
               Indicates whether the server should attempt to reuse socket descriptors. This may be useful in environments with a high rate of connection establishment and termination.
      httpOperationLogPublisher:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of HTTP operation loggers that should be used to log information about requests and responses for operations processed through this HTTP Connection Handler.
      maxRequestSize:
        type: string
        description: >-
               Specifies the size of the largest LDAP request message that will be allowed by this LDAP Connection handler.
      useForwardedHeaders:
        type: boolean
        description: >-
               Indicates whether to use "Forwarded" and "X-Forwarded-*" request headers to override corresponding HTTP request information available during request processing.
      trustManagerProvider:
        type: string
        description: >-
               Specifies the name of the trust manager that should be used with the LDAP Connection Handler .
      httpServletExtension:
        type: array
        items:
          type: string
        description: >-
               Specifies information about servlets that will be provided via this connection handler.
      sslCertNickname:
        type: string
        description: >-
               Specifies the nickname (also called the alias) of the certificate that the JMX Connection Handler should use when performing SSL communication.
      useCorrelationIDHeader:
        type: boolean
        description: >-
               If enabled, a correlation ID header will be added to outgoing HTTP responses.
      allowedClient:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of address masks that determines the addresses of the clients that are allowed to establish connections to this connection handler.
      numAcceptHandlers:
        type: integer
        description: >-
               Specifies the number of threads that are used to accept new client connections, and to perform any initial preparation on those connections that may be needed before the connection can be used to read requests and send responses.
      useSSL:
        type: boolean
        description: >-
               Indicates whether the JMX Connection Handler should use SSL.
      sendRejectionNotice:
        type: boolean
        description: >-
               Indicates whether the LDAP Connection Handler should send a notice of disconnection extended response message to the client if a new connection is rejected for some reason.
      maxBlockedWriteTimeLimit:
        type: string
        description: >-
               Specifies the maximum length of time that attempts to write data to LDAP clients should be allowed to block.
      closeConnectionsWhenUnavailable:
        type: boolean
        description: >-
               Indicates whether all connections associated with this LDAP Connection Handler should be closed and no new connections accepted when the server has determined that it is "unavailable." This allows clients (or a network load balancer) to route requests to another server.
      pollInterval:
        type: string
        description: >-
               Specifies how frequently the LDIF connection handler should check the LDIF directory to determine whether a new LDIF file has been added.
      allowStartTLS:
        type: boolean
        description: >-
               Indicates whether clients are allowed to use StartTLS.
      failedBindResponseDelay:
        type: string
        description: >-
               Specifies the length of time that the server should delay the response to non-successful bind operations. A value of zero milliseconds indicates that non-successful bind operations should not be delayed.
      keepStats:
        type: boolean
        description: >-
               Indicates whether to enable statistics collection for this connection handler.
      sslClientAuthPolicy:
        type: string
        enum:
        - "disabled"
        - "optional"
        - "required"
        description: >-
               Specifies the policy that the LDAP Connection Handler should use regarding client SSL certificates.
      sslProtocol:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the SSL protocols that are allowed for use in SSL or StartTLS communication. The set of supported ssl protocols can be viewed via the ssl context monitor entry.
      deniedClient:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of address masks that determines the addresses of the clients that are not allowed to establish connections to this connection handler.
      allowLDAPV2:
        type: boolean
        description: >-
               Indicates whether connections from LDAPv2 clients are allowed.
      maxCancelHandlers:
        type: integer
        description: >-
               Specifies the maximum number of threads that are used to process cancel and abandon requests from clients.
      sslCipherSuite:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the SSL cipher suites that are allowed for use in SSL or StartTLS communication. The set of supported cipher suites can be viewed via the ssl context monitor entry.
      listenPort:
        type: integer
        description: >-
               Specifies the port number on which the JMX Connection Handler will listen for connections from clients.

  web-application-extension-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/web-application-extension-response'
    required:
    - schemas
    - totalResults
  add-web-application-extension-request:
    allOf:
    - type: object
      properties:
        extensionName:
          type: string
          description: >-
              Name of the new Web Application Extension
    - $ref: '#/definitions/web-application-extension-properties'
    required:
    - extensionName
  web-application-extension-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Web Application Extension
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/web-application-extension-properties'
    required:
    - id
    - schemas
  web-application-extension-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/web-application-extension-response'
  web-application-extension-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:web-application-extension:console"
          - "urn:pingidentity:schemas:configuration:2.0:web-application-extension:generic"
      ldapServer:
        type: string
        description: >-
               The LDAP URL used to connect to the managed server.
      complexity:
        type: string
        enum:
        - "basic"
        - "standard"
        - "advanced"
        - "expert"
        description: >-
               Specifies the maximum complexity level for managed configuration elements.
      initParameter:
        type: array
        items:
          type: string
        description: >-
               Specifies an initialization parameter to pass into the web application during startup.
      baseContextPath:
        type: string
        description: >-
               Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a forward slash and at least one additional character and must represent a valid HTTP context path.
      oidcTrustStoreFile:
        type: string
        description: >-
               Specifies the path to the truststore file used by this application to evaluate OIDC provider certificates. If this field is left blank, the default JVM trust store will be used.
      oidcStrictHostnameVerification:
        type: boolean
        description: >-
               Controls whether or not hostname verification is performed, which checks if the hostname of the OIDC provider matches the name(s) stored inside the certificate it provides. This property should only be set to false for testing purposes.
      oidcClientID:
        type: string
        description: >-
               The client ID to use when authenticating to the OpenID Connect provider.
      oidcTrustStorePinPassphraseProvider:
        type: string
        description: >-
               The passphrase provider that may be used to obtain the PIN for the trust store used with OIDC providers. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
      description:
        type: string
        description: >-
               A description for this Web Application Extension
      oidcClientSecretPassphraseProvider:
        type: string
        description: >-
               A passphrase provider that may be used to obtain the client secret to use when authenticating to the OpenID Connect provider.
      oidcClientSecret:
        type: string
        description: >-
               The client secret to use when authenticating to the OpenID Connect provider.
      temporaryDirectory:
        type: string
        description: >-
               Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled JSP files.
      oidcIssuerURL:
        type: string
        description: >-
               The issuer URL of the OpenID Connect provider.
      trustStorePinPassphraseProvider:
        type: string
        description: >-
               The passphrase provider that may be used to obtain the PIN for the trust store used with managed LDAP servers. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
      ssoEnabled:
        type: boolean
        description: >-
               Indicates that SSO login into the Administrative Console is enabled.
      trustStoreFile:
        type: string
        description: >-
               Specifies the path to the truststore file, which is used by this application to establish trust of managed servers.
      documentRootDirectory:
        type: string
        description: >-
               Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application Extension. The path must exist, and it must be a directory.
      oidcTrustAll:
        type: boolean
        description: >-
               Controls whether or not this application will always trust any certificate that is presented to it, regardless of its contents. This property should only be set to true for testing purposes.
      logFile:
        type: string
        description: >-
               The path to the log file for the web application.
      warFile:
        type: string
        description: >-
               Specifies the path to a standard web application archive (WAR) file.
      trustStoreType:
        type: string
        description: >-
               Specifies the format for the data in the trust store file.
      oidcTrustStoreType:
        type: string
        description: >-
               Specifies the format for the data in the OIDC trust store file.
      deploymentDescriptorFile:
        type: string
        description: >-
               Specifies the path to the deployment descriptor file when used with document-root-directory.

  trusted-certificate-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/trusted-certificate-response'
    required:
    - schemas
    - totalResults
  add-trusted-certificate-request:
    allOf:
    - type: object
      properties:
        certificateName:
          type: string
          description: >-
              Name of the new Trusted Certificate
    - $ref: '#/definitions/trusted-certificate-properties'
    required:
    - certificateName
  trusted-certificate-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Trusted Certificate
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/trusted-certificate-properties'
    required:
    - id
    - schemas
  trusted-certificate-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/trusted-certificate-response'
  trusted-certificate-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:trusted-certificate"
      certificate:
        type: string
        description: >-
               The PEM-encoded X.509v3 certificate.

  search-entry-criteria-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/search-entry-criteria-response'
    required:
    - schemas
    - totalResults
  add-search-entry-criteria-request:
    allOf:
    - type: object
      properties:
        criteriaName:
          type: string
          description: >-
              Name of the new Search Entry Criteria
    - $ref: '#/definitions/search-entry-criteria-properties'
    required:
    - criteriaName
  search-entry-criteria-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Search Entry Criteria
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/search-entry-criteria-properties'
    required:
    - id
    - schemas
  search-entry-criteria-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/search-entry-criteria-response'
  search-entry-criteria-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:simple"
          - "urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:aggregate"
          - "urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Search Entry Criteria.
      anyIncludedEntryControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that may be present in search result entries included in this Simple Search Entry Criteria. If any control OIDs are provided, then the entry must contain at least one of those controls.
      notAllIncludedEntryControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that should not be present in search result entries included in this Simple Search Entry Criteria. If any control OIDs are provided, then the entry must not contain at least one of those controls (that is, it may contain zero or more of those controls, but not all of them).
      notAllIncludedSearchEntryCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a search entry criteria object that should not match the associated search result entry in order to match the aggregate search entry criteria. If one or more not-all-included search entry criteria objects are provided, then a search result entry must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate search entry criteria.
      notAllIncludedEntryFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that should not match search result entries included in this Simple Search Entry Criteria. Note that this matching will be performed against the entry that is actually returned to the client and may not reflect the complete entry stored in the server. If any filters are provided, then the entry must not match at least one of those filters (that is, the entry may match zero or more of those filters, but not of all of them).
      requestCriteria:
        type: string
        description: >-
               Specifies a request criteria object that must match the associated request for entries included in this Simple Search Entry Criteria. of them.
      anyIncludedEntryGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which the user associated with the entry may be a member to be included in this Simple Search Entry Criteria. If any group DNs are provided, then the entry must be a member of at least one of them.
      allIncludedEntryControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that must be present in search result entries included in this Simple Search Entry Criteria. If any control OIDs are provided, then the entry must contain all of those controls.
      description:
        type: string
        description: >-
               A description for this Search Entry Criteria
      excludedEntryBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies a base DN below which entries included in this Simple Search Entry Criteria may not exist.
      noneIncludedEntryGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which the user associated with the entry must not be a member to be included in this Simple Search Entry Criteria. If any group DNs are provided, then the entry must not be a member of any of them.
      noneIncludedSearchEntryCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a search entry criteria object that must not match the associated search result entry in order to match the aggregate search entry criteria. If one or more none-included search entry criteria objects are provided, then a search result entry must not match any of them in order to match the aggregate search entry criteria.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Search Entry Criteria. Each configuration property should be given in the form 'name=value'.
      noneIncludedEntryFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that must not match search result entries included in this Simple Search Entry Criteria. Note that this matching will be performed against the entry that is actually returned to the client and may not reflect the complete entry stored in the server. If any filters are provided, then the entry must not match any of those filters.
      allIncludedEntryGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which the user associated with the entry must be a member to be included in this Simple Search Entry Criteria. If any group DNs are provided, then the entry must be a member of all of them.
      includedEntryBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies a base DN below which entries included in this Simple Search Entry Criteria may exist.
      allIncludedSearchEntryCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a search entry criteria object that must match the associated search result entry in order to match the aggregate search entry criteria. If one or more all-included search entry criteria objects are provided, then a search result entry must match all of them in order to match the aggregate search entry criteria.
      anyIncludedSearchEntryCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a search entry criteria object that may match the associated search result entry in order to match the aggregate search entry criteria. If one or more any-included search entry criteria objects are provided, then a search result entry must match at least one of them in order to match the aggregate search entry criteria.
      allIncludedEntryFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that must match search result entries included in this Simple Search Entry Criteria. Note that this matching will be performed against the entry that is actually returned to the client and may not reflect the complete entry stored in the server. If any filters are provided, then the returned entry must match all of those filters.
      anyIncludedEntryFilter:
        type: array
        items:
          type: string
        description: >-
               Specifies a search filter that may match search result entries included in this Simple Search Entry Criteria. Note that this matching will be performed against the entry that is actually returned to the client and may not reflect the complete entry stored in the server. If any filters are provided, then the entry must match at least one of those filters.
      notAllIncludedEntryGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which the user associated with the entry should not be a member to be included in this Simple Search Entry Criteria. If any group DNs are provided, then the entry must not be a member of at least one of them (that is, the entry may be a member of zero or more of the specified groups, but not of all of them).
      noneIncludedEntryControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that must not be present in search result entries included in this Simple Search Entry Criteria. If any control OIDs are provided, then the entry must not contain any of those controls.

  failure-lockout-action-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/failure-lockout-action-response'
    required:
    - schemas
    - totalResults
  add-failure-lockout-action-request:
    allOf:
    - type: object
      properties:
        actionName:
          type: string
          description: >-
              Name of the new Failure Lockout Action
    - $ref: '#/definitions/failure-lockout-action-properties'
    required:
    - actionName
  failure-lockout-action-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Failure Lockout Action
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/failure-lockout-action-properties'
    required:
    - id
    - schemas
  failure-lockout-action-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/failure-lockout-action-response'
  failure-lockout-action-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:delay-bind-response"
          - "urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:no-operation"
          - "urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:lock-account"
      delay:
        type: string
        description: >-
               The length of time to delay the bind response for accounts with too many failed authentication attempts.
      generateAccountStatusNotification:
        type: boolean
        description: >-
               Indicates whether to generate an account status notification for cases in which a bind response is delayed because of failure lockout.
      allowBlockingDelay:
        type: boolean
        description: >-
               Indicates whether to delay the response for authentication attempts even if that delay may block the thread being used to process the attempt.
      description:
        type: string
        description: >-
               A description for this Failure Lockout Action

  certificate-mapper-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/certificate-mapper-response'
    required:
    - schemas
    - totalResults
  add-certificate-mapper-request:
    allOf:
    - type: object
      properties:
        mapperName:
          type: string
          description: >-
              Name of the new Certificate Mapper
    - $ref: '#/definitions/certificate-mapper-properties'
    required:
    - mapperName
  certificate-mapper-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Certificate Mapper
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/certificate-mapper-properties'
    required:
    - id
    - schemas
  certificate-mapper-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/certificate-mapper-response'
  certificate-mapper-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-equals-dn"
          - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-dn-to-user-attribute"
          - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-attribute-to-user-attribute"
          - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:fingerprint"
          - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Certificate Mapper.
      fingerprintAttribute:
        type: string
        description: >-
               Specifies the attribute in which to look for the fingerprint.
      fingerprintAlgorithm:
        type: string
        enum:
        - "md5"
        - "sha1"
        - "sha256"
        description: >-
               Specifies the name of the digest algorithm to compute the fingerprint of client certificates.
      description:
        type: string
        description: >-
               A description for this Certificate Mapper
      subjectAttributeMapping:
        type: array
        items:
          type: string
        description: >-
               Specifies a mapping between certificate attributes and user attributes.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Certificate Mapper.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Certificate Mapper. Each configuration property should be given in the form 'name=value'.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Certificate Mapper is enabled.
      subjectAttribute:
        type: string
        description: >-
               Specifies the name or OID of the attribute whose value should exactly match the certificate subject DN.
      userBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the base DNs that should be used when performing searches to map the client certificate to a user entry.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Certificate Mapper. Each configuration property should be given in the form 'name=value'.

  log-publisher-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/log-publisher-response'
    required:
    - schemas
    - totalResults
  add-log-publisher-request:
    allOf:
    - type: object
      properties:
        publisherName:
          type: string
          description: >-
              Name of the new Log Publisher
    - $ref: '#/definitions/log-publisher-properties'
    required:
    - publisherName
  log-publisher-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Log Publisher
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/log-publisher-properties'
    required:
    - id
    - schemas
  log-publisher-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/log-publisher-response'
  log-publisher-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-audit"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:operation-timing-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-http-operation"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:admin-alert-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-trace"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:common-log-file-http-operation"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-audit"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-debug"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:detailed-http-operation"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:debug-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-http-operation"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-audit"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-audit"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-http-operation"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-access"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-http-operation"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-error"
          - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-http-operation"
      suppressedResponseHeaderName:
        type: array
        items:
          type: string
        description: >-
               Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.
      idTokenValidatorMessageType:
        type: array
        items:
          type: string
          enum:
          - "external-server-request"
          - "external-server-response"
          - "validation"
          - "warning"
          - "error"
        description: >-
               Specifies the ID token validator message types that can be logged.
      logTableName:
        type: string
        description: >-
               The table name to log entries to the database server.
      logSearchReferences:
        type: boolean
        description: >-
               Indicates whether to log information about search result references sent to the client.
      suppressedRequestHeaderName:
        type: array
        items:
          type: string
        description: >-
               Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.
      logResponseHeaders:
        type: string
        enum:
        - "none"
        - "header-names"
        - "header-names-and-values"
        description: >-
               Indicates whether response log messages should include information about HTTP headers included in the response.
      suppressReplicationOperations:
        type: boolean
        description: >-
               Indicates whether access messages that are generated by replication operations should be suppressed.
      logFieldMapping:
        type: string
        description: >-
               The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.
      httpMessageType:
        type: array
        items:
          type: string
          enum:
          - "request"
          - "response"
        description: >-
               Specifies the HTTP message types which can be logged.
      logDisconnects:
        type: boolean
        description: >-
               Indicates whether to log information about connections that have been closed by the client or terminated by the server.
      overrideSeverity:
        type: array
        items:
          type: string
        description: >-
               Specifies the override severity levels for the logger based on the category of the messages.
      rotationPolicy:
        type: array
        items:
          type: string
        description: >-
               The rotation policy to use for the Third Party File Based Access Log Publisher .
      generifyMessageStringsWhenPossible:
        type: boolean
        description: >-
               Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
      syslogMessageApplicationName:
        type: string
        description: >-
               The application name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.
      includeRequestControls:
        type: boolean
        description: >-
               Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
      correlateRequestsAndResults:
        type: boolean
        description: >-
               Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
      obscureAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.
      autoFlush:
        type: boolean
        description: >-
               Specifies whether to flush the writer after every log record.
      includeAddAttributeNames:
        type: boolean
        description: >-
               Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
      directoryRESTAPIMessageType:
        type: array
        items:
          type: string
          enum:
          - "error"
        description: >-
               Specifies the Directory REST API message types which can be logged.
      signLog:
        type: boolean
        description: >-
               Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
      server:
        type: string
        description: >-
               The JDBC-based Database Server to use for a connection.
      includeRequestDetailsInIntermediateResponseMessages:
        type: boolean
        description: >-
               Indicates whether log messages for intermediate responses should include information about the associated operation request.
      syslogSeverity:
        type: string
        enum:
        - "emergency"
        - "alert"
        - "critical"
        - "error"
        - "warning"
        - "notice"
        - "informational"
        - "debug"
        description: >-
               The syslog severity to use for the messages that are logged by this Syslog JSON Audit Log Publisher.
      encryptionSettingsDefinitionID:
        type: string
        description: >-
               Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
      encryptLog:
        type: boolean
        description: >-
               Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
      serverPort:
        type: integer
        description: >-
               Specifies the port number of the syslogd host to log to.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Log Publisher is enabled for use.
      includeRequesterDN:
        type: boolean
        description: >-
               Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
      retentionPolicy:
        type: array
        items:
          type: string
        description: >-
               The retention policy to use for the Third Party File Based Access Log Publisher .
      loggingErrorBehavior:
        type: string
        enum:
        - "standard-error"
        - "lockdown-mode"
        description: >-
               Specifies the behavior that the server should exhibit if an error occurs during logging processing.
      minIncludedPhaseTimeNanos:
        type: integer
        description: >-
               The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.
      includeRequestDetailsInSearchReferenceMessages:
        type: boolean
        description: >-
               Indicates whether log messages for search result references should include information about the associated search request.
      defaultOmitMethodEntryArguments:
        type: boolean
        description: >-
               Indicates whether to include method arguments in debug messages logged by default.
      includeIntermediateClientRequestControl:
        type: boolean
        description: >-
               Indicates whether to include information about any intermediate client request control that may have been included in the request.
      logResponseCookieNames:
        type: boolean
        description: >-
               Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
      resultCriteria:
        type: string
        description: >-
               Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
      logAssuranceCompleted:
        type: boolean
        description: >-
               Indicates whether to log information about the result of replication assurance processing.
      compressionMechanism:
        type: string
        enum:
        - "none"
        - "gzip"
        description: >-
               Specifies the type of compression (if any) to use for log files that are written.
      logRequestHeaders:
        type: string
        enum:
        - "none"
        - "header-names"
        - "header-names-and-values"
        description: >-
               Indicates whether request log messages should include information about HTTP headers included in the request.
      defaultSeverity:
        type: array
        items:
          type: string
          enum:
          - "all"
          - "none"
          - "fatal-error"
          - "info"
          - "mild-error"
          - "mild-warning"
          - "notice"
          - "severe-error"
          - "severe-warning"
          - "debug"
        description: >-
               Specifies the default severity levels for the logger.
      searchReferenceCriteria:
        type: string
        description: >-
               Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
      includeResponseControls:
        type: boolean
        description: >-
               Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
      logRequests:
        type: boolean
        description: >-
               Indicates whether to log information about requests received from clients.
      maxStringLength:
        type: integer
        description: >-
               Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
      logIntermediateResponses:
        type: boolean
        description: >-
               Indicates whether to log information about intermediate responses sent to the client.
      includeResultCodeNames:
        type: boolean
        description: >-
               Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
      writeMultiLineMessages:
        type: boolean
        description: >-
               Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
      logSecurityNegotiation:
        type: boolean
        description: >-
               Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
      defaultIncludeThrowableCause:
        type: boolean
        description: >-
               Indicates whether to include the cause of exceptions in exception thrown and caught messages logged by default.
      suppressInternalOperations:
        type: boolean
        description: >-
               Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
      outputLocation:
        type: string
        enum:
        - "standard-output"
        - "standard-error"
        description: >-
               Specifies the output stream to which JSON-formatted error log messages should be written.
      logRequestAuthorizationType:
        type: boolean
        description: >-
               Indicates whether to log the type of credentials given if an "Authorization" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the "Authorization" header.
      obscureSensitiveContent:
        type: boolean
        description: >-
               Indicates whether the resulting log file should attempt to obscure content that may be considered sensitive. This primarily includes the credentials for bind requests, the values of password modify extended requests and responses, and the values of any attributes specified in the obscure-attribute property. Note that the use of this option does not guarantee no sensitive information will be exposed, so the log output should still be carefully guarded.
      includeModifyAttributeNames:
        type: boolean
        description: >-
               Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
      rotationListener:
        type: array
        items:
          type: string
        description: >-
               A listener that should be notified whenever a log file is rotated out of service.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.
      serverHostName:
        type: string
        description: >-
               Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.
      defaultThrowableStackFrames:
        type: integer
        description: >-
               Indicates the number of stack frames to include in the stack trace for method entry and exception thrown messages.
      includeOperationPurposeRequestControl:
        type: boolean
        description: >-
               Indicates whether to include information about any operation purpose request control that may have been included in the request.
      consentMessageType:
        type: array
        items:
          type: string
          enum:
          - "consent-created"
          - "consent-updated"
          - "consent-deleted"
          - "consent-retrieved"
          - "consent-search"
          - "definition-created"
          - "definition-updated"
          - "definition-deleted"
          - "definition-retrieved"
          - "definition-search"
          - "localization-created"
          - "localization-updated"
          - "localization-deleted"
          - "localization-retrieved"
          - "localization-search"
          - "error"
          - "audit"
        description: >-
               Specifies the consent message types that can be logged.
      includeReplicationChangeID:
        type: boolean
        description: >-
               Indicates whether to log information about the replication change ID.
      includeThreadID:
        type: boolean
        description: >-
               Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
      debugMessageType:
        type: array
        items:
          type: string
          enum:
          - "http-full-request-and-response"
          - "ldap-external-server-request"
          - "server-sdk-extension"
          - "store-adapter-mapping"
          - "store-adapter-processing"
          - "access-token-validator-request-and-response"
          - "access-token-validator-processing"
          - "id-token-validator-request-and-response"
          - "id-token-validator-processing"
          - "consent-service-request-and-response"
          - "gateway-request-and-response"
          - "policy-request-and-response"
        description: >-
               Specifies the debug message types which can be logged. Note that enabling these may result in sensitive information being logged.
      requestCriteria:
        type: string
        description: >-
               Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
      includePathPattern:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of HTTP request URL paths to determine whether log messages are included for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).
      includeStartupID:
        type: boolean
        description: >-
               Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
      connectionCriteria:
        type: string
        description: >-
               Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
      includeInstanceName:
        type: boolean
        description: >-
               Indicates whether log messages should include the instance name for the Directory Server.
      extensionMessageType:
        type: array
        items:
          type: string
          enum:
          - "error"
          - "warning"
          - "notice"
          - "info"
        description: >-
               Specifies the Server SDK extension message types that can be logged.
      logRequestProtocol:
        type: boolean
        description: >-
               Indicates whether request log messages should include information about the HTTP version specified in the request.
      defaultOmitMethodReturnValue:
        type: boolean
        description: >-
               Indicates whether to include the return value in debug messages logged by default.
      minIncludedOperationProcessingTime:
        type: string
        description: >-
               The minimum processing time (i.e., "etime") for operations that should be logged by this Operation Timing Access Log Publisher
      logFile:
        type: string
        description: >-
               The file name to use for the log files generated by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
      logFilePermissions:
        type: string
        description: >-
               The UNIX permissions of the log files created by this Third Party File Based Access Log Publisher.
      timestampPrecision:
        type: string
        enum:
        - "seconds"
        - "milliseconds"
        description: >-
               Specifies the smallest time unit to be included in timestamps.
      logRedirectURI:
        type: boolean
        description: >-
               Indicates whether the redirect URI (i.e., the value of the "Location" header from responses) should be included in response log messages.
      suppressedRequestParameterName:
        type: array
        items:
          type: string
        description: >-
               Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.
      logRequestParameters:
        type: string
        enum:
        - "none"
        - "parameter-names"
        - "parameter-names-and-values"
        description: >-
               Indicates what (if any) information about request parameters should be included in request log messages. Note that this will only be used for requests with a method other than GET, since GET request parameters will be included in the request URL.
      logConnects:
        type: boolean
        description: >-
               Indicates whether to log information about connections established to the server.
      defaultDebugCategory:
        type: array
        items:
          type: string
          enum:
          - "caught"
          - "constructor"
          - "data"
          - "database-access"
          - "enter"
          - "exit"
          - "message"
          - "protocol"
          - "thrown"
        description: >-
               The debug message categories to be logged when none of the defined targets match the message.
      includeProductName:
        type: boolean
        description: >-
               Indicates whether log messages should include the product name for the Directory Server.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party File Based Access Log Publisher.
      includeRequestDetailsInSearchEntryMessages:
        type: boolean
        description: >-
               Indicates whether log messages for search result entries should include information about the associated search request.
      logSearchEntries:
        type: boolean
        description: >-
               Indicates whether to log information about search result entries sent to the client.
      syslogMessageHostName:
        type: string
        description: >-
               The local host name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.
      excludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of any attribute types that should be excluded from the audit log.
      description:
        type: string
        description: >-
               A description for this Log Publisher
      softDeleteEntryAuditBehavior:
        type: string
        enum:
        - "included"
        - "excluded"
        description: >-
               Specifies the audit behavior for delete and modify operations on soft-deleted entries.
      includeRequesterIPAddress:
        type: boolean
        description: >-
               Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
      searchEntryCriteria:
        type: string
        description: >-
               Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
      excludePathPattern:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of HTTP request URL paths to determine whether log messages are excluded for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).
      asynchronous:
        type: boolean
        description: >-
               Indicates whether the Syslog Based Error Log Publisher will publish records asynchronously.
      timeInterval:
        type: string
        description: >-
               Specifies the interval at which to check whether the log files need to be rotated.
      logRequestCookieNames:
        type: boolean
        description: >-
               Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
      scimMessageType:
        type: array
        items:
          type: string
          enum:
          - "request"
          - "result"
          - "internal-request"
          - "internal-result"
          - "error"
        description: >-
               Specifies the SCIM message types which can be logged.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.
      includeExtendedSearchRequestDetails:
        type: boolean
        description: >-
               Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
      queueSize:
        type: integer
        description: >-
               The maximum number of log records that can be stored in the asynchronous queue.
      accessTokenValidatorMessageType:
        type: array
        items:
          type: string
          enum:
          - "subject-lookup"
          - "external-server-request"
          - "external-server-response"
          - "validation"
          - "error"
        description: >-
               Specifies the access token validator message types that can be logged.
      includeSearchEntryAttributeNames:
        type: boolean
        description: >-
               Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
      syslogFacility:
        type: string
        enum:
        - "user-level-messages"
        - "system-daemons"
        - "security-and-authorization"
        - "security-and-authorization-alternative"
        - "log-audit"
        - "log-alert"
        - "local-use-0"
        - "local-use-1"
        - "local-use-2"
        - "local-use-3"
        - "local-use-4"
        - "local-use-5"
        - "local-use-6"
        - "local-use-7"
        - "kernel-messages"
        - "mail-system"
        - "syslogd-internal-messages"
        - "line-printer"
        - "network-news"
        - "uucp"
        - "clock-daemon"
        - "ftp-daemon"
        - "ntp-daemon"
        - "clock-daemon-alternative"
        description: >-
               The syslog facility to use for the messages that are logged by this Syslog JSON Audit Log Publisher.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Access Log Publisher.
      debugACIEnabled:
        type: boolean
        description: >-
               Indicates whether to include debugging information about ACIs being used by the operations being logged.
      syslogExternalServer:
        type: array
        items:
          type: string
        description: >-
               The syslog server to which messages should be sent.
      defaultDebugLevel:
        type: string
        enum:
        - "disabled"
        - "error"
        - "warning"
        - "info"
        - "verbose"
        - "all"
        description: >-
               The lowest severity level of debug messages to log when none of the defined targets match the message.
      logClientCertificates:
        type: boolean
        description: >-
               Indicates whether to log information about any client certificates presented to the server.
      logResults:
        type: boolean
        description: >-
               Indicates whether to log information about the results of client requests.
      includeRequestDetailsInResultMessages:
        type: boolean
        description: >-
               Indicates whether log messages for operation results should include information about both the request and the result.
      logFieldBehavior:
        type: string
        description: >-
               The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
      append:
        type: boolean
        description: >-
               Specifies whether to append to existing log files.
      useReversibleForm:
        type: boolean
        description: >-
               Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.
      bufferSize:
        type: string
        description: >-
               Specifies the log file buffer size.

  debug-target-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/debug-target-response'
    required:
    - schemas
    - totalResults
  add-debug-target-request:
    allOf:
    - type: object
      properties:
        targetName:
          type: string
          description: >-
              Name of the new Debug Target
    - $ref: '#/definitions/debug-target-properties'
    required:
    - targetName
  debug-target-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Debug Target
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/debug-target-properties'
    required:
    - id
    - schemas
  debug-target-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/debug-target-response'
  debug-target-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:debug-target"
      omitMethodEntryArguments:
        type: boolean
        description: >-
               Specifies the property to indicate whether to include method arguments in debug messages.
      debugCategory:
        type: array
        items:
          type: string
          enum:
          - "caught"
          - "constructor"
          - "data"
          - "database-access"
          - "enter"
          - "exit"
          - "message"
          - "protocol"
          - "thrown"
        description: >-
               Specifies the debug message categories to be logged.
      omitMethodReturnValue:
        type: boolean
        description: >-
               Specifies the property to indicate whether to include the return value in debug messages.
      includeThrowableCause:
        type: boolean
        description: >-
               Specifies the property to indicate whether to include the cause of exceptions in exception thrown and caught messages.
      description:
        type: string
        description: >-
               A description for this Debug Target
      throwableStackFrames:
        type: integer
        description: >-
               Specifies the property to indicate the number of stack frames to include in the stack trace for method entry and exception thrown messages.
      debugScope:
        type: string
        description: >-
               Specifies the fully-qualified Java package, class, or method affected by the settings in this target definition. Use the number character (#) to separate the class name and the method name (that is, com.unboundid.directory.server.core.DirectoryServer#startUp).
      debugLevel:
        type: string
        enum:
        - "disabled"
        - "error"
        - "warning"
        - "info"
        - "verbose"
        - "all"
        description: >-
               Specifies the lowest severity level of debug messages to log.

  replication-assurance-policy-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/replication-assurance-policy-response'
    required:
    - schemas
    - totalResults
  add-replication-assurance-policy-request:
    allOf:
    - type: object
      properties:
        policyName:
          type: string
          description: >-
              Name of the new Replication Assurance Policy
    - $ref: '#/definitions/replication-assurance-policy-properties'
    required:
    - policyName
  replication-assurance-policy-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Replication Assurance Policy
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/replication-assurance-policy-properties'
    required:
    - id
    - schemas
  replication-assurance-policy-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/replication-assurance-policy-response'
  replication-assurance-policy-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:replication-assurance-policy"
      requestCriteria:
        type: string
        description: >-
               Specifies a request criteria used to indicate which operations from clients matching this criteria use this policy. If both a connection criteria and a request criteria are specified for a policy, then both must match an operation for the policy to be assigned.
      evaluationOrderIndex:
        type: integer
        description: >-
               When multiple Replication Assurance Policies are defined, this property determines the evaluation order for finding a Replication Assurance Policy match against an operation. Policies are evaluated based on this index from least to greatest. Values of this property must be unique but not necessarily contiguous.
      description:
        type: string
        description: >-
               Description of the Replication Assurance Policy.
      localLevel:
        type: string
        enum:
        - "none"
        - "received-any-server"
        - "processed-all-servers"
        description: >-
               Specifies the assurance level used to replicate to local servers. A local server is defined as one with the same value for the location setting in the global configuration.  The local-level must be set to an assurance level at least as strict as the remote-level. In other words, if remote-level is set to "received-any-remote-location" or "received-all-remote-locations", then local-level must be either "received-any-server" or "processed-all-servers". If remote-level is "processed-all-remote-servers", then local-level must be "processed-all-servers".
      enabled:
        type: boolean
        description: >-
               Indicates whether this Replication Assurance Policy is enabled for use in the server. If a Replication Assurance Policy is disabled, then no new operations will be associated with it.
      timeout:
        type: string
        description: >-
               Specifies the maximum length of time to wait for the replication assurance requirements to be met before timing out and replying to the client.
      connectionCriteria:
        type: string
        description: >-
               Specifies a connection criteria used to indicate which operations from clients matching this criteria use this policy. If both a connection criteria and a request criteria are specified for a policy, then both must match an operation for the policy to be assigned.
      remoteLevel:
        type: string
        enum:
        - "none"
        - "received-any-remote-location"
        - "received-all-remote-locations"
        - "processed-all-remote-servers"
        description: >-
               Specifies the assurance level used to replicate to remote servers. A remote server is defined as one with a different value for the location setting in the global configuration.

  key-manager-provider-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/key-manager-provider-response'
    required:
    - schemas
    - totalResults
  add-key-manager-provider-request:
    allOf:
    - type: object
      properties:
        providerName:
          type: string
          description: >-
              Name of the new Key Manager Provider
    - $ref: '#/definitions/key-manager-provider-properties'
    required:
    - providerName
  key-manager-provider-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Key Manager Provider
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/key-manager-provider-properties'
    required:
    - id
    - schemas
  key-manager-provider-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/key-manager-provider-response'
  key-manager-provider-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:file-based"
          - "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:custom"
          - "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:pkcs11"
          - "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:third-party"
      keyStoreType:
        type: string
        description: >-
               Specifies the format for the data in the key store file.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Key Manager Provider.
      keyStoreFile:
        type: string
        description: >-
               Specifies the path to the file that contains the private key information. This may be an absolute path, or a path that is relative to the Directory Server instance root.
      description:
        type: string
        description: >-
               A description for this Key Manager Provider
      privateKeyPinFile:
        type: string
        description: >-
               Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Key Manager Provider is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Key Manager Provider. Each configuration property should be given in the form 'name=value'.
      keyStorePin:
        type: string
        description: >-
               Specifies the PIN needed to access the File Based Key Manager Provider.
      privateKeyPinPassphraseProvider:
        type: string
        description: >-
               The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.
      keyStorePinPassphraseProvider:
        type: string
        description: >-
               The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider.
      keyStorePinFile:
        type: string
        description: >-
               Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider.
      pkcs11ProviderClass:
        type: string
        description: >-
               The fully-qualified name of the Java security provider class that implements support for interacting with PKCS #11 tokens.
      pkcs11KeyStoreType:
        type: string
        description: >-
               The key store type to use when obtaining an instance of a key store for interacting with a PKCS #11 token.
      privateKeyPin:
        type: string
        description: >-
               Specifies the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.
      pkcs11ProviderConfigurationFile:
        type: string
        description: >-
               The path to the file to use to configure the security provider that implements support for interacting with PKCS #11 tokens.

  external-server-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/external-server-response'
    required:
    - schemas
    - totalResults
  add-external-server-request:
    allOf:
    - type: object
      properties:
        serverName:
          type: string
          description: >-
              Name of the new External Server
    - $ref: '#/definitions/external-server-properties'
    required:
    - serverName
  external-server-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the External Server
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/external-server-properties'
    required:
    - id
    - schemas
  external-server-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/external-server-response'
  external-server-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:external-server:smtp"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-ds"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-ds"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:active-directory"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:jdbc"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:syslog"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-proxy-server"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:http-proxy"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-proxy-server"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:opendj"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:ldap"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-one-http"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:http"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:oracle-unified-directory"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:conjur"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:amazon-aws"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:vault"
      maxConnectionAge:
        type: string
        description: >-
               Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
      databaseName:
        type: string
        description: >-
               Specifies which database to connect to. This is ignored if jdbc-driver-url is specified.
      awsAccessKeyID:
        type: string
        description: >-
               The access key ID that will be used if authentication should use an access key. If this is provided, then an aws-secret-access-key must also be provided.
      serverHostName:
        type: string
        description: >-
               The host name of the smtp server.
      transactionIsolationLevel:
        type: string
        enum:
        - "read-committed"
        - "read-uncommitted"
        - "repeatable-read"
        - "serializable"
        description: >-
               This property specifies the default transaction isolation level for connections to this JDBC External Server.
      password:
        type: string
        description: >-
               The login password for the specified user name. Both username and password must be supplied if this attribute is set.
      maxResponseSize:
        type: string
        description: >-
               Specifies the maximum response size that should be supported for messages received from the LDAP external server.
      connectionSecurity:
        type: string
        enum:
        - "none"
        - "ssl"
        - "starttls"
        description: >-
               The mechanism to use to secure communication with the directory server.
      healthCheckConnectTimeout:
        type: string
        description: >-
               Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
      connectTimeout:
        type: string
        description: >-
               Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
      jdbcConnectionProperties:
        type: array
        items:
          type: string
        description: >-
               Specifies the connection properties for the JDBC datasource.
      hostnameVerificationMethod:
        type: string
        enum:
        - "allow-all"
        - "strict"
        description: >-
               The mechanism for checking if the hostname in the PingOne ID Token Validator's base-url value matches the name(s) stored inside the X.509 certificate presented by PingOne.
      vaultAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Vault server.
      trustStoreType:
        type: string
        description: >-
               The store type for the specified trust store file. The value should likely be one of "JKS", "PKCS12", or "BCFKS".
      basicAuthenticationPassphraseProvider:
        type: string
        description: >-
               A passphrase provider that provides access to the password to use to authenticate to the HTTP Proxy External Server.
      responseTimeout:
        type: string
        description: >-
               Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to PingOne.
      conjurAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Conjur server.
      trustManagerProvider:
        type: string
        description: >-
               The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
      initialConnections:
        type: integer
        description: >-
               The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
      useAdministrativeOperationControl:
        type: boolean
        description: >-
               Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.
      sslCertNickname:
        type: string
        description: >-
               The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
      defunctConnectionResultCode:
        type: array
        items:
          type: string
          enum:
          - "success"
          - "operations-error"
          - "protocol-error"
          - "time-limit-exceeded"
          - "size-limit-exceeded"
          - "compare-false"
          - "compare-true"
          - "auth-method-not-supported"
          - "strong-auth-required"
          - "referral"
          - "admin-limit-exceeded"
          - "unavailable-critical-extension"
          - "confidentiality-required"
          - "sasl-bind-in-progress"
          - "no-such-attribute"
          - "undefined-attribute-type"
          - "inappropriate-matching"
          - "constraint-violation"
          - "attribute-or-value-exists"
          - "invalid-attribute-syntax"
          - "no-such-object"
          - "alias-problem"
          - "invalid-dn-syntax"
          - "alias-dereferencing-problem"
          - "inappropriate-authentication"
          - "invalid-credentials"
          - "insufficient-access-rights"
          - "busy"
          - "unavailable"
          - "unwilling-to-perform"
          - "loop-detect"
          - "sort-control-missing"
          - "offset-range-error"
          - "naming-violation"
          - "object-class-violation"
          - "not-allowed-on-nonleaf"
          - "not-allowed-on-rdn"
          - "entry-already-exists"
          - "object-class-mods-prohibited"
          - "affects-multiple-dsas"
          - "virtual-list-view-error"
          - "other"
          - "server-down"
          - "local-error"
          - "encoding-error"
          - "decoding-error"
          - "timeout"
          - "auth-unknown"
          - "filter-error"
          - "user-canceled"
          - "param-error"
          - "no-memory"
          - "connect-error"
          - "not-supported"
          - "control-not-found"
          - "no-results-returned"
          - "more-results-to-return"
          - "client-loop"
          - "referral-limit-exceeded"
          - "canceled"
          - "no-such-operation"
          - "too-late"
          - "cannot-cancel"
          - "assertion-failed"
          - "authorization-denied"
          - "no-operation"
          - "interactive-transaction-aborted"
        description: >-
               Specifies the operation result code values that should cause the associated connection should be considered defunct. If an operation fails with one of these result codes, then it will be terminated and an attempt will be made to establish a new connection in its place.
      minExpiredConnectionDisconnectInterval:
        type: string
        description: >-
               Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
      bindDN:
        type: string
        description: >-
               The DN to use to bind to the target LDAP server if simple authentication is required.
      authenticationMethod:
        type: string
        enum:
        - "none"
        - "simple"
        - "external"
        - "inter-server"
        description: >-
               The mechanism to use to authenticate to the target server.
      validationQueryTimeout:
        type: string
        description: >-
               Specifies the amount of time to wait for a response from the database when executing the validation query, if one is set. If the timeout is exceeded, the Directory Server will drop the connection and obtain a new one. A value of zero indicates no timeout.
      conjurAccountName:
        type: string
        description: >-
               The name of the account with which the desired secrets are associated.
      validationQuery:
        type: string
        description: >-
               The SQL query that will be used to validate connections to the database before making them available to the Directory Server.
      smtpTimeout:
        type: string
        description: >-
               Specifies the maximum length of time that a connection or attempted connection to a SMTP server may take.
      vaultServerBaseURI:
        type: array
        items:
          type: string
        description: >-
               The base URL needed to access the Vault server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://vault.example.com:8200/".
      description:
        type: string
        description: >-
               A description for this External Server
      serverPort:
        type: integer
        description: >-
               The port number where the smtp server listens for requests.
      passphraseProvider:
        type: string
        description: >-
               The passphrase provider to use to obtain the login password for the specified user.
      conjurServerBaseURI:
        type: array
        items:
          type: string
        description: >-
               The base URL needed to access the CyberArk Conjur server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://conjur.example.com:8443/".
      trustStoreFile:
        type: string
        description: >-
               The path to a file containing the information needed to trust the certificate presented by the Conjur servers.
      keyManagerProvider:
        type: string
        description: >-
               The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
      basicAuthenticationUsername:
        type: string
        description: >-
               The username to use to authenticate to the HTTP Proxy External Server.
      trustStorePin:
        type: string
        description: >-
               The PIN needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
      verifyCredentialsMethod:
        type: string
        enum:
        - "separate-connections"
        - "retain-identity-control"
        - "bind-on-existing-connections"
        description: >-
               The mechanism to use to verify user credentials while ensuring that the ability to process other operations is not impacted by an alternate authorization identity.
      maxConnections:
        type: integer
        description: >-
               The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
      awsSecretAccessKey:
        type: string
        description: >-
               The secret access key that will be used if authentication should use an access key. If this is provided, then an aws-access-key-id must also be provided.
      awsRegionName:
        type: string
        description: >-
               The name of the AWS region containing the resources that will be accessed.
      smtpSecurity:
        type: string
        enum:
        - "none"
        - "starttls"
        - "ssl"
        description: >-
               This property specifies type of connection security to use when connecting to the outgoing mail server.
      jdbcDriverType:
        type: string
        enum:
        - "oraclethin"
        - "oracleoci"
        - "mysql"
        - "db2"
        - "sqlserver"
        - "postgres"
        - "other"
        description: >-
               Specifies a supported database driver type. The driver class will be automatically selected based on this selection. We highly recommend using a JDBC 4 driver that is suitable for the current Java platform.
      smtpConnectionProperties:
        type: array
        items:
          type: string
        description: >-
               Specifies the connection properties for the smtp server.
      userName:
        type: string
        description: >-
               The name of the login account to use when connecting to the smtp server. Both username and password must be supplied if this attribute is set.
      transportMechanism:
        type: string
        enum:
        - "unencrypted-udp"
        - "unencrypted-tcp"
        - "tls-encrypted-tcp"
        description: >-
               The transport mechanism that should be used when communicating with the syslog server.
      baseURL:
        type: string
        description: >-
               The base URL of the external server, optionally including port number, for example "https://externalService:9031".
      abandonOnTimeout:
        type: boolean
        description: >-
               Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
      jdbcDriverURL:
        type: string
        description: >-
               Specify the complete JDBC URL which will be used instead of the automatic URL format. You must select type 'other' for the jdbc-driver-type.
      location:
        type: string
        description: >-
               Specifies the location for the LDAP External Server.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the AWS service.

  dn-map-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/dn-map-response'
    required:
    - schemas
    - totalResults
  add-dn-map-request:
    allOf:
    - type: object
      properties:
        mapName:
          type: string
          description: >-
              Name of the new DN Map
    - $ref: '#/definitions/dn-map-properties'
    required:
    - mapName
  dn-map-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the DN Map
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/dn-map-properties'
    required:
    - id
    - schemas
  dn-map-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/dn-map-response'
  dn-map-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:dn-map"
      fromDNPattern:
        type: string
        description: >-
               Specifies the DN pattern to match when determining whether this map applies to a specific source DN. If the provided bind DN matches this pattern, then the to-dn-pattern will be used to perform the mapping. If the provided bind DN does not match this pattern, then no mapping will be performed.
      toDNPattern:
        type: string
        description: >-
               Specifies a pattern for constructing the DN value using fixed text, DN components matching wild-card values in from-dn-pattern, and attribute values from the source entry.
      description:
        type: string
        description: >-
               A description for this DN Map

  change-subscription-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/change-subscription-handler-response'
    required:
    - schemas
    - totalResults
  add-change-subscription-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new Change Subscription Handler
    - $ref: '#/definitions/change-subscription-handler-properties'
    required:
    - handlerName
  change-subscription-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Change Subscription Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/change-subscription-handler-properties'
    required:
    - id
    - schemas
  change-subscription-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/change-subscription-handler-response'
  change-subscription-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:logging"
          - "urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Change Subscription Handler.
      changeSubscription:
        type: array
        items:
          type: string
        description: >-
               The set of change subscriptions for which this change subscription handler should be notified. If no values are provided then it will be notified for all change subscriptions defined in the server.
      logFile:
        type: string
        description: >-
               Specifies the log file in which the change notification messages will be written.
      description:
        type: string
        description: >-
               A description for this Change Subscription Handler
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Change Subscription Handler.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Change Subscription Handler. Each configuration property should be given in the form 'name=value'.
      enabled:
        type: boolean
        description: >-
               Indicates whether this change subscription handler is enabled within the server.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Change Subscription Handler. Each configuration property should be given in the form 'name=value'.

  obscured-value-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/obscured-value-response'
    required:
    - schemas
    - totalResults
  add-obscured-value-request:
    allOf:
    - type: object
      properties:
        valueName:
          type: string
          description: >-
              Name of the new Obscured Value
    - $ref: '#/definitions/obscured-value-properties'
    required:
    - valueName
  obscured-value-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Obscured Value
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/obscured-value-properties'
    required:
    - id
    - schemas
  obscured-value-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/obscured-value-response'
  obscured-value-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:obscured-value"
      obscuredValue:
        type: string
        description: >-
               The value to be stored in an obscured form.
      description:
        type: string
        description: >-
               A description for this Obscured Value

  crypto-manager-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Crypto Manager
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/crypto-manager-properties'
    required:
    - id
    - schemas
  crypto-manager-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/crypto-manager-response'
  crypto-manager-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:crypto-manager"
      sslCertNickname:
        type: string
        description: >-
               Specifies the nickname (also called the alias) of the certificate that the Crypto Manager should use when performing SSL communication.
      digestAlgorithm:
        type: string
        description: >-
               Specifies the preferred message digest algorithm for the Directory Server.
      macKeyLength:
        type: integer
        description: >-
               Specifies the key length in bits for the preferred MAC algorithm.
      outboundSSLProtocol:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the TLS protocols that will be enabled for outbound connections initiated by the Directory Server.
      cipherTransformation:
        type: string
        description: >-
               Specifies the cipher for the Directory Server using the syntax algorithm/mode/padding.
      keyWrappingTransformation:
        type: string
        description: >-
               The preferred key wrapping transformation for the Directory Server. This value must be the same for all server instances in a replication topology.
      enableSha1CipherSuites:
        type: boolean
        description: >-
               Indicates whether to enable support for TLS cipher suites that use the SHA-1 digest algorithm. The SHA-1 digest algorithm is no longer considered secure and is not recommended for use.
      enableRsaKeyExchangeCipherSuites:
        type: boolean
        description: >-
               Indicates whether to enable support for TLS cipher suites that use the RSA key exchange algorithm. Cipher suites that rely on RSA key exchange are not recommended because they do not support forward secrecy, which means that if the private key is compromised, then any communication negotiated using that private key should also be considered compromised.
      macAlgorithm:
        type: string
        description: >-
               Specifies the preferred MAC algorithm for the Directory Server.
      signingEncryptionSettingsID:
        type: string
        description: >-
               The ID of the encryption settings definition to use for generating digital signatures. If this is not specified, then the server's preferred encryption settings definition will be used.
      outboundSSLCipherSuite:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the TLS cipher suites that will be enabled for outbound connections initiated by the Directory Server.
      sslProtocol:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of TLS protocols that are allowed for use in secure communication.
      sslCipherSuite:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the TLS cipher suites that are allowed for use in secure communication.
      cipherKeyLength:
        type: integer
        description: >-
               Specifies the key length in bits for the preferred cipher.

  monitor-provider-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/monitor-provider-response'
    required:
    - schemas
    - totalResults
  add-monitor-provider-request:
    allOf:
    - type: object
      properties:
        providerName:
          type: string
          description: >-
              Name of the new Monitor Provider
    - $ref: '#/definitions/monitor-provider-properties'
    required:
    - providerName
  monitor-provider-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Monitor Provider
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/monitor-provider-properties'
    required:
    - id
    - schemas
  monitor-provider-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/monitor-provider-response'
  monitor-provider-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:general"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:memory-usage"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:stack-trace"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:disk-space-usage"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:system-info"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:custom"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:active-operations"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:ssl-context"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:client-connection"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:version"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:host-system"
          - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Monitor Provider.
      diskDevices:
        type: array
        items:
          type: string
        description: >-
               Specifies which disk devices to monitor for I/O activity. Should be the device name as displayed by iostat -d.
      systemUtilizationMonitorLogDirectory:
        type: string
        description: >-
               Specifies a relative or absolute path to the directory on the local filesystem containing the log files used by the system utilization monitor. The path must exist, and it must be a writable directory by the server process.
      networkDevices:
        type: array
        items:
          type: string
        description: >-
               Specifies which network interfaces to monitor for I/O activity. Should be the device name as displayed by netstat -i.
      description:
        type: string
        description: >-
               A description for this Monitor Provider
      lowSpaceWarningPercentThreshold:
        type: integer
        description: >-
               Specifies the low space warning threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will begin generating warning alert notifications.
      alertFrequency:
        type: string
        description: >-
               Specifies the length of time between administrative alerts generated in response to lack of usable disk space. Administrative alerts will be generated whenever the amount of usable space drops below any threshold, and they will also be generated at regular intervals as long as the amount of usable space remains below the threshold value. A value of zero indicates that alerts should only be generated when the amount of usable space drops below a configured threshold.
      lowSpaceWarningSizeThreshold:
        type: string
        description: >-
               Specifies the low space warning threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will begin generating warning alert notifications.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Monitor Provider is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Monitor Provider. Each configuration property should be given in the form 'name=value'.
      outOfSpaceErrorPercentThreshold:
        type: integer
        description: >-
               Specifies the out of space error threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will shut itself down to avoid problems that may occur from complete exhaustion of usable space.
      lowSpaceErrorSizeThreshold:
        type: string
        description: >-
               Specifies the low space error threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will start rejecting operations requested by non-root users.
      outOfSpaceErrorSizeThreshold:
        type: string
        description: >-
               Specifies the out of space error threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will shut itself down to avoid problems that may occur from complete exhaustion of usable space.
      lowSpaceErrorPercentThreshold:
        type: integer
        description: >-
               Specifies the low space error threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will start rejecting operations requested by non-root users.

  group-implementation-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/group-implementation-response'
    required:
    - schemas
    - totalResults
  add-group-implementation-request:
    allOf:
    - type: object
      properties:
        implementationName:
          type: string
          description: >-
              Name of the new Group Implementation
    - $ref: '#/definitions/group-implementation-properties'
    required:
    - implementationName
  group-implementation-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Group Implementation
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/group-implementation-properties'
    required:
    - id
    - schemas
  group-implementation-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/group-implementation-response'
  group-implementation-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:group-implementation:static"
          - "urn:pingidentity:schemas:configuration:2.0:group-implementation:virtual-static"
          - "urn:pingidentity:schemas:configuration:2.0:group-implementation:dynamic"
      description:
        type: string
        description: >-
               A description for this Group Implementation
      enabled:
        type: boolean
        description: >-
               Indicates whether the Group Implementation is enabled.

  gauge-data-source-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/gauge-data-source-response'
    required:
    - schemas
    - totalResults
  add-gauge-data-source-request:
    allOf:
    - type: object
      properties:
        sourceName:
          type: string
          description: >-
              Name of the new Gauge Data Source
    - $ref: '#/definitions/gauge-data-source-properties'
    required:
    - sourceName
  gauge-data-source-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Gauge Data Source
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/gauge-data-source-properties'
    required:
    - id
    - schemas
  gauge-data-source-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/gauge-data-source-response'
  gauge-data-source-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:gauge-data-source:indicator"
          - "urn:pingidentity:schemas:configuration:2.0:gauge-data-source:numeric"
      resourceAttribute:
        type: string
        description: >-
               Specifies the attribute whose value is used to identify the specific resource being monitored (e.g. device name).
      divideValueBy:
        type: number
        description: >-
               An optional floating point value that can be used to scale the resulting value.
      divideValueByAttribute:
        type: string
        description: >-
               An optional property that can scale the resulting value by another attribute in the monitored entry.
      additionalText:
        type: string
        description: >-
               Additional information about the source of this data that is added to alerts sent as a result of gauges that use this Gauge Data Source.
      monitorObjectclass:
        type: string
        description: >-
               The object class name of the monitor entries to examine for generating gauge data.
      minimumUpdateInterval:
        type: string
        description: >-
               The minimum frequency with which gauges using this Gauge Data Source can be configured for update. In order to prevent undesirable side effects, some Gauge Data Sources may use this property to impose a higher bound on the update frequency of gauges.
      description:
        type: string
        description: >-
               A description for this Gauge Data Source
      dataOrientation:
        type: string
        enum:
        - "lower-is-better"
        - "higher-is-better"
        description: >-
               Indicates whether a higher or lower value is a more severe condition.
      divideValueByCounterAttribute:
        type: string
        description: >-
               An optional property that can scale the resulting value by another attribute whose value represents a counter in the monitored entry.
      statisticType:
        type: string
        enum:
        - "count-per-second"
        - "average"
        - "minimum"
        - "maximum"
        description: >-
               Specifies the type of statistic to include in the output for the monitored attribute.
      monitorAttribute:
        type: string
        description: >-
               Specifies the attribute on the monitor entries from which to derive the current gauge value.
      includeFilter:
        type: string
        description: >-
               An optional LDAP filter that can be used restrict which monitor entries are used to compute output.
      resourceType:
        type: string
        description: >-
               A string indicating the type of resource being monitored.

  backend-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/backend-response'
    required:
    - schemas
    - totalResults
  add-backend-request:
    allOf:
    - type: object
      properties:
        backendName:
          type: string
          description: >-
              Name of the new Backend
    - $ref: '#/definitions/backend-properties'
    required:
    - backendName
  backend-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Backend
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/backend-properties'
    required:
    - id
    - schemas
  backend-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/backend-response'
  backend-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:backend:schema"
          - "urn:pingidentity:schemas:configuration:2.0:backend:backup"
          - "urn:pingidentity:schemas:configuration:2.0:backend:encryption-settings"
          - "urn:pingidentity:schemas:configuration:2.0:backend:ldif"
          - "urn:pingidentity:schemas:configuration:2.0:backend:trust-store"
          - "urn:pingidentity:schemas:configuration:2.0:backend:custom"
          - "urn:pingidentity:schemas:configuration:2.0:backend:changelog"
          - "urn:pingidentity:schemas:configuration:2.0:backend:monitor"
          - "urn:pingidentity:schemas:configuration:2.0:backend:local-db"
          - "urn:pingidentity:schemas:configuration:2.0:backend:config-file-handler"
          - "urn:pingidentity:schemas:configuration:2.0:backend:task"
          - "urn:pingidentity:schemas:configuration:2.0:backend:alert"
          - "urn:pingidentity:schemas:configuration:2.0:backend:alarm"
          - "urn:pingidentity:schemas:configuration:2.0:backend:metrics"
      primeTimeLimit:
        type: string
        description: >-
               Specifies the maximum length of time that the backend prime should be allowed to run. A duration of zero seconds indicates that there should not be a time limit.
      dbDirectory:
        type: string
        description: >-
               Specifies the path to the filesystem directory that is used to hold the Berkeley DB Java Edition database files containing the data for this backend. The files for this backend are stored in a sub-directory named after the backend-id.
      processFiltersWithUndefinedAttributeTypes:
        type: boolean
        description: >-
               Determines whether the Directory Server should continue filter processing for LDAP search operations in this Local DB Backend that includes a search filter with an attribute that is not defined in the schema. This will only apply if check-schema is enabled in the global configuration.
      dn2idCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the dn2id database, which provides a mapping between normalized entry DNs and the corresponding entry IDs.
      setDegradedAlertForUntrustedIndex:
        type: boolean
        description: >-
               Determines whether the Directory Server enters a DEGRADED state when this Local DB Backend has an index whose contents cannot be trusted.
      primeAllIndexes:
        type: boolean
        description: >-
               Indicates whether to prime all indexes associated with this backend, or to only prime the specified set of indexes (as configured with the system-index-to-prime property for the system indexes, and the prime-index property in the attribute index definition for attribute indexes).
      dn2uriCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the dn2uri database, which provides a mapping between a normalized entry DN and a set of referral URLs contained in the associated smart referral entry.
      taskBackingFile:
        type: string
        description: >-
               Specifies the path to the backing file for storing information about the tasks configured in the server.
      changelogPurgeBatchSize:
        type: integer
        description: >-
               Specifies the number of changelog entries purged in a single database transaction.
      trustStoreType:
        type: string
        description: >-
               Specifies the format for the data in the key store file.
      id2childrenCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the id2children database, which provides a mapping between the entry ID of a particular entry and the entry IDs of all of its immediate children. This index may be used when performing searches with a single-level scope if the search filter cannot be resolved to a small enough candidate list. The size of this database directly depends on the number of entries that have children.
      jeProperty:
        type: array
        items:
          type: string
        description: >-
               Specifies the database and environment properties for the Berkeley DB Java Edition database for this changelog backend.
      indexExcludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute types are to be specifically excluded from the set of attribute indexes maintained on the changelog. This property is useful when the index-include-attribute property contains one of the special values "*" and "+".
      compactCommonParentDN:
        type: array
        items:
          type: string
        description: >-
               Provides a DN of an entry that may be the parent for a large number of entries in the backend. This may be used to help increase the space efficiency when encoding entries for storage.
      uncachedId2entryCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the uncached-id2entry database, which provides a way to store complete or partial encoded entries with a different (and presumably less memory-intensive) cache mode than records written to id2entry.
      taskRetentionTime:
        type: string
        description: >-
               Specifies the length of time that task entries should be retained after processing on the associated task has been completed.
      externalTxnDefaultBackendLockBehavior:
        type: string
        enum:
        - "do-not-acquire"
        - "acquire-after-retries"
        - "acquire-before-retries"
        - "acquire-before-initial-attempt"
        description: >-
               Specifies the default behavior that should be exhibited by external transactions (e.g., an LDAP transaction or an atomic multi-update operation) with regard to acquiring an exclusive lock in this backend.
      dbCleanerMinUtilization:
        type: integer
        description: >-
               Specifies the minimum percentage of "live" data that the database cleaner attempts to keep in database log files.
      dbUseThreadLocalHandles:
        type: boolean
        description: >-
               Indicates whether to use thread-local database handles to reduce contention in the backend.
      changelogEntryExcludeBaseDN:
        type: array
        items:
          type: string
        description: >-
               The base DNs for branches in the data for which no changelog records should be generated.
      dbLoggingLevel:
        type: string
        description: >-
               Specifies the log level that should be used by the database when it is writing information into the je.info file.
      dbTxnWriteNoSync:
        type: boolean
        description: >-
               Indicates whether the database should synchronously flush data as it is written to disk.
      importTempDirectory:
        type: string
        description: >-
               Specifies the location of the directory that is used to hold temporary information during the index post-processing phase of an LDIF import.
      setDegradedAlertWhenDisabled:
        type: boolean
        description: >-
               Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
      backendID:
        type: string
        description: >-
               Specifies a name to identify the associated backend.
      targetDatabaseSize:
        type: string
        description: >-
               The changelog database is allowed to grow up to this size on disk even if changes are older than the configured changelog-maximum-age.
      dbCheckpointerWakeupInterval:
        type: string
        description: >-
               Specifies the maximum length of time that should pass between checkpoints.
      enabled:
        type: boolean
        description: >-
               Indicates whether the backend is enabled in the server.
      dbBackgroundSyncInterval:
        type: string
        description: >-
               Specifies the interval to use when performing background synchronous writes in the database environment in order to smooth overall write performance and increase data durability. A value of "0 s" will disable background synchronous writes.
      changelogEntryExcludeFilter:
        type: array
        items:
          type: string
        description: >-
               A filter that indicates which changelog entries should be excluded from the changelog. Note that this filter is evaluated against the changelog entry itself and not against the entry that was the target of the change referenced by the changelog entry. This filter may target any attributes that appear in changelog entries with the exception of the changeNumber and entry-size-bytes attributes, since they will not be known at the time of the filter evaluation.
      writeLastmodAttributes:
        type: boolean
        description: >-
               Specifies whether values of creatorsName, createTimestamp, modifiersName and modifyTimestamp attributes will be written to changelog entries.
      trustStorePin:
        type: string
        description: >-
               Specifies the clear-text PIN needed to access the Trust Store Backend.
      compressEntries:
        type: boolean
        description: >-
               Indicates whether the backend should attempt to compress entries before storing them in the database.
      retentionPolicy:
        type: array
        items:
          type: string
        description: >-
               The retention policy to use for the Metrics Backend .
      metricsDir:
        type: string
        description: >-
               Specifies the path to the directory that contains metric definitions.
      backupDirectory:
        type: array
        items:
          type: string
        description: >-
               Specifies the path to a backup directory containing one or more backups for a particular backend.
      changelogWriteBatchSize:
        type: integer
        description: >-
               Specifies the number of changelog entries written in a single database transaction.
      ldifFile:
        type: string
        description: >-
               Specifies the path to the LDIF file containing the data for this backend.
      indexIncludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute types are to be specifically included in the set of attribute indexes maintained on the changelog. If this property does not have any values then no attribute types are indexed.
      primeThreadCount:
        type: integer
        description: >-
               Specifies the number of threads to use when priming. At present, this applies only to the preload and cursor-across-indexes prime methods.
      readOnlySchemaFile:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a file (which must exist in the config/schema directory) containing schema elements that should be considered read-only. Any schema definitions contained in read-only files cannot be altered by external clients.
      trustStorePinPassphraseProvider:
        type: string
        description: >-
               The passphrase provider to use to obtain the clear-text PIN needed to access the Trust Store Backend.
      systemIndexToPrimeInternalNodesOnly:
        type: array
        items:
          type: string
          enum:
          - "dn2id"
          - "id2entry"
          - "uncached-id2entry"
          - "id2children"
          - "id2subtree"
          - "dn2uri"
        description: >-
               Specifies the system index(es) for which internal database nodes only (i.e., the database keys but not values) should be primed when the backend is initialized.
      maxAlerts:
        type: integer
        description: >-
               Specifies the maximum number of alerts that should be retained. If more alerts than this configured maximum are generated within the alert retention time, then the oldest alerts will be purged to achieve this maximum.
      deadlockRetryLimit:
        type: integer
        description: >-
               Specifies the number of times that the server should retry an attempted operation in the backend if a deadlock results from two concurrent requests that interfere with each other in a conflicting manner.
      subtreeDeleteSizeLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that may be deleted from the backend when using the subtree delete control.
      id2childrenIndexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entry IDs to maintain for each entry in the id2children system index (which keeps track of the immediate children for an entry, to assist in otherwise unindexed searches with a single-level scope). A value of 0 means there is no limit, however this could have a big impact on database size on disk and on server performance.
      changelogEntryIncludeFilter:
        type: array
        items:
          type: string
        description: >-
               A filter that indicates which changelog entries should actually be stored in the changelog. Note that this filter is evaluated against the changelog entry itself and not against the entry that was the target of the change referenced by the changelog entry. This filter may target any attributes that appear in changelog entries with the exception of the changeNumber and entry-size-bytes attributes, since they will not be known at the time of the filter evaluation.
      backgroundPrime:
        type: boolean
        description: >-
               Indicates whether to attempt to perform the prime using a background thread if possible. If background priming is enabled, then the Directory Server may be allowed to accept client connections and process requests while the prime is in progress.
      mirroredSubtreeEntryUpdateTimeout:
        type: string
        description: >-
               Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait for an update operation (add, delete, modify and modify-dn) on an entry to be applied on all servers in the topology. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data.
      dbDirectoryPermissions:
        type: string
        description: >-
               Specifies the permissions that should be applied to the directory containing the backend database files and to directories and files created during backup of the backend.
      changelogDeletedEntryIncludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of attribute types that should be included in a changelog entry for DELETE operations.
      exportThreadCount:
        type: integer
        description: >-
               Specifies the number of threads to use for concurrently retrieving and encoding entries during an LDIF export.
      disabledAlertType:
        type: array
        items:
          type: string
          enum:
          - "access-control-change"
          - "access-control-disabled"
          - "access-control-enabled"
          - "access-control-parse-failure"
          - "access-log-criteria-matched"
          - "alarm-cleared"
          - "alarm-critical"
          - "alarm-major"
          - "alarm-minor"
          - "alarm-warning"
          - "backend-disabled"
          - "backend-initialization-failed"
          - "backup-failed"
          - "cannot-acquire-shared-backend-lock"
          - "cannot-copy-schema-files"
          - "cannot-decode-entry"
          - "cannot-find-recurring-task"
          - "cannot-register-backend"
          - "cannot-release-shared-backend-lock"
          - "cannot-rename-current-task-file"
          - "cannot-rename-new-task-file"
          - "cannot-restore-backup"
          - "cannot-schedule-recurring-task-iteration"
          - "cannot-write-configuration"
          - "cannot-write-new-schema-files"
          - "cannot-write-server-state-file"
          - "cannot-write-task-backing-file"
          - "config-change"
          - "console-logger-without-no-detach"
          - "crypto-manager-error"
          - "continuous-garbage-collection-detected"
          - "deadlock-detected"
          - "debug-logging-enabled"
          - "delegated-admin-configuration-errors"
          - "duplicate-alerts-suppressed"
          - "duplicate-error-alerts-suppressed"
          - "duplicate-fatal-alerts-suppressed"
          - "duplicate-info-alerts-suppressed"
          - "duplicate-warning-alerts-suppressed"
          - "embedded-postgresql-unavailable"
          - "entering-lockdown-mode"
          - "entry-references-removed-attribute-type"
          - "exec-task-launching-command"
          - "exploded-index-background-delete-cleanup-failed"
          - "exploded-index-background-delete-failed"
          - "external-config-file-edit-handled"
          - "external-config-file-edit-lost"
          - "external-server-initialization-failed"
          - "failed-to-apply-mirrored-configuration"
          - "file-retention-task-delete-failure"
          - "force-gc-complete"
          - "force-gc-starting"
          - "global-index-insufficient-disk-space-error"
          - "global-index-persistence-error"
          - "global-index-read-error"
          - "global-referential-integrity-update-failure"
          - "globally-unique-attribute-conflict"
          - "health-check-available-to-degraded"
          - "health-check-available-to-unavailable"
          - "health-check-degraded-to-available"
          - "health-check-degraded-to-unavailable"
          - "health-check-unavailable-to-available"
          - "health-check-unavailable-to-degraded"
          - "http-connection-handler-duplicate-context-path"
          - "http-connection-handler-duplicate-servlet-extension"
          - "index-corrupt"
          - "index-degraded"
          - "index-rebuild-completed"
          - "index-rebuild-in-progress"
          - "insecure-access-token-validator-enabled"
          - "invalid-privilege"
          - "je-background-sync-failed"
          - "je-cleaner-disabled"
          - "je-daemon-thread-exception"
          - "je-environment-not-closed-cleanly"
          - "je-recovery-required"
          - "jvm-misconfiguration"
          - "large-attribute-update-failure"
          - "lba-no-available-servers"
          - "ldap-connection-handler-cannot-listen"
          - "ldap-connection-handler-consecutive-failures"
          - "ldap-connection-handler-uncaught-error"
          - "ldif-backend-cannot-write"
          - "ldif-connection-handler-parse-error"
          - "ldif-connection-handler-io-error"
          - "leaving-lockdown-mode"
          - "log-file-rotation-listener-invoke-error"
          - "log-file-rotation-listener-processing-takes-too-long"
          - "logging-error"
          - "low-disk-space-error"
          - "low-disk-space-warning"
          - "mirrored-subtree-manager-forced-as-master-error"
          - "mirrored-subtree-manager-forced-as-master-warning"
          - "mirrored-subtree-manager-no-master-found"
          - "mirrored-subtree-server-not-in-topology"
          - "mirrored-subtree-manager-operation-error"
          - "mirrored-subtree-manager-failed-outbound-connection"
          - "mirrored-subtree-manager-connection-asymmetry"
          - "missing-schema-elements-referenced-by-backend"
          - "monitoring-endpoint-unable-to-connect"
          - "no-enabled-alert-handlers"
          - "offline-config-change-detected"
          - "out-of-disk-space-error"
          - "pdp-unavailable"
          - "pdp-trust-framework-version-deprecated"
          - "proxy-entry-balancing-operation-failure"
          - "proxy-entry-balancing-error-multiple-operations-succeeded"
          - "proxy-entry-rebalancing-admin-action-required"
          - "replication-backlogged"
          - "replication-metadata-decode-failure"
          - "replication-missing-changes"
          - "replication-monitor-data-unavailable"
          - "replication-plugin-message-serialization-failure"
          - "replication-server-changelog-failure"
          - "replication-server-listen-failure"
          - "replication-unresolved-conflict"
          - "replication-unsent-changes"
          - "replication-replay-failed"
          - "restart-required"
          - "schema-checking-disabled"
          - "scim-lookthrough-limit-exceeded"
          - "restricted-subtree-accessibility"
          - "server-shutting-down"
          - "server-starting"
          - "server-started"
          - "subtree-delete-interrupted"
          - "sync-resource-connection-error"
          - "sync-resource-operation-error"
          - "sync-pipe-initialization-error"
          - "sync-pipe-backlog-above-threshold"
          - "sync-pipe-backlog-below-threshold"
          - "system-nanotime-stopped"
          - "system-current-time-shifted"
          - "task-started"
          - "task-completed"
          - "task-failed"
          - "third-party-extension-exception"
          - "thread-exit-holding-lock"
          - "threshold-warning-entry"
          - "threshold-warning-exit"
          - "threshold-critical-entry"
          - "threshold-critical-exit"
          - "topology-registry-secret-key-deleted"
          - "uncaught-exception"
          - "unindexed-internal-search"
          - "unique-attribute-sync-conflict"
          - "unique-attribute-sync-error"
          - "uniqueness-control-post-commit-conflict"
          - "unlicensed-product"
          - "unrecognized-alert-type"
          - "user-defined-error"
          - "user-defined-fatal"
          - "user-defined-info"
          - "user-defined-warning"
          - "worker-thread-caught-error"
          - "work-queue-backlogged"
          - "work-queue-full"
          - "work-queue-no-threads-remaining"
          - "server-jvm-paused"
          - "sensitive-trace-data-logged-warning"
          - "replication-generation-id-mismatch"
          - "account-temporarily-locked-account-status-notification"
          - "account-permanently-locked-account-status-notification"
          - "account-unlocked-account-status-notification"
          - "account-idle-locked-account-status-notification"
          - "account-reset-locked-account-status-notification"
          - "account-disabled-account-status-notification"
          - "account-enabled-account-status-notification"
          - "account-not-yet-active-account-status-notification"
          - "account-expired-account-status-notification"
          - "password-expired-account-status-notification"
          - "password-expiring-account-status-notification"
          - "password-reset-account-status-notification"
          - "password-changed-account-status-notification"
          - "account-created-account-status-notification"
          - "account-updated-account-status-notification"
          - "bind-password-failed-validation-account-status-notification"
          - "must-change-password-account-status-notification"
          - "privilege-assigned"
          - "insecure-request-rejected"
          - "incremental-backups-deprecated"
          - "replace-certificate-succeeded"
          - "replace-certificate-failed"
        description: >-
               Specifies the names of the alert types that should not be added to the backend. This can be used to suppress high volume alerts that might trigger hitting the max-alerts limit sooner than desired. Disabled alert types will not be sent out over persistent searches on this backend.
      notificationManager:
        type: string
        description: >-
               Specifies a notification manager for changes resulting from operations processed through this Backend
      numRecentChanges:
        type: integer
        description: >-
               Specifies the number of recent LDAP entry changes per replica for which the backend keeps a record to allow replication to recover in the event that the server is abruptly terminated. Increasing this value can lead to an increased peak server modification rate as well as increased replication throughput.
      storageDir:
        type: string
        description: >-
               Specifies the path to the directory that will be used to store queued samples.
      changelogMaximumAge:
        type: string
        description: >-
               Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting target-database-size can allow additional changes to be maintained up to the configured size on disk.
      changelogIncludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute types will be included in a changelog entry for ADD and MODIFY operations.
      dbImportCachePercent:
        type: integer
        description: >-
               The percentage of JVM memory to allocate to the database cache during import operations.
      id2subtreeCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the id2subtree database, which provides a mapping between the entry ID of a particular entry and the entry IDs of all of its children to any depth. This index may be used when performing searches with a whole-subtree or subordinate-subtree scope if the search filter cannot be resolved to a small enough candidate list. The size of this database directly depends on the number of entries that have children.
      dbEvictorCriticalPercentage:
        type: integer
        description: >-
               Specifies the percentage over the configured maximum that the database cache is allowed to grow. It is recommended to set this value slightly above zero when the database is too large to fully cache in memory. In this case, a dedicated background evictor thread is used to perform evictions once the cache fills up reducing the possibility that server threads are blocked.
      showAllAttributes:
        type: boolean
        description: >-
               Indicates whether to treat all attributes in the schema entry as if they were user attributes regardless of their configuration.
      changelogEntryIncludeBaseDN:
        type: array
        items:
          type: string
        description: >-
               The base DNs for branches in the data for which to record changes in the changelog.
      sampleFlushInterval:
        type: string
        description: >-
               Period when samples are flushed to disk.
      systemIndexToPrime:
        type: array
        items:
          type: string
          enum:
          - "dn2id"
          - "id2entry"
          - "id2children"
          - "id2subtree"
          - "dn2uri"
        description: >-
               Specifies which system index(es) should be primed when the backend is initialized.
      changelogMaxBeforeAfterValues:
        type: integer
        description: >-
               This controls whether all attribute values for a modified attribute (even those values that have not changed) will be included in the changelog entry. If the number of attribute values does not exceed this limit, then all values for the modified attribute will be included in the changelog entry.
      changelogIncludeKeyAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute types will be included in a changelog entry on every change.
      maxAlarms:
        type: integer
        description: >-
               Specifies the maximum number of alarms that should be retained. If more alarms than this configured maximum are generated within the alarm retention time, then the oldest alarms will be purged to achieve this maximum. Only alarms at normal severity will be purged.
      reportExcludedChangelogAttributes:
        type: string
        enum:
        - "none"
        - "attribute-counts"
        - "attribute-names"
        description: >-
               Indicates whether changelog entries that have been altered by applying access controls should include additional information about any attributes that may have been removed.
      compositeIndexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that are allowed to match a given composite index key before that particular composite index key is no longer maintained.
      maximumFinalTaskLogMessagesToRetain:
        type: integer
        description: >-
               The maximum number of log messages to retain in each task entry from the end of the processing for that task. If too many messages are logged during task processing, then retaining only a limited number of messages from the beginning and/or end of task processing can reduce the amount of memory that the server consumes by caching information about currently-active and recently-completed tasks.
      singleWriterLockBehavior:
        type: string
        enum:
        - "never-acquire"
        - "acquire-on-retry"
        - "always-acquire"
        description: >-
               Specifies the condition under which to acquire a single-writer lock to ensure that the associated operation will be the only write in progress at the time the lock is held. The single-writer lock can help avoid problems that result from database lock conflicts that arise between two write operations being processed at the same time in the same backend. This will not have any effect on the read operations processed while the write is in progress.
      alarmRetentionTime:
        type: string
        description: >-
               Specifies the maximum length of time that information about raised alarms should be maintained before they will be purged.
      applyAccessControlsToChangelogEntryContents:
        type: boolean
        description: >-
               Indicates whether the contents of changelog entries should be subject to access control and sensitive attribute evaluation such that the contents of attributes like changes, deletedEntryAttrs, ds-changelog-entry-key-attr-values, ds-changelog-before-values, and ds-changelog-after-values may be altered based on attributes the user can see in the target entry.
      indexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained.
      dbCachePercent:
        type: integer
        description: >-
               Specifies the percentage of JVM memory to allocate to the changelog database cache.
      uncachedAttributeCriteria:
        type: string
        description: >-
               The criteria that will be used to identify attributes that should be written into the uncached-id2entry database rather than the id2entry database. This will only be used for entries in which the associated uncached-entry-criteria does not indicate that the entire entry should be uncached.
      notificationSenderAddress:
        type: string
        description: >-
               Specifies the email address to use as the sender address (that is, the "From:" address) for notification mail messages generated when a task completes execution.
      returnUnavailableForUntrustedIndex:
        type: boolean
        description: >-
               Determines whether the Directory Server returns UNAVAILABLE for any LDAP search operation in this Local DB Backend that would use an index whose contents cannot be trusted.
      dbNumCleanerThreads:
        type: integer
        description: >-
               Specifies the number of threads that the backend should maintain to keep the database log files at or near the desired utilization. A value of zero indicates that the number of cleaner threads should be automatically configured based on the number of available CPUs.
      backupFilePermissions:
        type: string
        description: >-
               Specifies the permissions that should be applied to files and directories created by a backup of the backend.
      dbLogFileMax:
        type: string
        description: >-
               Specifies the maximum size for a database log file.
      maximumInitialTaskLogMessagesToRetain:
        type: integer
        description: >-
               The maximum number of log messages to retain in each task entry from the beginning of the processing for that task. If too many messages are logged during task processing, then retaining only a limited number of messages from the beginning and/or end of task processing can reduce the amount of memory that the server consumes by caching information about currently-active and recently-completed tasks.
      description:
        type: string
        description: >-
               A description for this Backend
      changelogWriteQueueCapacity:
        type: integer
        description: >-
               Specifies the capacity of the changelog write queue in number of changes.
      trustStoreFile:
        type: string
        description: >-
               Specifies the path to the file that stores the trust information.
      alertRetentionTime:
        type: string
        description: >-
               Specifies the maximum length of time that information about generated alerts should be maintained before they will be purged.
      schemaEntryDN:
        type: array
        items:
          type: string
        description: >-
               Defines the base DNs of the subtrees in which the schema information is published in addition to the value included in the base-dn property.
      changelogDeletedEntryExcludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of attribute types that should be excluded from a changelog entry for DELETE operations.
      softDeleteEntryIncludedOperation:
        type: array
        items:
          type: string
          enum:
          - "modify"
          - "delete"
        description: >-
               Specifies which operations performed on soft-deleted entries will appear in the changelog.
      baseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the base DN(s) for the data that the backend handles.
      isPrivateBackend:
        type: boolean
        description: >-
               Indicates whether the backend should be considered a private backend, which indicates that it is used for storing operational data rather than user-defined information.
      mirroredSubtreeSearchTimeout:
        type: string
        description: >-
               Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait for a search operation to complete. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data. Search requests that take longer than this timeout will be canceled and considered failures.
      id2entryCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the id2entry database, which provides a mapping between entry IDs and entry contents. Consider configuring uncached entries or uncached attributes in lieu of changing from the "cache-keys-and-values" default value.
      insignificantConfigArchiveAttribute:
        type: array
        items:
          type: string
        description: >-
               The name or OID of an attribute type that is considered insignificant for the purpose of maintaining the configuration archive.
      writabilityMode:
        type: string
        enum:
        - "enabled"
        - "disabled"
        - "internal-only"
        description: >-
               Specifies the behavior that the backend should use when processing write operations.
      hashEntries:
        type: boolean
        description: >-
               Indicates whether to calculate and store a message digest of the entry contents along with the entry data, in order to provide a means of verifying the integrity of the entry data.
      id2subtreeIndexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entry IDs to maintain for each entry in the id2subtree system index (which keeps track of all descendants below an entry, to assist in otherwise unindexed searches with a whole-subtree or subordinate subtree scope). A value of 0 means there is no limit, however this could have a big impact on database size on disk and on server performance.
      trustStorePinFile:
        type: string
        description: >-
               Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the Trust Store Backend.
      offlineProcessDatabaseOpenTimeout:
        type: string
        description: >-
               Specifies a timeout duration which will be used for opening the database environment by an offline process, such as export-ldif.
      includeVirtualAttributes:
        type: array
        items:
          type: string
          enum:
          - "add-attributes"
          - "deleted-entry-attributes"
          - "before-and-after-values"
          - "key-attribute-values"
        description: >-
               Specifies the changelog entry elements (if any) in which virtual attributes should be included.
      returnUnavailableWhenDisabled:
        type: boolean
        description: >-
               Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
      primeMethod:
        type: array
        items:
          type: string
          enum:
          - "none"
          - "preload"
          - "preload-internal-nodes-only"
          - "cursor-across-indexes"
          - "prime-to-filesystem-cache"
          - "prime-to-filesystem-cache-non-sequential"
        description: >-
               Specifies the method that should be used to prime caches with data for this backend.
      changelogExcludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of attribute types that should be excluded in a changelog entry for ADD and MODIFY operations.
      defaultCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used for any database for which the cache mode is not explicitly specified. This includes the id2entry database, which stores encoded entries, and all attribute indexes.
      mirroredSubtreePeerPollingInterval:
        type: string
        description: >-
               Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait before polling the peer servers in the topology to determine if there are any changes in the topology. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data.
      uncachedEntryCriteria:
        type: string
        description: >-
               The criteria that will be used to identify entries that should be written into the uncached-id2entry database rather than the id2entry database.
      importThreadCount:
        type: integer
        description: >-
               Specifies the number of threads to use for concurrent processing during an LDIF import.
      useReversibleForm:
        type: boolean
        description: >-
               Specifies whether the changelog should provide enough information to be able to revert the changes if desired.

  local-db-composite-index-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/local-db-composite-index-response'
    required:
    - schemas
    - totalResults
  add-local-db-composite-index-request:
    allOf:
    - type: object
      properties:
        indexName:
          type: string
          description: >-
              Name of the new Local DB Composite Index
    - $ref: '#/definitions/local-db-composite-index-properties'
    required:
    - indexName
  local-db-composite-index-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Local DB Composite Index
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/local-db-composite-index-properties'
    required:
    - id
    - schemas
  local-db-composite-index-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/local-db-composite-index-response'
  local-db-composite-index-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:local-db-composite-index"
      primeInternalNodesOnly:
        type: boolean
        description: >-
               Indicates whether to only prime the internal nodes of the index database, rather than priming both internal and leaf nodes.
      cacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        description: >-
               The behavior that the server should exhibit when storing information from this index in the database cache.
      description:
        type: string
        description: >-
               A description for this Local DB Composite Index
      indexFilterPattern:
        type: string
        description: >-
               A filter pattern that identifies which entries to include in the index.
      indexEntryLimit:
        type: integer
        description: >-
               The maximum number of entries that any single index key will be allowed to match before the server stops maintaining the ID set for that index key.
      primeIndex:
        type: boolean
        description: >-
               Indicates whether the server should load the contents of this index into memory when the backend is being opened.
      indexBaseDNPattern:
        type: string
        description: >-
               An optional base DN pattern that identifies portions of the DIT in which entries to index may exist.

  local-db-vlv-index-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/local-db-vlv-index-response'
    required:
    - schemas
    - totalResults
  add-local-db-vlv-index-request:
    allOf:
    - type: object
      properties:
        indexName:
          type: string
          description: >-
              Name of the new Local DB VLV Index
    - $ref: '#/definitions/local-db-vlv-index-properties'
    required:
    - indexName
  local-db-vlv-index-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Local DB VLV Index
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/local-db-vlv-index-properties'
    required:
    - id
    - schemas
  local-db-vlv-index-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/local-db-vlv-index-response'
  local-db-vlv-index-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:local-db-vlv-index"
      filter:
        type: string
        description: >-
               Specifies the LDAP filter used in the query that is being indexed.
      maxBlockSize:
        type: integer
        description: >-
               Specifies the number of entry IDs to store in a single sorted set before it must be split.
      scope:
        type: string
        enum:
        - "base-object"
        - "single-level"
        - "whole-subtree"
        - "subordinate-subtree"
        description: >-
               Specifies the LDAP scope of the query that is being indexed.
      sortOrder:
        type: string
        description: >-
               Specifies the names of the attributes that are used to sort the entries for the query being indexed.
      name:
        type: string
        description: >-
               Specifies a unique name for this VLV index.
      cacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the database for this index.
      baseDN:
        type: string
        description: >-
               Specifies the base DN used in the search query that is being indexed.

  local-db-index-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/local-db-index-response'
    required:
    - schemas
    - totalResults
  add-local-db-index-request:
    allOf:
    - type: object
      properties:
        indexName:
          type: string
          description: >-
              Name of the new Local DB Index
    - $ref: '#/definitions/local-db-index-properties'
    required:
    - indexName
  local-db-index-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Local DB Index
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/local-db-index-properties'
    required:
    - id
    - schemas
  local-db-index-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/local-db-index-response'
  local-db-index-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:local-db-index"
      maintainMatchCountForKeysExceedingEntryLimit:
        type: boolean
        description: >-
               Indicates whether to continue to maintain a count of the number of matching entries for an index key even after that count exceeds the index entry limit.
      indexType:
        type: array
        items:
          type: string
          enum:
          - "equality"
          - "ordering"
          - "presence"
          - "substring"
          - "approximate"
        description: >-
               Specifies the type(s) of indexing that should be performed for the associated attribute.
      equalityIndexFilter:
        type: array
        items:
          type: string
        description: >-
               A search filter that may be used in conjunction with an equality component for the associated attribute type. If an equality index filter is defined, then an additional equality index will be maintained for the associated attribute, but only for entries which match the provided filter. Further, the index will be used only for searches containing an equality component with the associated attribute type ANDed with this filter.
      primeInternalNodesOnly:
        type: boolean
        description: >-
               If this option is enabled and this index's backend is configured to prime indexes using the preload method, then only the internal database nodes (i.e., the database keys but not values) should be primed when the backend is initialized.
      substringLength:
        type: integer
        description: >-
               The length of substrings in a substring index.
      cacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the database for this index. This controls how much database cache memory can be consumed by this index.
      attribute:
        type: string
        description: >-
               Specifies the name of the attribute for which the index is to be maintained.
      indexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained.
      substringIndexEntryLimit:
        type: integer
        description: >-
               Specifies, for substring indexes, the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained. Setting a large limit can dramatically increase the database size on disk and have a big impact on server performance if the indexed attribute is modified frequently. When a very large limit is required, creating a dedicated composite index with an index-filter-pattern of (attr=*?*) will give the best balance between search and update performance.
      primeIndex:
        type: boolean
        description: >-
               If this option is enabled and this index's backend is configured to prime indexes, then this index will be loaded at startup.
      maintainEqualityIndexWithoutFilter:
        type: boolean
        description: >-
               Indicates whether to maintain a separate equality index for the associated attribute without any filter, in addition to maintaining an index for each equality index filter that is defined. If this is false, then the attribute will not be indexed for equality by itself but only in conjunction with the defined equality index filters.

  attribute-syntax-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/attribute-syntax-response'
    required:
    - schemas
    - totalResults
  add-attribute-syntax-request:
    allOf:
    - type: object
      properties:
        syntaxName:
          type: string
          description: >-
              Name of the new Attribute Syntax
    - $ref: '#/definitions/attribute-syntax-properties'
    required:
    - syntaxName
  attribute-syntax-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Attribute Syntax
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/attribute-syntax-properties'
    required:
    - id
    - schemas
  attribute-syntax-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/attribute-syntax-response'
  attribute-syntax-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:attribute-type-description"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:directory-string"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:telephone-number"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:distinguished-name"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:generalized-time"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:integer"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:uuid"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:generic"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:json-object"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:user-password"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:boolean"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:hex-string"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:bit-string"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:ldap-url"
          - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:name-and-optional-uid"
      strictFormat:
        type: boolean
        description: >-
               Indicates whether to require telephone number values to strictly comply with the standard definition for this syntax.
      requireBinaryTransfer:
        type: boolean
        description: >-
               Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      allowZeroLengthValues:
        type: boolean
        description: >-
               Indicates whether zero-length (that is, an empty string) values are allowed.
      excludeAttributeFromCompaction:
        type: array
        items:
          type: string
        description: >-
               Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
      enableCompaction:
        type: boolean
        description: >-
               Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
      stripSyntaxMinUpperBound:
        type: boolean
        description: >-
               Indicates whether the suggested minimum upper bound appended to an attribute's syntax OID in its schema definition Attribute Type Description should be stripped.
      includeAttributeInCompaction:
        type: array
        items:
          type: string
        description: >-
               Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Attribute Syntax is enabled.

  work-queue-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Work Queue
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/work-queue-properties'
    required:
    - id
    - schemas
  work-queue-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/work-queue-response'
  work-queue-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:work-queue"
      expensiveOperationMinimumDumpInterval:
        type: string
        description: >-
               The minimum length of time that should be required to pass after dumping stack trace information for all threads before the server should be allowed to create a second dump. This will help prevent the server from dumping stack traces too frequently and eventually consuming all available disk space with stack trace log output. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
      maxOfferTime:
        type: string
        description: >-
               Specifies the maximum length of time that the connection handler should be allowed to wait to enqueue a request if the work queue is full. If the attempt to enqueue an operation does not succeed within this period of time, then the operation will be rejected and an error response will be returned to the client. A value of zero indicates that operations should be rejected immediately if the work queue is already at its maximum capacity.
      expensiveOperationMinimumConcurrentCount:
        type: integer
        description: >-
               The minimum number of concurrent expensive operations that should be detected to trigger dumping stack traces for all threads. If at least this number of worker threads are seen processing the same operations in two consecutive intervals, then the server will dump a stack trace of all threads to a file. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
      numAdministrativeSessionWorkerThreads:
        type: integer
        description: >-
               Specifies the number of worker threads that should be used to process operations as part of an administrative session. These threads may be reserved only for special use by management applications like dsconfig, the administration console, and other administrative tools, so that these applications may be used to diagnose problems and take any necessary corrective action even if all "normal" worker threads are busy processing other requests.
      maxQueueTime:
        type: string
        description: >-
               Specifies the maximum length of time that an operation should be allowed to wait on the work queue. If an operation has been waiting on the queue longer than this period of time, then it will receive an immediate failure result rather than being processed once it has been handed off to a worker thread. A value of zero seconds indicates that there should not be any maximum queue time imposed. This setting will only be used if the monitor-queue-time property has a value of true.
      expensiveOperationCheckInterval:
        type: string
        description: >-
               The interval that the work queue should use when checking for potentially expensive operations. If at least expensive-operation-minimum-concurrent-count worker threads are found to be processing the same operation on two consecutive polls separated by this time interval (i.e., the worker thread has been processing that operation for at least this length of time, and potentially up to twice this length of time), then a stack trace of all running threads will be written to a file for analysis to provide potentially useful information that may help better understand the reason it is taking so long. It may be that the operation is simply an expensive one to process, but there may be other external factors (e.g., a database checkpoint, a log rotation, lock contention, etc.) that could be to blame. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
      numQueues:
        type: integer
        description: >-
               Specifies the number of blocking queues that should be maintained. A value of zero indicates that the server should attempt to automatically select an optimal value (one queue for every two worker threads).
      numWriteQueues:
        type: integer
        description: >-
               Specifies the number of blocking queues that should be maintained for write operations. This will only be used if a value is specified for the num-write-worker-threads property, in which case the num-queues property will specify the number of queues for read operations. Otherwise, all operations will be processed by a common set of worker threads and the value of the num-queues property will specify the number of queues for all types of operations.
      maxWorkQueueCapacity:
        type: integer
        description: >-
               Specifies the maximum number of pending operations that may be held in any of the queues at any given time. The total number of pending requests may be as large as this value times the total number of queues.
      monitorQueueTime:
        type: boolean
        description: >-
               Indicates whether the work queue should monitor the length of time that operations are held in the queue. When enabled the queue time will be included with access log messages as "qtime" in milliseconds.
      numWriteWorkerThreads:
        type: integer
        description: >-
               Specifies the number of worker threads that should be used within the server to process write (add, delete, modify, and modify DN) operations. If this is specified, then separate sets of worker threads will be used for processing read and write operations, and the value of the num-worker-threads property will reflect the number of threads to use to process read operations.
      numWorkerThreads:
        type: integer
        description: >-
               Specifies the total number of worker threads that should be used within the server in order to process requested operations. The worker threads will be split evenly across all of the configured queues.

  uncached-entry-criteria-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/uncached-entry-criteria-response'
    required:
    - schemas
    - totalResults
  add-uncached-entry-criteria-request:
    allOf:
    - type: object
      properties:
        criteriaName:
          type: string
          description: >-
              Name of the new Uncached Entry Criteria
    - $ref: '#/definitions/uncached-entry-criteria-properties'
    required:
    - criteriaName
  uncached-entry-criteria-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Uncached Entry Criteria
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/uncached-entry-criteria-properties'
    required:
    - id
    - schemas
  uncached-entry-criteria-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/uncached-entry-criteria-response'
  uncached-entry-criteria-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:default"
          - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:last-access-time"
          - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:filter-based"
          - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:third-party"
      filter:
        type: string
        description: >-
               Specifies the search filter that should be used to differentiate entries into cached and uncached sets.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Uncached Entry Criteria.
      filterIdentifiesUncachedEntries:
        type: boolean
        description: >-
               Indicates whether the associated filter identifies those entries which should be stored in the uncached-id2entry database (if true) or entries which should be stored in the id2entry database (if false).
      description:
        type: string
        description: >-
               A description for this Uncached Entry Criteria
      accessTimeThreshold:
        type: string
        description: >-
               Specifies the maximum length of time that has passed since an entry was last accessed that it should still be included in the id2entry database. Entries that have not been accessed in more than this length of time may be written into the uncached-id2entry database.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Uncached Entry Criteria.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Uncached Entry Criteria. Each configuration property should be given in the form 'name=value'.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Uncached Entry Criteria. Each configuration property should be given in the form 'name=value'.

  http-servlet-extension-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/http-servlet-extension-response'
    required:
    - schemas
    - totalResults
  add-http-servlet-extension-request:
    allOf:
    - type: object
      properties:
        extensionName:
          type: string
          description: >-
              Name of the new HTTP Servlet Extension
    - $ref: '#/definitions/http-servlet-extension-properties'
    required:
    - extensionName
  http-servlet-extension-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the HTTP Servlet Extension
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/http-servlet-extension-properties'
    required:
    - id
    - schemas
  http-servlet-extension-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/http-servlet-extension-response'
  http-servlet-extension-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:delegated-admin"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:quickstart"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:availability-state"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:prometheus-monitoring"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:velocity"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:consent"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:ldap-mapped-scim"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:file-server"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:config"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:scim2"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:directory-rest-api"
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:third-party"
      debugType:
        type: array
        items:
          type: string
          enum:
          - "coding-error"
          - "exception"
          - "other"
        description: >-
               The types of debug messages that should be logged.
      includeMonitorAttributeNameLabel:
        type: boolean
        description: >-
               Indicates whether generated metrics should include a "monitor_attribute" label whose value is the name of the monitor attribute from which the metric was obtained.
      responseHeader:
        type: array
        items:
          type: string
        description: >-
               Specifies HTTP header fields and values added to response headers for all requests.
      debugEnabled:
        type: boolean
        description: >-
               Enables debug logging of the SCIM SDK. Debug messages will be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.server.extensions.scim.SCIMHTTPServletExtension.
      excludeLDAPObjectclass:
        type: array
        items:
          type: string
        description: >-
               Specifies the LDAP object classes that should be not be exposed directly as SCIM resources.
      includeInstanceNameLabel:
        type: boolean
        description: >-
               Indicates whether generated metrics should include an "instance" label whose value is the instance name for this Directory Server instance.
      bulkMaxOperations:
        type: integer
        description: >-
               The maximum number of operations that are permitted in a bulk request.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.
      accessTokenScope:
        type: string
        description: >-
               The name of a scope that must be present in an access token accepted by the Delegated Admin HTTP Servlet Extension.
      includeMonitorObjectClassNameLabel:
        type: boolean
        description: >-
               Indicates whether generated metrics should include a "monitor_object_class" label whose value is the name of the object class for the monitor entry from which the metric was obtained.
      maxResults:
        type: integer
        description: >-
               The maximum number of resources that are returned in a response.
      basicAuthEnabled:
        type: boolean
        description: >-
               Enables HTTP Basic authentication, using a username and password. The Identity Mapper specified by the identity-mapper property will be used to map the username to a DN.
      unavailableStatusCode:
        type: integer
        description: >-
               Specifies the HTTP status code that the servlet should return if the server considers itself to be unavailable.
      staticContentDirectory:
        type: string
        description: >-
               Specifies the base directory in which static, non-template content such as images, CSS, and Javascript files are stored on the filesystem.
      includeLocationNameLabel:
        type: boolean
        description: >-
               Indicates whether generated metrics should include a "location" label whose value is the location name for this Directory Server instance.
      allowContextOverride:
        type: boolean
        description: >-
               Indicates whether context providers may override existing context objects with new values.
      idTokenValidator:
        type: array
        items:
          type: string
        description: >-
               The ID token validators that may be used to verify the authenticity of an of an OpenID Connect ID token.
      swaggerEnabled:
        type: boolean
        description: >-
               Indicates whether the SCIM2 HTTP Servlet Extension will generate a Swagger specification document.
      additionalResponseContents:
        type: string
        description: >-
               A JSON-formatted string containing additional fields to be returned in the response body. For example, an additional-response-contents value of '{ "key": "value" }' would add the key and value to the root of the JSON response body.
      audience:
        type: string
        description: >-
               A string or URI that identifies the Delegated Admin HTTP Servlet Extension in the context of OAuth2 authorization.
      baseContextPath:
        type: string
        description: >-
               Specifies the base context path that HTTP clients should use to access this servlet. The value must start with a forward slash and must represent a valid HTTP context path.
      OAuthTokenHandler:
        type: string
        description: >-
               Specifies the OAuth Token Handler implementation that should be used to validate OAuth 2.0 bearer tokens when they are included in a SCIM request.
      alwaysIncludeMonitorEntryNameLabel:
        type: boolean
        description: >-
               Indicates whether generated metrics should always include a "monitor_entry" label whose value is the name of the monitor entry from which the metric was obtained.
      mimeTypesFile:
        type: string
        description: >-
               Specifies the path to a file that contains MIME type mappings that will be used to determine the appropriate value to return for the Content-Type header based on the extension of the requested static content file.
      templateDirectory:
        type: array
        items:
          type: string
        description: >-
               Specifies an ordered list of directories in which to search for the template files.
      temporaryDirectory:
        type: string
        description: >-
               Specifies the location of the directory that is used to create temporary files containing SCIM request data.
      schemasEndpointObjectclass:
        type: array
        items:
          type: string
        description: >-
               The list of object classes which will be returned by the schemas endpoint.
      resourceMappingFile:
        type: string
        description: >-
               The path to an XML file defining the resources supported by the SCIM interface and the SCIM-to-LDAP attribute mappings to use.
      bulkMaxConcurrentRequests:
        type: integer
        description: >-
               The maximum number of bulk requests that may be processed concurrently by the server. Any bulk request that would cause this limit to be exceeded is rejected with HTTP status code 503.
      defaultOperationalAttribute:
        type: array
        items:
          type: string
        description: >-
               A set of operational attributes that will be returned with entries by default.
      defaultMIMEType:
        type: string
        description: >-
               Specifies the default value that will be used in the response's Content-Type header that indicates the type of content to return.
      includeResponseBody:
        type: boolean
        description: >-
               Indicates whether the response should include a body that is a JSON object.
      indexFile:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a file whose contents may be returned to the client if the requested path refers to a directory rather than a file.
      identityMapper:
        type: string
        description: >-
               Specifies the Identity Mapper that is to be used for associating user entries with basic authentication user names.
      includeLDAPObjectclass:
        type: array
        items:
          type: string
        description: >-
               Specifies the LDAP object classes that should be exposed directly as SCIM resources.
      includeStackTrace:
        type: boolean
        description: >-
               Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.
      exposeServerContext:
        type: boolean
        description: >-
               Specifies whether a server context will be exposed under context key 'ubid_server' for all template contexts.
      characterEncoding:
        type: string
        description: >-
               Specifies the value that will be used for all responses' Content-Type headers' charset parameter that indicates the character encoding of the document.
      rejectExpansionAttribute:
        type: array
        items:
          type: string
        description: >-
               A set of attributes which the client is not allowed to provide for the expand query parameters. This should be used for attributes that could either have a large number of values or that reference entries that are very large like groups.
      server:
        type: string
        description: >-
               Specifies the PingFederate server to be configured.
      staticCustomDirectory:
        type: string
        description: >-
               Specifies the base directory in which custom static, non-template content such as images, CSS, and Javascript files are stored on the filesystem. Files in this directory will override those with the same name in the directory specified by the static-content-directory property.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party HTTP Servlet Extension.
      requireAuthentication:
        type: boolean
        description: >-
               Require authentication when accessing Velocity templates.
      includeLDAPBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the base DNs for the branches of the DIT that should be exposed via the Identity Access API.
      description:
        type: string
        description: >-
               A description for this HTTP Servlet Extension
      bearerTokenAuthEnabled:
        type: boolean
        description: >-
               Enables HTTP bearer token authentication.
      labelNameValuePair:
        type: array
        items:
          type: string
        description: >-
               A set of name-value pairs for labels that should be included in all metrics exposed by this Directory Server instance.
      debugLevel:
        type: string
        enum:
        - "severe"
        - "warning"
        - "info"
        - "config"
        - "fine"
        - "finer"
        - "finest"
        description: >-
               The minimum debug level that should be used for messages to be logged.
      degradedStatusCode:
        type: integer
        description: >-
               Specifies the HTTP status code that the servlet should return if the server considers itself to be degraded.
      includeProductNameLabel:
        type: boolean
        description: >-
               Indicates whether generated metrics should include a "product" label whose value is the product name for this Directory Server instance.
      correlationIDResponseHeader:
        type: string
        description: >-
               Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      availableStatusCode:
        type: integer
        description: >-
               Specifies the HTTP status code that the servlet should return if the server considers itself to be available.
      allowedAuthenticationType:
        type: array
        items:
          type: string
          enum:
          - "basic"
          - "access-token"
          - "id-token"
        description: >-
               The types of authentication that may be used to authenticate to the file servlet.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.
      bulkMaxPayloadSize:
        type: string
        description: >-
               The maximum payload size in bytes of a bulk request.
      exposeRequestAttributes:
        type: boolean
        description: >-
               Specifies whether the HTTP request will be exposed to templates.
      allowedControl:
        type: array
        items:
          type: string
          enum:
          - "assertion"
          - "assured-replication"
          - "exclude-branch"
          - "generate-password"
          - "get-effective-rights"
          - "ignore-no-user-modification"
          - "intermediate-client"
          - "join"
          - "manage-dsa-it"
          - "matched-values"
          - "matching-entry-count"
          - "name-with-entryuuid"
          - "no-op"
          - "operation-purpose"
          - "password-update-behavior"
          - "password-validation-details"
          - "permissive-modify"
          - "permit-unindexed-search"
          - "post-read"
          - "pre-read"
          - "proxied-authorization-v1"
          - "proxied-authorization-v2"
          - "purge-password"
          - "real-attributes-only"
          - "reject-unindexed-search"
          - "retire-password"
          - "suppress-referential-integrity"
          - "uniqueness"
          - "virtual-attributes-only"
        description: >-
               Specifies the names of any request controls that should be allowed by the Directory REST API. Any request that contains a critical control not in this list will be rejected. Any non-critical request control which is not supported by the Directory REST API will be removed from the request.
      exposeSessionAttributes:
        type: boolean
        description: >-
               Specifies whether the HTTP session will be exposed to templates.
      enableDirectoryIndexing:
        type: boolean
        description: >-
               Indicates whether to generate a default HTML page with a listing of available files if the requested path refers to a directory rather than a file, and that directory does not contain an index file.
      requireFileServletAccessPrivilege:
        type: boolean
        description: >-
               Indicates whether the servlet extension should only accept requests from authenticated clients that have the file-servlet-access privilege.
      staticContextPath:
        type: string
        description: >-
               The path below the base context path by which static, non-template content such as images, CSS, and Javascript files are accessible.
      maxPageSize:
        type: integer
        description: >-
               The maximum number of entries to be returned in one page of search results.
      overrideStatusCode:
        type: integer
        description: >-
               Specifies a HTTP status code that the servlet should always return, regardless of the server's availability. If this value is defined, it will override the availability-based return codes.
      crossOriginPolicy:
        type: string
        description: >-
               The cross-origin request policy to use for the HTTP Servlet Extension.
      excludeLDAPBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the base DNs for the branches of the DIT that should not be exposed via the Identity Access API.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted HTTP Servlet Extension.
      mapAccessTokensToLocalUsers:
        type: string
        enum:
        - "disabled"
        - "optional"
        - "required"
        description: >-
               Indicates whether the SCIM2 servlet should attempt to map the presented access token to a local user.
      documentRootDirectory:
        type: string
        description: >-
               Specifies the path to the directory on the local filesystem containing the files to be served by this File Server HTTP Servlet Extension. The path must exist, and it must be a directory.
      entityTagLDAPAttribute:
        type: string
        description: >-
               Specifies the LDAP attribute whose value should be used as the entity tag value to enable SCIM resource versioning support.
      temporaryDirectoryPermissions:
        type: string
        description: >-
               Specifies the permissions that should be applied to the directory that is used to create temporary files.
      accessTokenValidator:
        type: array
        items:
          type: string
        description: >-
               If specified, the Access Token Validator(s) that may be used to validate access tokens for requests submitted to this Delegated Admin HTTP Servlet Extension.
      requireGroup:
        type: array
        items:
          type: string
        description: >-
               The DN of a group whose members will be permitted to access to the associated files. If multiple group DNs are configured, then anyone who is a member of at least one of those groups will be granted access.
      staticResponseHeader:
        type: array
        items:
          type: string
        description: >-
               Specifies HTTP header fields and values added to response headers for static content requests such as images and scripts.

  prometheus-monitor-attribute-metric-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/prometheus-monitor-attribute-metric-response'
    required:
    - schemas
    - totalResults
  add-prometheus-monitor-attribute-metric-request:
    allOf:
    - type: object
      properties:
        metricName:
          type: string
          description: >-
              Name of the new Prometheus Monitor Attribute Metric
    - $ref: '#/definitions/prometheus-monitor-attribute-metric-properties'
    required:
    - metricName
  prometheus-monitor-attribute-metric-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Prometheus Monitor Attribute Metric
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/prometheus-monitor-attribute-metric-properties'
    required:
    - id
    - schemas
  prometheus-monitor-attribute-metric-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/prometheus-monitor-attribute-metric-response'
  prometheus-monitor-attribute-metric-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:prometheus-monitor-attribute-metric"
      filter:
        type: string
        description: >-
               A filter that may be used to restrict the set of monitor entries for which the metric should be generated.
      metricType:
        type: string
        enum:
        - "counter"
        - "gauge"
        description: >-
               The metric type that should be used for the value of the specified monitor attribute.
      metricName:
        type: string
        description: >-
               The name that will be used in the metric to be consumed by Prometheus.
      metricDescription:
        type: string
        description: >-
               A human-readable description that should be published as part of the metric definition.
      monitorObjectClassName:
        type: string
        description: >-
               The name of the object class for monitor entries that contain the monitor attribute.
      monitorAttributeName:
        type: string
        description: >-
               The name of the monitor attribute that contains the numeric value to be published.
      labelNameValuePair:
        type: array
        items:
          type: string
        description: >-
               A set of name-value pairs for labels that should be included in the published metric for the target attribute.

  velocity-context-provider-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/velocity-context-provider-response'
    required:
    - schemas
    - totalResults
  add-velocity-context-provider-request:
    allOf:
    - type: object
      properties:
        providerName:
          type: string
          description: >-
              Name of the new Velocity Context Provider
    - $ref: '#/definitions/velocity-context-provider-properties'
    required:
    - providerName
  velocity-context-provider-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Velocity Context Provider
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/velocity-context-provider-properties'
    required:
    - id
    - schemas
  velocity-context-provider-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/velocity-context-provider-response'
  velocity-context-provider-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:velocity-tools"
          - "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:custom"
          - "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:third-party"
      applicationTool:
        type: array
        items:
          type: string
        description: >-
               The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Velocity Context Provider.
      includedView:
        type: array
        items:
          type: string
        description: >-
               The name of a view for which this Velocity Context Provider will contribute content.
      excludedView:
        type: array
        items:
          type: string
        description: >-
               The name of a view for which this Velocity Context Provider will not contribute content.
      sessionTool:
        type: array
        items:
          type: string
        description: >-
               The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
      responseHeader:
        type: array
        items:
          type: string
        description: >-
               Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity Context Provider contributes content.
      requestTool:
        type: array
        items:
          type: string
        description: >-
               The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
      objectScope:
        type: string
        enum:
        - "application"
        - "session"
        - "request"
        description: >-
               Scope for context objects contributed by this Velocity Context Provider. Must be either 'request' or 'session' or 'application'.
      httpMethod:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to fulfill the request before updating the context for the response. The values of this property are not case-sensitive.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not contribute context content for any requests.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Velocity Context Provider. Each configuration property should be given in the form 'name=value'.

  velocity-template-loader-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/velocity-template-loader-response'
    required:
    - schemas
    - totalResults
  add-velocity-template-loader-request:
    allOf:
    - type: object
      properties:
        loaderName:
          type: string
          description: >-
              Name of the new Velocity Template Loader
    - $ref: '#/definitions/velocity-template-loader-properties'
    required:
    - loaderName
  velocity-template-loader-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Velocity Template Loader
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/velocity-template-loader-properties'
    required:
    - id
    - schemas
  velocity-template-loader-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/velocity-template-loader-response'
  velocity-template-loader-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:velocity-template-loader"
      mimeTypeMatcher:
        type: string
        description: >-
               Specifies a media type for matching Accept request-header values.
      templateSuffix:
        type: string
        description: >-
               Specifies the suffix to append to the requested resource name when searching for the template file with which to form a response.
      evaluationOrderIndex:
        type: integer
        description: >-
               This property determines the evaluation order for determining the correct Velocity Template Loader to load a template for generating content for a particular request.
      mimeType:
        type: string
        description: >-
               Specifies a the value that will be used in the response's Content-Type header that indicates the type of content to return.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Velocity Template Loader is enabled.
      templateDirectory:
        type: string
        description: >-
               Specifies the directory in which to search for the template files.

  client-connection-policy-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/client-connection-policy-response'
    required:
    - schemas
    - totalResults
  add-client-connection-policy-request:
    allOf:
    - type: object
      properties:
        policyName:
          type: string
          description: >-
              Name of the new Client Connection Policy
    - $ref: '#/definitions/client-connection-policy-properties'
    required:
    - policyName
  client-connection-policy-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Client Connection Policy
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/client-connection-policy-properties'
    required:
    - id
    - schemas
  client-connection-policy-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/client-connection-policy-response'
  client-connection-policy-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:client-connection-policy"
      maximumSearchLookthroughLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that may be examined by a backend in the course of processing a search requested by clients associated with this Client Connection Policy.
      minimumSubstringLength:
        type: integer
        description: >-
               Specifies the minimum number of consecutive bytes that must be present in any subInitial, subAny, or subFinal element of a substring filter component (i.e., the minimum number of consecutive bytes between wildcard characters in a substring filter). Any attempt to use a substring search with an element containing fewer than this number of bytes will be rejected.
      connectionOperationRateExceededBehavior:
        type: string
        enum:
        - "disconnect"
        - "reject-admin-limit-exceeded"
        - "reject-constraint-violation"
        - "reject-busy"
        - "reject-unavailable"
        - "reject-unwilling-to-perform"
        - "reject-other"
        description: >-
               Specifies the behavior that the Directory Server should exhibit if a client connection attempts to exceed a rate defined in the maximum-connection-operation-rate property. If the configured behavior is one that will reject requested operations, then that behavior will persist until the end of the corresponding interval. The server will resume allowing that client to perform operations when that interval expires, as long as no other operation rate limits have been exceeded.
      maximumIdleConnectionDuration:
        type: string
        description: >-
               Specifies the maximum length of time that a connection associated with this Client Connection Policy may remain established after the completion of the last operation processed on that connection. Any new operation requested on the connection will reset this timer. Any connection associated with this Client Connection Policy which has been idle for longer than this length of time may be terminated.
      description:
        type: string
        description: >-
               A description for this Client Connection Policy
      allowedExtendedOperation:
        type: array
        items:
          type: string
        description: >-
               Specifies the OIDs of the extended operations that clients associated with this Client Connection Policy will be allowed to request.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Client Connection Policy is enabled for use in the server. If a Client Connection Policy is disabled, then no new client connections will be associated with it.
      maximumConcurrentConnections:
        type: integer
        description: >-
               Specifies the maximum number of client connections which may be associated with this Client Connection Policy at any given time.
      policyID:
        type: string
        description: >-
               Specifies a name which uniquely identifies this Client Connection Policy in the server.
      deniedSASLMechanism:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the SASL mechanisms that clients associated with this Client Connection Policy will not be allowed to request.
      maximumConnectionOperationRate:
        type: array
        items:
          type: string
        description: >-
               Specifies the maximum rate at which a client associated with this Client Connection Policy may issue requests to the Directory Server. If any client attempts to request operations at a rate higher than this limit, then the server will exhibit the behavior described in the connection-operation-rate-exceeded-behavior property.
      maximumConnectionDuration:
        type: string
        description: >-
               Specifies the maximum length of time that a connection associated with this Client Connection Policy may be established. Any connection which is associated with this Client Connection Policy and has been established for longer than this period of time may be terminated.
      evaluationOrderIndex:
        type: integer
        description: >-
               Specifies the order in which Client Connection Policy definitions will be evaluated. A Client Connection Policy with a lower index will be evaluated before one with a higher index, and the first Client Connection Policy evaluated which may apply to a client connection will be used for that connection. Each Client Connection Policy must be assigned a unique evaluation order index value.
      requiredOperationRequestCriteria:
        type: string
        description: >-
               Specifies a request criteria object that will be required to match all requests submitted by clients associated with this Client Connection Policy. If a client submits a request that does not satisfy this request criteria object, then that request will be rejected.
      maximumSearchSizeLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that may be returned for a search performed by a client associated with this Client Connection Policy.
      maximumSearchTimeLimit:
        type: string
        description: >-
               Specifies the maximum length of time that the server should spend processing search operations requested by clients associated with this Client Connection Policy.
      terminateConnection:
        type: boolean
        description: >-
               Indicates whether any client connection for which this Client Connection Policy is selected should be terminated. This makes it possible to define fine-grained criteria for clients that should not be allowed to connect to this Directory Server.
      policyOperationRateExceededBehavior:
        type: string
        enum:
        - "disconnect"
        - "reject-admin-limit-exceeded"
        - "reject-constraint-violation"
        - "reject-busy"
        - "reject-unavailable"
        - "reject-unwilling-to-perform"
        - "reject-other"
        description: >-
               Specifies the behavior that the Directory Server should exhibit if a client connection attempts to exceed a rate defined in the maximum-policy-operation-rate property. If the configured behavior is one that will reject requested operations, then that behavior will persist until the end of the corresponding interval. The server will resume allowing clients associated with this Client Connection Policy to perform operations when that interval expires, as long as no other operation rate limits have been exceeded.
      maximumSortSizeLimitWithoutVLVIndex:
        type: integer
        description: >-
               Specifies the maximum number of entries that the server will attempt to sort without the benefit of a VLV index. A value of zero indicates that no limit should be enforced.
      allowedOperation:
        type: array
        items:
          type: string
          enum:
          - "abandon"
          - "add"
          - "bind"
          - "compare"
          - "delete"
          - "extended"
          - "modify"
          - "modify-dn"
          - "search"
        description: >-
               Specifies the types of operations that clients associated with this Client Connection Policy will be allowed to request.
      maximumLDAPJoinSizeLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that may be joined with any single search result entry for a search request performed by a client associated with this Client Connection Policy.
      maximumConcurrentOperationWaitTimeBeforeRejecting:
        type: string
        description: >-
               Specifies the maximum length of time that the server should wait for an outstanding operation to complete before rejecting a new request received when the maximum number of outstanding operations are already in progress on that connection. If an existing outstanding operation on the connection completes before this time, then the operation will be processed. Otherwise, the operation will be rejected with a "busy" result.
      deniedRequestControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OIDs of the controls that clients associated with this Client Connection Policy will not be allowed to include in requests.
      allowUnindexedSearchesWithControl:
        type: boolean
        description: >-
               Indicates whether clients will be allowed to request search operations that cannot be efficiently processed using the set of indexes defined in the corresponding backend, as long as the search request also includes the permit unindexed search request control and the requester has the unindexed-search-with-control privilege (or that privilege is disabled in the global configuration).
      deniedExtendedOperation:
        type: array
        items:
          type: string
        description: >-
               Specifies the OIDs of the extended operations that clients associated with this Client Connection Policy will not be allowed to request.
      allowedSASLMechanism:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the SASL mechanisms that clients associated with this Client Connection Policy will be allowed to request.
      allowedRequestControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OIDs of the controls that clients associated with this Client Connection Policy will be allowed to include in requests.
      maximumConcurrentOperationsPerConnection:
        type: integer
        description: >-
               Specifies the maximum number of concurrent operations that can be in progress for any connection. This can help prevent a single client connection from monopolizing server processing resources by sending a large number of concurrent asynchronous requests. A value of zero indicates that no limit will be placed on the number of concurrent requests for a single client.
      maximumConcurrentOperationsPerConnectionExceededBehavior:
        type: string
        enum:
        - "disconnect"
        - "reject-admin-limit-exceeded"
        - "reject-constraint-violation"
        - "reject-busy"
        - "reject-unavailable"
        - "reject-unwilling-to-perform"
        - "reject-other"
        description: >-
               Specifies the behavior that the Directory Server should exhibit if a client attempts to invoke more concurrent operations on a single connection than allowed by the maximum-concurrent-operations-per-connection property.
      excludedBackendBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of backend base DNs for which subtree views should be excluded from this Client Connection Policy.
      prohibitedOperationRequestCriteria:
        type: string
        description: >-
               Specifies a request criteria object that must not match any requests submitted by clients associated with this Client Connection Policy. If a client submits a request that satisfies this request criteria object, then that request will be rejected.
      allowedFilterType:
        type: array
        items:
          type: string
          enum:
          - "and"
          - "or"
          - "not"
          - "equality"
          - "sub-initial"
          - "sub-any"
          - "sub-final"
          - "greater-or-equal"
          - "less-or-equal"
          - "present"
          - "approximate-match"
          - "extensible-match"
        description: >-
               Specifies the types of filter components that may be included in search requests from clients associated with this Client Connection Policy which have a non-baseObject scope.
      allowUnindexedSearches:
        type: boolean
        description: >-
               Indicates whether clients will be allowed to request search operations that cannot be efficiently processed using the set of indexes defined in the corresponding backend. Note that even if this is false, some clients may be able to request unindexed searches if the allow-unindexed-searches-with-control property has a value of true and the necessary conditions are satisfied.
      resultCodeMap:
        type: string
        description: >-
               Specifies the result code map that should be used for clients associated with this Client Connection Policy. If a value is defined for this property, then it will override any result code map referenced in the global configuration.
      includedBackendBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of backend base DNs for which subtree views should be included in this Client Connection Policy.
      connectionCriteria:
        type: string
        description: >-
               Specifies a set of connection criteria that must match the associated client connection for it to be associated with this Client Connection Policy.
      maximumOperationCountPerConnection:
        type: integer
        description: >-
               Specifies the maximum number of operations that may be requested by any client connection associated with this Client Connection Policy. If an attempt is made to process more than this number of operations on a client connection, then that connection will be terminated.
      allowedAuthType:
        type: array
        items:
          type: string
          enum:
          - "simple"
          - "sasl"
        description: >-
               Specifies the types of authentication that clients associated with this Client Connection Policy will be allowed to request.
      excludeGlobalSensitiveAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of global sensitive attribute definitions that should not apply to this client connection policy.
      sensitiveAttribute:
        type: array
        items:
          type: string
        description: >-
               Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be in place when interacting with those attributes.
      maximumPolicyOperationRate:
        type: array
        items:
          type: string
        description: >-
               Specifies the maximum rate at which all clients associated with this Client Connection Policy, as a collective set, may issue requests to the Directory Server. If this limit is exceeded, then the server will exhibit the behavior described in the policy-operation-rate-exceeded-behavior property.

  matching-rule-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/matching-rule-response'
    required:
    - schemas
    - totalResults
  add-matching-rule-request:
    allOf:
    - type: object
      properties:
        ruleName:
          type: string
          description: >-
              Name of the new Matching Rule
    - $ref: '#/definitions/matching-rule-properties'
    required:
    - ruleName
  matching-rule-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Matching Rule
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/matching-rule-properties'
    required:
    - id
    - schemas
  matching-rule-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/matching-rule-response'
  matching-rule-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:matching-rule:ordering"
          - "urn:pingidentity:schemas:configuration:2.0:matching-rule:approximate"
          - "urn:pingidentity:schemas:configuration:2.0:matching-rule:equality"
          - "urn:pingidentity:schemas:configuration:2.0:matching-rule:substring"
          - "urn:pingidentity:schemas:configuration:2.0:matching-rule:generic"
      enabled:
        type: boolean
        description: >-
               Indicates whether the Matching Rule is enabled for use.

  virtual-attribute-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/virtual-attribute-response'
    required:
    - schemas
    - totalResults
  add-virtual-attribute-request:
    allOf:
    - type: object
      properties:
        name:
          type: string
          description: >-
              Name of the new Virtual Attribute
    - $ref: '#/definitions/virtual-attribute-properties'
    required:
    - name
  virtual-attribute-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Virtual Attribute
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/virtual-attribute-properties'
    required:
    - id
    - schemas
  virtual-attribute-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/virtual-attribute-response'
  virtual-attribute-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:mirror"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:entry-checksum"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:member-of-server-group"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:constructed"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:is-member-of"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:custom"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:num-subordinates"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:reverse-dn-join"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:identify-references"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:user-defined"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:current-time"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:short-unique-id"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:entry-dn"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:has-subordinates"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:equality-join"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:instance-name"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:replication-state-detail"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:member"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:password-policy-state-json"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:subschema-subentry"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:dn-join"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Virtual Attribute.
      multipleVirtualAttributeEvaluationOrderIndex:
        type: integer
        description: >-
               Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
      sequenceNumberAttribute:
        type: string
        description: >-
               Specifies the name or OID of the attribute which contains the sequence number from which unique identifiers are generated. The attribute should have Integer syntax or a String syntax permitting integer values. If this property is modified then the filter property should be updated accordingly so that only entries containing the sequence number attribute are eligible to have a value generated for this virtual attribute.
      excludedAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the attributes that should be excluded from the checksum calculation.
      description:
        type: string
        description: >-
               A description for this Virtual Attribute
      joinFilter:
        type: string
        description: >-
               An optional filter that specifies additional criteria for identifying joined entries. If a join-filter value is specified, then only entries matching that filter (in addition to satisfying the other join criteria) will be joined with the search result entry.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Virtual Attribute is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Virtual Attribute. Each configuration property should be given in the form 'name=value'.
      joinAttribute:
        type: array
        items:
          type: string
        description: >-
               An optional set of the names of the attributes to include with joined entries.
      referenceSearchBaseDN:
        type: array
        items:
          type: string
        description: >-
               The base DN that will be used when searching for references to the target entry. If no reference search base DN is specified, the default behavior will be to search below all public naming contexts configured in the server.
      directMembershipsOnly:
        type: boolean
        description: >-
               Specifies whether to only include groups in which the user is directly associated with and the membership maybe modified via the group entry. Groups in which the user's membership is derived dynamically or through nested groups will not be included.
      includedGroupFilter:
        type: string
        description: >-
               A search filter that will be used to identify which groups should be included in the values of the virtual attribute. With no value defined (which is the default behavior), all groups that contain the target user will be included.
      joinSizeLimit:
        type: integer
        description: >-
               The maximum number of entries that may be joined with the source entry, which also corresponds to the maximum number of values that the virtual attribute provider will generate for an entry.
      joinCustomBaseDN:
        type: string
        description: >-
               The fixed, administrator-specified base DN for the internal searches used to identify joined entries.
      attributeType:
        type: string
        description: >-
               Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
      joinScope:
        type: string
        enum:
        - "base-object"
        - "single-level"
        - "whole-subtree"
        - "subordinate-subtree"
        description: >-
               The scope for searches used to identify joined entries.
      sourceEntryDNAttribute:
        type: string
        description: >-
               Specifies the attribute containing the DN of another entry from which to obtain the source attribute providing the values for this virtual attribute.
      sourceEntryDNMap:
        type: string
        description: >-
               Specifies a DN map that will be used to identify the entry from which to obtain the source attribute providing the values for this virtual attribute.
      conflictBehavior:
        type: string
        enum:
        - "real-overrides-virtual"
        - "virtual-overrides-real"
        - "merge-real-and-virtual"
        description: >-
               Specifies the behavior that the server is to exhibit for entries that already contain one or more real values for the associated attribute.
      allowIndexConflicts:
        type: boolean
        description: >-
               Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      returnUtcTime:
        type: boolean
        description: >-
               Indicates whether to return current time in UTC.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Virtual Attribute. Each configuration property should be given in the form 'name=value'.
      sourceAttribute:
        type: string
        description: >-
               Specifies the source attribute containing the values to use for this virtual attribute.
      baseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
      includeMilliseconds:
        type: boolean
        description: >-
               Indicates whether the current time includes millisecond precision.
      value:
        type: array
        items:
          type: string
        description: >-
               Specifies the values to be included in the virtual attribute.
      rewriteSearchFilters:
        type: string
        enum:
        - "always"
        - "within-group-scope"
        - "never"
        description: >-
               Search filters that include Is Member Of Virtual Attribute searches on dynamic groups can be updated to include the dynamic group filter in the search filter itself. This can allow the backend to more efficiently process the search filter by using attribute indexes sooner in the search processing.
      joinSourceAttribute:
        type: string
        description: >-
               The attribute containing the value(s) in the source entry to use to identify related entries.
      joinBaseDNType:
        type: string
        enum:
        - "use-search-base-dn"
        - "use-source-entry-dn"
        - "use-custom-base-dn"
        description: >-
               Specifies how server should determine the base DN for the internal searches used to identify joined entries.
      valuePattern:
        type: array
        items:
          type: string
        description: >-
               Specifies a pattern for constructing the virtual attribute value using fixed text and attribute values from the entry.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Virtual Attribute.
      excludeOperationalAttributes:
        type: boolean
        description: >-
               Indicates whether all operational attributes should be excluded from the generated checksum.
      joinMatchAll:
        type: boolean
        description: >-
               Indicates whether joined entries will be required to have all values for the source attribute, or only at least one of its values.
      referencedByAttribute:
        type: array
        items:
          type: string
        description: >-
               The name or OID of an attribute type whose values will be searched for references to the target entry. The attribute type must be defined in the server schema, must have a syntax of either "distinguished name" or "name and optional UID", and must be indexed for equality.
      filter:
        type: array
        items:
          type: string
        description: >-
               Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
      groupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
      allowRetrievingMembership:
        type: boolean
        description: >-
               Indicates whether to handle requests that request all values for the virtual attribute.
      bypassAccessControlForSearches:
        type: boolean
        description: >-
               Indicates whether searches performed by this virtual attribute provider should be exempted from access control restrictions.
      clientConnectionPolicy:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
      multipleVirtualAttributeMergeBehavior:
        type: string
        enum:
        - "use-first-definition"
        - "use-only-definitions-with-the-lowest-evaluation-order-index"
        - "use-all-definitions"
        description: >-
               Specifies the behavior that will be exhibited for cases in which multiple virtual attribute definitions apply to the same multivalued attribute type. This will be ignored for single-valued attribute types.
      joinDNAttribute:
        type: string
        description: >-
               The attribute in related entries whose set of values must contain the DN of the search result entry to be joined with that entry.
      joinTargetAttribute:
        type: string
        description: >-
               The attribute in target entries whose value(s) match values of the source attribute in the source entry.
      requireExplicitRequestByName:
        type: boolean
        description: >-
               Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.

  notification-manager-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/notification-manager-response'
    required:
    - schemas
    - totalResults
  add-notification-manager-request:
    allOf:
    - type: object
      properties:
        managerName:
          type: string
          description: >-
              Name of the new Notification Manager
    - $ref: '#/definitions/notification-manager-properties'
    required:
    - managerName
  notification-manager-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Notification Manager
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/notification-manager-properties'
    required:
    - id
    - schemas
  notification-manager-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/notification-manager-response'
  notification-manager-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:notification-manager"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Notification Manager.
      transactionNotification:
        type: string
        enum:
        - "individual"
        - "matched-operations"
        - "all-operations"
        description: >-
               Specifies how the operations in an external transaction (e.g. a multi-update extended operation or an LDAP transaction) are notified for this Notification Manager.
      monitorEntriesEnabled:
        type: boolean
        description: >-
               Enables monitor entries for this Notification Manager.
      subscriptionBaseDN:
        type: string
        description: >-
               Specifies the DN of the entry below which subscription data is stored for this Notification Manager. This needs to be in the backend that has the data to be notified on, and must not be the same entry as the backend base DN. The subscription base DN entry does not need to exist as it will be created by the server.
      description:
        type: string
        description: >-
               A description for this Notification Manager
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Notification Manager. Each configuration property should be given in the form 'name=value'.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Notification Manager is enabled within the server.

  result-criteria-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/result-criteria-response'
    required:
    - schemas
    - totalResults
  add-result-criteria-request:
    allOf:
    - type: object
      properties:
        criteriaName:
          type: string
          description: >-
              Name of the new Result Criteria
    - $ref: '#/definitions/result-criteria-properties'
    required:
    - criteriaName
  result-criteria-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Result Criteria
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/result-criteria-properties'
    required:
    - id
    - schemas
  result-criteria-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/result-criteria-response'
  result-criteria-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:result-criteria:simple"
          - "urn:pingidentity:schemas:configuration:2.0:result-criteria:aggregate"
          - "urn:pingidentity:schemas:configuration:2.0:result-criteria:replication-assurance"
          - "urn:pingidentity:schemas:configuration:2.0:result-criteria:third-party"
      notAllIncludedResultCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a result criteria object that should not match the associated operation result in order to match the aggregate result criteria. If one or more not-all-included result criteria objects are provided, then an operation result must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate result criteria.
      searchReferenceReturnedCount:
        type: integer
        description: >-
               Specifies the target number of references returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the "search-reference-criteria" property has a value of "any".
      responseDelayedByAssurance:
        type: string
        enum:
        - "any"
        - "true"
        - "false"
        description: >-
               Indicates whether this Replication Assurance Result Criteria should match operations based on whether the response to the client was delayed by assurance processing.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Result Criteria.
      allIncludedResponseControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that must be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain all of those controls.
      noneIncludedResponseControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that must not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain any of those controls.
      usedAlternateAuthzid:
        type: string
        enum:
        - "required"
        - "prohibited"
        - "optional"
        description: >-
               Indicates whether operation results in which the associated operation used an authorization identity that is different from the authentication identity (e.g., as the result of using a proxied authorization control) should be included in this Simple Result Criteria. If no value is provided, then whether an operation used an alternate authorization identity will not be considered when determining whether it matches this Simple Result Criteria.
      retiredPasswordUsedForBind:
        type: string
        enum:
        - "any"
        - "retired-password-used"
        - "retired-password-not-used"
        description: >-
               Indicates whether the use of a retired password for authentication should be considered when determining whether a bind operation should be included in this Simple Result Criteria. This will be ignored for all operations other than bind.
      excludedAuthzUserBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies a base DN below which authorization user entries may exist for operations excluded from this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
      anyIncludedResultCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a result criteria object that may match the associated operation result in order to match the aggregate result criteria. If one or more any-included result criteria objects are provided, then an operation result must match at least one of them in order to match the aggregate result criteria.
      assuranceBehaviorAlteredByControl:
        type: string
        enum:
        - "any"
        - "true"
        - "false"
        description: >-
               Indicates whether this Replication Assurance Result Criteria should match operations based on whether the assurance requirements were altered by a control included in the request from the client.
      referralReturned:
        type: string
        enum:
        - "required"
        - "prohibited"
        - "optional"
        description: >-
               Indicates whether operation results which include one or more referral URLs should be included in this Simple Result Criteria. If no value is provided, then whether an operation includes any referral URLs will not be considered when determining whether it matches this Simple Result Criteria.
      includedAuthzUserBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies a base DN below which authorization user entries may exist for operations included in this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
      allIncludedResultCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a result criteria object that must match the associated operation result in order to match the aggregate result criteria. If one or more all-included result criteria objects are provided, then an operation result must match all of them in order to match the aggregate result criteria.
      assuranceTimeoutValue:
        type: string
        description: >-
               The value to use for performing matching based on the assurance timeout. This will be ignored if the assurance-timeout-criteria is "any".
      description:
        type: string
        description: >-
               A description for this Result Criteria
      anyIncludedAuthzUserGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which authorization users may exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of at least one of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Result Criteria. Each configuration property should be given in the form 'name=value'.
      searchEntryReturnedCriteria:
        type: string
        enum:
        - "any"
        - "equal-to"
        - "not-equal-to"
        - "less-than-or-equal-to"
        - "greater-than-or-equal-to"
        description: >-
               Indicates whether the number of entries returned should be considered when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search.
      searchEntryReturnedCount:
        type: integer
        description: >-
               Specifies the target number of entries returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the "search-entry-criteria" property has a value of "any".
      missingAnyPrivilege:
        type: string
        enum:
        - "required"
        - "prohibited"
        - "optional"
        description: >-
               Indicates whether operations in which one or more privileges were missing should be included in this Simple Result Criteria. If no value is provided, then whether there were any missing privileges will not be considered when determining whether an operation matches this Simple Result Criteria.
      assuranceSatisfied:
        type: string
        enum:
        - "any"
        - "both-satisfied"
        - "either-satisfied"
        - "at-least-local-satisfied"
        - "at-least-remote-satisfied"
        - "only-local-satisfied"
        - "only-remote-satisfied"
        - "either-not-satisfied"
        - "at-least-local-not-satisfied"
        - "at-least-remote-not-satisfied"
        - "neither-satisfied"
        description: >-
               Indicates whether this Replication Assurance Result Criteria should match operations based on whether the assurance requirements have been satisfied.
      missingPrivilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "use-admin-session"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               Specifies the name of a privilege that must have been missing during the processing for operations included in this Simple Result Criteria. If any privilege names are provided, then the associated operation must have been missing at least one of those privileges. If no privilege names were provided, then the set of privileges missing will not be considered when determining whether an operation should be included in this Simple Result Criteria.
      processingTimeCriteria:
        type: string
        enum:
        - "any"
        - "less-than-or-equal-to"
        - "greater-than-or-equal-to"
        description: >-
               Indicates whether the time required to process the operation should be taken into consideration when determining whether to include the operation in this Simple Result Criteria. If the processing time should be taken into account, then the "processing-time-value" property should contain the boundary value.
      assuranceTimeoutCriteria:
        type: string
        enum:
        - "any"
        - "less-than-or-equal-to"
        - "greater-than-or-equal-to"
        description: >-
               The criteria to use when performing matching based on the assurance timeout.
      searchIndexedCriteria:
        type: string
        enum:
        - "any"
        - "indexed"
        - "unindexed"
        description: >-
               Indicates whether a search operation should be matched by this Simple Result Criteria based on whether it is considered indexed by the server. This will be ignored for all operations other than search.
      queueTimeValue:
        type: string
        description: >-
               Specifies the boundary value to use for the time an operation spent on the work queue when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the "queue-time-criteria" property has a value of "any".
      requestCriteria:
        type: string
        description: >-
               Specifies a request criteria object that must match the associated request for operations included in this Simple Result Criteria.
      resultCodeValue:
        type: array
        items:
          type: string
          enum:
          - "success"
          - "operations-error"
          - "protocol-error"
          - "time-limit-exceeded"
          - "size-limit-exceeded"
          - "compare-false"
          - "compare-true"
          - "auth-method-not-supported"
          - "strong-auth-required"
          - "referral"
          - "admin-limit-exceeded"
          - "unavailable-critical-extension"
          - "confidentiality-required"
          - "sasl-bind-in-progress"
          - "no-such-attribute"
          - "undefined-attribute-type"
          - "inappropriate-matching"
          - "constraint-violation"
          - "attribute-or-value-exists"
          - "invalid-attribute-syntax"
          - "no-such-object"
          - "alias-problem"
          - "invalid-dn-syntax"
          - "alias-dereferencing-problem"
          - "inappropriate-authentication"
          - "invalid-credentials"
          - "insufficient-access-rights"
          - "busy"
          - "unavailable"
          - "unwilling-to-perform"
          - "loop-detect"
          - "sort-control-missing"
          - "offset-range-error"
          - "naming-violation"
          - "objectclass-violation"
          - "not-allowed-on-nonleaf"
          - "not-allowed-on-rdn"
          - "entry-already-exists"
          - "objectclass-mods-prohibited"
          - "affects-multiple-dsas"
          - "virtual-list-view-error"
          - "other"
          - "canceled"
          - "no-such-operation"
          - "too-late"
          - "cannot-cancel"
          - "assertion-failed"
          - "authorization-denied"
          - "no-operation"
          - "interactive-transaction-aborted"
          - "database-lock-conflict"
          - "mirrored-subtree-digest-mismatch"
          - "token-delivery-mechanism-unavailable"
          - "token-delivery-attempt-failed"
          - "token-delivery-invalid-recipient-id"
          - "token-delivery-invalid-account-state"
        description: >-
               Specifies the operation result code values for results included in this Simple Result Criteria. This will only be taken into account if the "result-code-criteria" property has a value of "selected-result-codes".
      anyIncludedResponseControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that may be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain at least one of those controls.
      remoteAssuranceLevel:
        type: array
        items:
          type: string
          enum:
          - "none"
          - "received-any-remote-location"
          - "received-all-remote-locations"
          - "processed-all-remote-servers"
        description: >-
               The local assurance level values that will be allowed to match this Replication Assurance Result Criteria.
      queueTimeCriteria:
        type: string
        enum:
        - "any"
        - "less-than-or-equal-to"
        - "greater-than-or-equal-to"
        description: >-
               Indicates whether the time the operation was required to wait on the work queue should be taken into consideration when determining whether to include the operation in this Simple Result Criteria. If the queue time should be taken into account, then the "queue-time-value" property should contain the boundary value. This property should only be given a value other than "any" if the work queue has been configured to monitor the time operations have spent on the work queue.
      notAllIncludedAuthzUserGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which authorization users should not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
      resultCodeCriteria:
        type: string
        enum:
        - "all-result-codes"
        - "non-failure-result-codes"
        - "failure-result-codes"
        - "selected-result-codes"
        description: >-
               Specifies which operation result codes are allowed for operations included in this Simple Result Criteria.
      searchReferenceReturnedCriteria:
        type: string
        enum:
        - "any"
        - "equal-to"
        - "not-equal-to"
        - "less-than-or-equal-to"
        - "greater-than-or-equal-to"
        description: >-
               Indicates whether the number of references returned should be considered when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search.
      localAssuranceLevel:
        type: array
        items:
          type: string
          enum:
          - "none"
          - "received-any-server"
          - "processed-all-servers"
        description: >-
               The local assurance level values that will be allowed to match this Replication Assurance Result Criteria.
      usedAnyPrivilege:
        type: string
        enum:
        - "required"
        - "prohibited"
        - "optional"
        description: >-
               Indicates whether operations in which one or more privileges were used should be included in this Simple Result Criteria. If no value is provided, then whether an operation used any privileges will not be considered when determining whether it matches this Simple Result Criteria.
      noneIncludedAuthzUserGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which authorization users must not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member any of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
      usedPrivilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "use-admin-session"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-externally-processed-authentication"
          - "permit-export-reversible-passwords"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               Specifies the name of a privilege that must have been used during the processing for operations included in this Simple Result Criteria. If any privilege names are provided, then the associated operation must have used at least one of those privileges. If no privilege names were provided, then the set of privileges used will not be considered when determining whether an operation should be included in this Simple Result Criteria.
      notAllIncludedResponseControl:
        type: array
        items:
          type: string
        description: >-
               Specifies the OID of a control that should not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain at least one of those controls (that is, the response may contain zero or more of those controls, but not all of them).
      allIncludedAuthzUserGroupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DN of a group in which authorization users must exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of all of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
      processingTimeValue:
        type: string
        description: >-
               Specifies the boundary value to use for the operation processing time when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the "processing-time-criteria" property has a value of "any".
      noneIncludedResultCriteria:
        type: array
        items:
          type: string
        description: >-
               Specifies a result criteria object that must not match the associated operation result in order to match the aggregate result criteria. If one or more none-included result criteria objects are provided, then an operation result must not match any of them in order to match the aggregate result criteria.

  identity-mapper-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/identity-mapper-response'
    required:
    - schemas
    - totalResults
  add-identity-mapper-request:
    allOf:
    - type: object
      properties:
        mapperName:
          type: string
          description: >-
              Name of the new Identity Mapper
    - $ref: '#/definitions/identity-mapper-properties'
    required:
    - mapperName
  identity-mapper-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Identity Mapper
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/identity-mapper-properties'
    required:
    - id
    - schemas
  identity-mapper-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/identity-mapper-response'
  identity-mapper-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:exact-match"
          - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:regular-expression"
          - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:aggregate"
          - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:third-party"
      replacePattern:
        type: string
        description: >-
               Specifies the replacement pattern that should be used for substrings in the ID string that match the provided regular expression pattern.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Identity Mapper.
      matchAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the attribute whose value should exactly match the ID string provided to this identity mapper.
      description:
        type: string
        description: >-
               A description for this Identity Mapper
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Identity Mapper.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Identity Mapper is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Identity Mapper. Each configuration property should be given in the form 'name=value'.
      allIncludedIdentityMapper:
        type: array
        items:
          type: string
        description: >-
               The set of identity mappers that must all match the target entry. Each identity mapper must uniquely match the same target entry. If any of the identity mappers match multiple entries, if any of them match zero entries, or if any of them match different entries, then the mapping will fail.
      anyIncludedIdentityMapper:
        type: array
        items:
          type: string
        description: >-
               The set of identity mappers that will be used to identify the target entry. At least one identity mapper must uniquely match an entry. If multiple identity mappers match entries, then they must all uniquely match the same entry. If none of the identity mappers match any entries, if any of them match multiple entries, or if any of them match different entries, then the mapping will fail.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Identity Mapper. Each configuration property should be given in the form 'name=value'.
      matchFilter:
        type: string
        description: >-
               An optional filter that mapped users must match.
      matchPattern:
        type: string
        description: >-
               Specifies the regular expression pattern that is used to identify portions of the ID string that will be replaced.
      matchBaseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of base DNs below which to search for users.

  recurring-task-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/recurring-task-response'
    required:
    - schemas
    - totalResults
  add-recurring-task-request:
    allOf:
    - type: object
      properties:
        taskName:
          type: string
          description: >-
              Name of the new Recurring Task
    - $ref: '#/definitions/recurring-task-properties'
    required:
    - taskName
  recurring-task-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Recurring Task
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/recurring-task-properties'
    required:
    - id
    - schemas
  recurring-task-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/recurring-task-response'
  recurring-task-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:generate-server-profile"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:leave-lockdown-mode"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:backup"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:delay"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:statically-defined"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:collect-support-data"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:ldif-export"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:enter-lockdown-mode"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:audit-data-security"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:exec"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:file-retention"
          - "urn:pingidentity:schemas:configuration:2.0:recurring-task:third-party"
      reason:
        type: string
        description: >-
               The reason that the server is being taken out of in lockdown mode.
      logDuration:
        type: string
        description: >-
               The maximum age (leading up to the time the collect-support-data tool was invoked) for log content to include in the support data archive.
      searchInterval:
        type: string
        description: >-
               The length of time the server should sleep between searches performed using the criteria from the ldap-url-for-search-expected-to-return-entries property.
      workingDirectory:
        type: string
        description: >-
               The absolute path to a working directory where the command should be executed. It must be an absolute path and the corresponding directory must exist.
      includeReplicationStateDump:
        type: boolean
        description: >-
               Indicates whether the support data archive should include a replication state dump, which may be several megabytes in size.
      targetDirectory:
        type: string
        description: >-
               The path to the directory containing the files to examine. The directory must exist.
      alertOnStart:
        type: boolean
        description: >-
               Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
      sign:
        type: boolean
        description: >-
               Indicates whether to cryptographically sign backups, which will make it possible to detect whether the backup has been altered since it was created.
      includePath:
        type: array
        items:
          type: string
        description: >-
               An optional set of additional paths to files within the instance root that should be included in the generated server profile. All paths must be within the instance root, and relative paths will be relative to the instance root.
      maxMegabytesPerSecond:
        type: integer
        description: >-
               The maximum rate, in megabytes per second, at which backups should be written.
      searchTimeLimit:
        type: string
        description: >-
               The length of time that the server will wait for a response to each internal search performed using the criteria from the ldap-url-for-search-expected-to-return-entries property.
      profileDirectory:
        type: string
        description: >-
               The directory in which the generated server profiles will be placed. The files will be named with the pattern "server-profile-{timestamp}.zip", where "{timestamp}" represents the time that the profile was generated.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Recurring Task. Each configuration property should be given in the form 'name=value'.
      taskAttributeValue:
        type: array
        items:
          type: string
        description: >-
               The set of attribute values that should be included in the tasks that are scheduled from this Statically Defined Recurring Task. Each value must be in the form {attribute-type}={value}, where {attribute-type} is the name or OID of an attribute type that is defined in the schema and permitted with the configured set of object classes, and {value} is a value to assign to an attribute with that type. A multivalued attribute can be created by providing multiple name-value pairs with the same name and different values.
      useSequentialMode:
        type: boolean
        description: >-
               Indicates whether to capture support data information sequentially rather than in parallel. Capturing data in sequential mode may reduce the amount of memory that the tool requires to operate, at the cost of taking longer to run.
      logFileTailCollectionSize:
        type: string
        description: >-
               The amount of data to collect from the end of each log file included in the support data archive.
      ldifDirectory:
        type: string
        description: >-
               The directory in which LDIF export files will be placed. The directory must already exist.
      taskReturnStateIfTimeoutIsEncountered:
        type: string
        enum:
        - "stopped-by-error"
        - "completed-with-errors"
        - "completed-successfully"
        description: >-
               The return state to use if a timeout is encountered while waiting for the server work queue to become idle (if the duration-to-wait-for-work-queue-idle property has a value), or if the time specified by the duration-to-wait-for-search-to-return-entries elapses without the associated search returning any entries.
      sleepDuration:
        type: string
        description: >-
               The length of time to sleep before the task completes.
      ldapURLForSearchExpectedToReturnEntries:
        type: array
        items:
          type: string
        description: >-
               An LDAP URL that provides the criteria for a search request that is expected to return at least one entry. The search will be performed internally, and only the base DN, scope, and filter from the URL will be used; any host, port, or requested attributes included in the URL will be ignored.
      outputDirectory:
        type: string
        description: >-
               The directory in which the support data archive files will be placed. The path must be a directory, and that directory must already exist. Relative paths will be interpreted as relative to the server root.
      logFileHeadCollectionSize:
        type: string
        description: >-
               The amount of data to collect from the beginning of each log file included in the support data archive.
      includedBackendID:
        type: array
        items:
          type: string
        description: >-
               The backend IDs of any backends that should be included in the backup.
      compress:
        type: boolean
        description: >-
               Indicates whether to compress the data as it is written into the backup.
      retainPreviousLDIFExportCount:
        type: integer
        description: >-
               The minimum number of previous LDIF exports that should be preserved after a new export completes successfully.
      retainPreviousFullBackupAge:
        type: string
        description: >-
               The minimum age of previous full backups that should be preserved after a new backup completes successfully.
      reportIntervalSeconds:
        type: integer
        description: >-
               The duration (in seconds) between each interval of data to collect from tools that use sample-based reporting, like vmstat, iostat, and mpstat.
      retainPreviousLDIFExportAge:
        type: string
        description: >-
               The minimum age of previous LDIF exports that should be preserved after a new export completes successfully.
      retainPreviousProfileCount:
        type: integer
        description: >-
               The minimum number of previous server profile zip files that should be preserved after a new profile is generated.
      durationToWaitForWorkQueueIdle:
        type: string
        description: >-
               Indicates that task should wait for up to the specified length of time for the work queue to report that all worker threads are idle and there are no pending operations. Note that this primarily monitors operations that use worker threads, which does not include internal operations (for example, those invoked by extensions), and may not include requests from non-LDAP clients (for example, HTTP-based clients).
      retainPreviousFullBackupCount:
        type: integer
        description: >-
               The minimum number of previous full backups that should be preserved after a new backup completes successfully.
      cancelOnTaskDependencyFailure:
        type: boolean
        description: >-
               Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
      timestampFormat:
        type: string
        enum:
        - "generalized-time-utc-with-milliseconds"
        - "generalized-time-utc-with-seconds"
        - "generalized-time-utc-with-minutes"
        - "local-time-with-milliseconds"
        - "local-time-with-seconds"
        - "local-time-with-minutes"
        - "local-date"
        description: >-
               The format to use for the timestamp represented by the "${timestamp}" token in the filename pattern.
      logCommandOutput:
        type: boolean
        description: >-
               Indicates whether the command's output (both standard output and standard error) should be recorded in the server's error log.
      includeFilter:
        type: array
        items:
          type: string
        description: >-
               A filter that will be used to identify entries that may be included in the generated report. If multiple filters are specified, then any entry that matches at least one of the filters will be included. If no filters are specified, then all entries will be included.
      includeExpensiveData:
        type: boolean
        description: >-
               Indicates whether the support data archive should include information that may be expensive to obtain, and that may temporarily affect the server's performance or responsiveness.
      excludeBackendID:
        type: array
        items:
          type: string
        description: >-
               The backend ID for a backend to be excluded from the export.
      baseOutputDirectory:
        type: string
        description: >-
               The base directory below which generated reports will be written. Each invocation of the audit-data-security task will create a new subdirectory below this base directory whose name is a timestamp indicating when the report was generated.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Recurring Task.
      encryptionSettingsDefinitionID:
        type: string
        description: >-
               The ID of an encryption settings definition to use to obtain the backup encryption key.
      description:
        type: string
        description: >-
               A description for this Recurring Task
      backendID:
        type: array
        items:
          type: string
        description: >-
               The backend ID for a backend to be exported.
      retainPreviousProfileAge:
        type: string
        description: >-
               The minimum age of previous server profile zip files that should be preserved after a new profile is generated.
      taskJavaClass:
        type: string
        description: >-
               The fully-qualified name of the Java class that provides the logic for the task to be invoked.
      taskCompletionStateForNonzeroExitCode:
        type: string
        enum:
        - "stopped-by-error"
        - "completed-with-errors"
        - "completed-successfully"
        description: >-
               The final task state that a task instance should have if the task executes the specified command and that command completes with a nonzero exit code, which generally means that the command did not complete successfully.
      securityLevel:
        type: string
        enum:
        - "none"
        - "obscure-secrets"
        - "maximum"
        description: >-
               The security level to use when deciding which information to include in or exclude from the support data archive, and which included data should be obscured or redacted.
      durationToWaitForSearchToReturnEntries:
        type: string
        description: >-
               The maximum length of time that the server will continue to perform internal searches using the criteria from the ldap-url-for-search-expected-to-return-entries property.
      encrypt:
        type: boolean
        description: >-
               Indicates whether to encrypt the data as it is written into the backup.
      jstackCount:
        type: integer
        description: >-
               The number of times to invoke the jstack utility to obtain a stack trace of all threads running in the JVM. A value of zero indicates that the jstack utility should not be invoked.
      emailOnSuccess:
        type: array
        items:
          type: string
        description: >-
               The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
      emailOnFailure:
        type: array
        items:
          type: string
        description: >-
               The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
      backend:
        type: array
        items:
          type: string
        description: >-
               The set of backends that should be examined. If no backends are specified, then all backends that support this functionality will be included.
      excludedBackendID:
        type: array
        items:
          type: string
        description: >-
               The backend IDs of any backends that should be excluded from the backup. All backends that support backups and are not listed will be included.
      dataSecurityAuditor:
        type: array
        items:
          type: string
        description: >-
               The set of data security auditors that should be invoked. If no auditors are specified, then all auditors defined in the configuration will be used.
      retainPreviousOutputFileAge:
        type: string
        description: >-
               The minimum age of previous command output files that should be preserved after a new instance of the command is invoked.
      retainFileCount:
        type: integer
        description: >-
               The minimum number of files matching the pattern that will be retained.
      retainPreviousSupportDataArchiveCount:
        type: integer
        description: >-
               The minimum number of previous support data archives that should be preserved after a new archive is generated.
      emailOnStart:
        type: array
        items:
          type: string
        description: >-
               The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
      includeBinaryFiles:
        type: boolean
        description: >-
               Indicates whether the support data archive should include binary files that may not have otherwise been included. Note that it may not be possible to obscure or redact sensitive information in binary files.
      retainPreviousReportAge:
        type: string
        description: >-
               The minimum age of previous reports that should be preserved after a new report completes successfully.
      backupDirectory:
        type: string
        description: >-
               The directory in which backup files will be placed. When backing up a single backend, the backup files will be placed directly in this directory. When backing up multiple backends, the backup files for each backend will be placed in a subdirectory whose name is the corresponding backend ID.
      retainFileAge:
        type: string
        description: >-
               The minimum age of files matching the pattern that will be retained.
      retainPreviousSupportDataArchiveAge:
        type: string
        description: >-
               The minimum age of previous support data archives that should be preserved after a new archive is generated.
      commandArguments:
        type: string
        description: >-
               A string containing the arguments to provide to the command. If the command should be run without arguments, this property should be left undefined. If there should be multiple arguments, then they should be separated with spaces.
      commandOutputFileBaseName:
        type: string
        description: >-
               The path and base name for a file to which the command output (both standard output and standard error) should be written. This may be left undefined if the command output should not be recorded into a file.
      filenamePattern:
        type: string
        description: >-
               A pattern that specifies the names of the files to examine. The pattern may contain zero or more asterisks as wildcards, where each wildcard matches zero or more characters. It may also contain at most one occurrence of the special string "${timestamp}", which will match a timestamp with the format specified using the timestamp-format property. All other characters in the pattern will be treated literally.
      retainAggregateFileSize:
        type: string
        description: >-
               The minimum aggregate size of files that will be retained. The size should be specified as an integer followed by a unit that is one of "b" or "bytes", "kb" or "kilobytes", "mb" or "megabytes", "gb" or "gigabytes", or "tb" or "terabytes". For example, a value of "1 gb" indicates that at least one gigabyte of files should be retained.
      includeExtensionSource:
        type: boolean
        description: >-
               Indicates whether the support data archive should include the source code (if available) for any third-party extensions that may be installed in the server.
      commandPath:
        type: string
        description: >-
               The absolute path to the command to execute. It must be an absolute path, the corresponding file must exist, and it must be listed in the config/exec-command-whitelist.txt file.
      alertOnFailure:
        type: boolean
        description: >-
               Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      taskObjectClass:
        type: array
        items:
          type: string
        description: >-
               The names or OIDs of the object classes to include in the tasks that are scheduled from this Statically Defined Recurring Task. All object classes must be defined in the server schema, and the combination of object classes must be valid for a task entry.
      alertOnSuccess:
        type: boolean
        description: >-
               Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
      reportCount:
        type: integer
        description: >-
               The number of intervals of data to collect from tools that use sample-based reporting, like vmstat, iostat, and mpstat. A value of zero indicates that these kinds of tools should not be used to collect any information.
      comment:
        type: string
        description: >-
               An optional comment to include in a README file within the support data archive.
      retainPreviousReportCount:
        type: integer
        description: >-
               The minimum number of previous reports that should be preserved after a new report is generated.
      retainPreviousOutputFileCount:
        type: integer
        description: >-
               The minimum number of previous command output files that should be preserved after a new instance of the command is invoked.
      encryptionPassphraseFile:
        type: string
        description: >-
               The path to a file that contains the passphrase to encrypt the contents of the support data archive.

  rest-resource-type-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/rest-resource-type-response'
    required:
    - schemas
    - totalResults
  add-rest-resource-type-request:
    allOf:
    - type: object
      properties:
        typeName:
          type: string
          description: >-
              Name of the new REST Resource Type
    - $ref: '#/definitions/rest-resource-type-properties'
    required:
    - typeName
  rest-resource-type-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the REST Resource Type
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/rest-resource-type-properties'
    required:
    - id
    - schemas
  rest-resource-type-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/rest-resource-type-response'
  rest-resource-type-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:user"
          - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:generic"
          - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:group"
      primaryDisplayAttributeType:
        type: string
        description: >-
               Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.
      postCreateConstructedAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.
      resourceEndpoint:
        type: string
        description: >-
               The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.
      delegatedAdminSearchSizeLimit:
        type: integer
        description: >-
               The maximum number of resources that may be returned from a search request.
      displayName:
        type: string
        description: >-
               A human readable display name for this REST Resource Type.
      createRDNAttributeType:
        type: string
        description: >-
               Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.
      description:
        type: string
        description: >-
               A description for this REST Resource Type
      auxiliaryLDAPObjectclass:
        type: array
        items:
          type: string
        description: >-
               Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.
      relativeDNFromParentResource:
        type: string
        description: >-
               Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.
      nonmembersColumnName:
        type: string
        description: >-
               Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI
      delegatedAdminReportSizeLimit:
        type: integer
        description: >-
               The maximum number of resources that may be included in a report.
      enabled:
        type: boolean
        description: >-
               Indicates whether the REST Resource Type is enabled.
      updateConstructedAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.
      parentResourceType:
        type: string
        description: >-
               Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.
      structuralLDAPObjectclass:
        type: string
        description: >-
               Specifies the LDAP structural object class that should be exposed by this REST Resource Type.
      passwordDisplayOrderIndex:
        type: integer
        description: >-
               This property determines the display order for the password within its attribute category. Attributes are ordered within their category based on this index from least to greatest.
      passwordAttributeCategory:
        type: string
        description: >-
               Specifies which attribute category the password belongs to.
      membersColumnName:
        type: string
        description: >-
               Specifies the name of the group member column that will be displayed in the Delegated Admin UI
      searchFilterPattern:
        type: string
        description: >-
               Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.
      searchBaseDN:
        type: string
        description: >-
               Specifies the base DN of the branch of the LDAP directory where resources of this type are located.
      includeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.
      parentDN:
        type: string
        description: >-
               Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.

  delegated-admin-attribute-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/delegated-admin-attribute-response'
    required:
    - schemas
    - totalResults
  add-delegated-admin-attribute-request:
    allOf:
    - type: object
      properties:
        attributeType:
          type: string
          description: >-
              Name of the new Delegated Admin Attribute
    - $ref: '#/definitions/delegated-admin-attribute-properties'
    required:
    - attributeType
  delegated-admin-attribute-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Delegated Admin Attribute
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/delegated-admin-attribute-properties'
    required:
    - id
    - schemas
  delegated-admin-attribute-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/delegated-admin-attribute-response'
  delegated-admin-attribute-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:certificate"
          - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:photo"
          - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:generic"
      attributePresentation:
        type: string
        enum:
        - "default"
        - "custom"
        description: >-
               Indicates how the attribute is presented to the user of the app.
      includeInSummary:
        type: boolean
        description: >-
               Indicates whether this Delegated Admin Attribute is to be included in the summary display for a resource.
      displayOrderIndex:
        type: integer
        description: >-
               This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.
      attributeCategory:
        type: string
        description: >-
               Specifies which attribute category this attribute belongs to.
      dateTimeFormat:
        type: string
        description: >-
               Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.
      allowedMIMEType:
        type: array
        items:
          type: string
          enum:
          - "cer"
          - "crt"
          - "der"
          - "key"
          - "p7b"
          - "p7c"
          - "p8"
          - "p10"
          - "p12"
          - "pem"
          - "pfx"
          - "spc"
        description: >-
               The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.
      attributeType:
        type: string
        description: >-
               Specifies the name or OID of the LDAP attribute type.
      displayName:
        type: string
        description: >-
               A human readable display name for this Delegated Admin Attribute.
      description:
        type: string
        description: >-
               A description for this Delegated Admin Attribute
      referenceResourceType:
        type: string
        description: >-
               For LDAP attributes with DN syntax, specifies what kind of resource is referenced.
      mutability:
        type: string
        enum:
        - "read-only"
        - "read-write"
        description: >-
               Specifies the circumstances under which the values of the attribute can be written.
      multiValued:
        type: boolean
        description: >-
               Indicates whether this Delegated Admin Attribute may have multiple values.

  delegated-admin-correlated-rest-resource-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/delegated-admin-correlated-rest-resource-response'
    required:
    - schemas
    - totalResults
  add-delegated-admin-correlated-rest-resource-request:
    allOf:
    - type: object
      properties:
        resourceName:
          type: string
          description: >-
              Name of the new Delegated Admin Correlated REST Resource
    - $ref: '#/definitions/delegated-admin-correlated-rest-resource-properties'
    required:
    - resourceName
  delegated-admin-correlated-rest-resource-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Delegated Admin Correlated REST Resource
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/delegated-admin-correlated-rest-resource-properties'
    required:
    - id
    - schemas
  delegated-admin-correlated-rest-resource-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/delegated-admin-correlated-rest-resource-response'
  delegated-admin-correlated-rest-resource-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-correlated-rest-resource"
      secondaryRESTResourceCorrelationAttribute:
        type: string
        description: >-
               The LDAP attribute from the Delegated Admin Correlated REST Resource whose value will be matched with the primary-rest-resource-correlation-attribute. This attribute must be writeable when use-secondary-value-for-linking is disabled.
      displayName:
        type: string
        description: >-
               A human readable display name for this Delegated Admin Correlated REST Resource.
      primaryRESTResourceCorrelationAttribute:
        type: string
        description: >-
               The LDAP attribute from the parent REST Resource Type whose value will be used to match objects in the Delegated Admin Correlated REST Resource. This attribute must be writeable when use-secondary-value-for-linking is enabled.
      correlatedRESTResource:
        type: string
        description: >-
               The REST Resource Type that will be linked to this REST Resource Type.
      useSecondaryValueForLinking:
        type: boolean
        description: >-
               Indicates whether links should be created using the secondary correlation attribute value.

  sasl-mechanism-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/sasl-mechanism-handler-response'
    required:
    - schemas
    - totalResults
  add-sasl-mechanism-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new SASL Mechanism Handler
    - $ref: '#/definitions/sasl-mechanism-handler-properties'
    required:
    - handlerName
  sasl-mechanism-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the SASL Mechanism Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/sasl-mechanism-handler-properties'
    required:
    - id
    - schemas
  sasl-mechanism-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/sasl-mechanism-handler-response'
  sasl-mechanism-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-ms-chap-v2"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-totp"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-yubikey-otp"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:external"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:digest-md5"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:plain"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-delivered-otp"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-external-auth"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:anonymous"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:cram-md5"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:oauth-bearer"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-certificate-plus-password"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:gssapi"
          - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:third-party"
      certificateAttribute:
        type: string
        description: >-
               Specifies the name of the attribute to hold user certificates.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.
      enableDebug:
        type: boolean
        description: >-
               Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard output, which should be captured in the server.out log file.
      requireBothAccessTokenAndIDToken:
        type: boolean
        description: >-
               Indicates whether bind requests will be required to have both an OAuth access token (in the "auth" element of the bind request) and an OpenID Connect ID token (in the "pingidentityidtoken" element of the bind request).
      jaasConfigFile:
        type: string
        description: >-
               Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the information that the JVM should use for Kerberos processing.
      keytab:
        type: string
        description: >-
               Specifies the keytab file that should be used for Kerberos processing.
      description:
        type: string
        description: >-
               A description for this SASL Mechanism Handler
      adjacentIntervalsToCheck:
        type: integer
        description: >-
               The number of adjacent time intervals (both before and after the current time) that should be checked when performing authentication.
      enabled:
        type: boolean
        description: >-
               Indicates whether the SASL mechanism handler is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration property should be given in the form 'name=value'.
      certificateMapper:
        type: string
        description: >-
               Specifies the name of the certificate mapper that should be used to match client certificates to user entries.
      requireStaticPassword:
        type: boolean
        description: >-
               Indicates whether to require a static password (as might be held in the userPassword attribute, or whatever password attribute is defined in the password policy governing the user) in addition to the one-time password.
      allowNullServerFqdn:
        type: boolean
        description: >-
               Specifies whether or not to allow a null value for the server-fqdn.
      keyManagerProvider:
        type: string
        description: >-
               Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.
      serverFqdn:
        type: string
        description: >-
               Specifies the DNS-resolvable fully-qualified domain name for the server that is used when validating the digest-uri parameter during the authentication process.
      allRequiredScope:
        type: array
        items:
          type: string
        description: >-
               The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
      otpValidityDuration:
        type: string
        description: >-
               The maximum length of time that a one-time password value should be considered valid.
      idTokenValidator:
        type: array
        items:
          type: string
        description: >-
               An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and that will map the token to a local entry.
      yubikeyAPIKeyPassphraseProvider:
        type: string
        description: >-
               The passphrase provider to use to obtain the API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
      yubikeyClientID:
        type: string
        description: >-
               The client ID to include in requests to the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
      yubikeyAPIKey:
        type: string
        description: >-
               The API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
      preventTOTPReuse:
        type: boolean
        description: >-
               Indicates whether to prevent clients from re-using TOTP passwords.
      yubikeyValidationServerBaseURL:
        type: array
        items:
          type: string
        description: >-
               The base URL of the validation server to use to verify one-time passwords. You should only need to change the value if you wish to use your own validation server instead of using one of the Yubico servers. The server must use the YubiKey Validation Protocol version 2.0.
      trustManagerProvider:
        type: string
        description: >-
               Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the validation servers that Yubico provides, but may not be the case if an alternate validation server is configured).
      timeIntervalDuration:
        type: string
        description: >-
               The duration of the time interval used for TOTP processing.
      certificateValidationPolicy:
        type: string
        enum:
        - "always"
        - "ifpresent"
        - "never"
        description: >-
               Indicates whether to attempt to validate the peer certificate against a certificate held in the user's entry.
      kerberosServicePrincipal:
        type: string
        description: >-
               Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.
      anyRequiredScope:
        type: array
        items:
          type: string
        description: >-
               The set of OAuth scopes that a token may have to be allowed for authentication.
      gssapiRole:
        type: string
        enum:
        - "acceptor"
        - "initiator"
        description: >-
               Specifies the role that should be declared for the server in the generated JAAS configuration file.
      validateAccessTokenWhenIDTokenIsAlsoProvided:
        type: string
        enum:
        - "validate-only-the-id-token"
        - "validate-both-tokens-but-only-map-the-id-token"
        - "validate-and-map-both-tokens"
        description: >-
               Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind requests that contain both types of tokens.
      kdcAddress:
        type: string
        description: >-
               Specifies the address of the KDC that is to be used for Kerberos processing.
      identityMapper:
        type: string
        description: >-
               The identity mapper that should be used to identify the entry associated with the username provided in the bind request.
      realm:
        type: string
        description: >-
               Specifies the realm that is to be used by the server for DIGEST-MD5 authentication.
      accessTokenValidator:
        type: array
        items:
          type: string
        description: >-
               An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must be configured with an identity mapper that will be used to map the access token to a local entry.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the YubiKey validation service.
      allowedQualityOfProtection:
        type: array
        items:
          type: string
          enum:
          - "auth"
          - "auth-int"
          - "auth-conf"
        description: >-
               Specifies the supported quality of protection (QoP) levels that clients will be permitted to request when performing GSSAPI authentication.
      alternateAuthorizationIdentityMapper:
        type: string
        description: >-
               The identity mapper that will be used to map an alternate authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the corresponding local entry.
      sharedSecretAttributeType:
        type: string
        description: >-
               The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.

  data-security-auditor-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/data-security-auditor-response'
    required:
    - schemas
    - totalResults
  add-data-security-auditor-request:
    allOf:
    - type: object
      properties:
        auditorName:
          type: string
          description: >-
              Name of the new Data Security Auditor
    - $ref: '#/definitions/data-security-auditor-properties'
    required:
    - auditorName
  data-security-auditor-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Data Security Auditor
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/data-security-auditor-properties'
    required:
    - id
    - schemas
  data-security-auditor-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/data-security-auditor-response'
  data-security-auditor-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:expired-password"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:idle-account"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:disabled-account"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:weakly-encoded-password"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:privilege"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:account-usability-issues"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:locked-account"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:filter"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:account-validity-window"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:multiple-password"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:deprecated-password-storage-scheme"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:nonexistent-password-policy"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:access-control"
          - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:third-party"
      idleAccountErrorInterval:
        type: string
        description: >-
               The length of time to use as the error interval for idle accounts. If the length of time since a user last authenticated is greater than the error interval, then an error will be generated for that account. If no error interval is defined, then only the warning interval will be used.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Data Security Auditor.
      neverLoggedInAccountWarningInterval:
        type: string
        description: >-
               The length of time to use as the warning interval for accounts that do not appear to have authenticated. If this is not specified, then the idle account warning interval will be used.
      neverLoggedInAccountErrorInterval:
        type: string
        description: >-
               The length of time to use as the error interval for accounts that do not appear to have authenticated. If this is not specified, then the never-logged-in warning interval will be used. The idle account warning and error intervals will be used if no never-logged-in interval is configured.
      reportFile:
        type: string
        description: >-
               Specifies the name of the detailed report file.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Data Security Auditor is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Data Security Auditor. Each configuration property should be given in the form 'name=value'.
      filter:
        type: array
        items:
          type: string
        description: >-
               The filter to use to identify entries that should be reported. Multiple filters may be configured, and each reported entry will indicate which of these filter(s) matched that entry.
      passwordEvaluationAge:
        type: string
        description: >-
               If set, the auditor will report all users with passwords older than the specified value even if password expiration is not enabled.
      accountExpirationWarningInterval:
        type: string
        description: >-
               If set, the auditor will report all users with account expiration times are in the future, but are within the specified length of time away from the current time.
      includeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
      weakPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               The password storage schemes that are considered weak. Users with any of the specified password storage schemes will be included in the report.
      maximumIdleTime:
        type: string
        description: >-
               If set, users that have not authenticated for more than the specified time will be reported even if idle account lockout is not configured. Note that users may only be reported if the last login time tracking is enabled.
      weakCryptEncoding:
        type: array
        items:
          type: string
          enum:
          - "crypt"
          - "md5"
          - "sha-2-256"
          - "sha-2-512"
        description: >-
               Reporting on users with passwords encoded using the Crypt Password Storage scheme may be further limited by selecting one or more encoding mechanisms that are considered weak.
      auditSeverity:
        type: string
        enum:
        - "error"
        - "warning"
        - "notice"
        - "verbose"
        description: >-
               Specifies the severity of events to include in the report.
      includePrivilege:
        type: array
        items:
          type: string
          enum:
          - "audit-data-security"
          - "bypass-acl"
          - "bypass-read-acl"
          - "modify-acl"
          - "config-read"
          - "config-write"
          - "jmx-read"
          - "jmx-write"
          - "jmx-notify"
          - "ldif-import"
          - "ldif-export"
          - "backend-backup"
          - "backend-restore"
          - "server-shutdown"
          - "server-restart"
          - "proxied-auth"
          - "disconnect-client"
          - "password-reset"
          - "update-schema"
          - "privilege-change"
          - "unindexed-search"
          - "unindexed-search-with-control"
          - "bypass-pw-policy"
          - "lockdown-mode"
          - "stream-values"
          - "third-party-task"
          - "soft-delete-read"
          - "metrics-read"
          - "remote-log-read"
          - "manage-topology"
          - "permit-get-password-policy-state-issues"
          - "permit-proxied-mschapv2-details"
          - "permit-forwarding-client-connection-policy"
          - "exec-task"
          - "collect-support-data"
          - "file-servlet-access"
          - "permit-replace-certificate-request"
        description: >-
               If defined, only entries with the specified privileges will be reported. By default, entries with any privilege assigned will be reported.
      idleAccountWarningInterval:
        type: string
        description: >-
               The length of time to use as the warning interval for idle accounts. If the length of time since a user last authenticated is greater than the warning interval but less than the error interval (or if it is greater than the warning interval and no error interval is defined), then a warning will be generated for that account.
      auditBackend:
        type: array
        items:
          type: string
        description: >-
               Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).

  monitoring-endpoint-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/monitoring-endpoint-response'
    required:
    - schemas
    - totalResults
  add-monitoring-endpoint-request:
    allOf:
    - type: object
      properties:
        endpointName:
          type: string
          description: >-
              Name of the new Monitoring Endpoint
    - $ref: '#/definitions/monitoring-endpoint-properties'
    required:
    - endpointName
  monitoring-endpoint-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Monitoring Endpoint
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/monitoring-endpoint-properties'
    required:
    - id
    - schemas
  monitoring-endpoint-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/monitoring-endpoint-response'
  monitoring-endpoint-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:monitoring-endpoint"
      hostname:
        type: string
        description: >-
               The name of the host where this StatsD Monitoring Endpoint should send metric data.
      additionalTags:
        type: array
        items:
          type: string
        description: >-
               Specifies any optional additional tags to include in StatsD messages. Any additional tags will be appended to the end of each StatsD message, separated by commas. Tags should be written in a [key]:[value] format ("host:server1", for example).
      trustManagerProvider:
        type: string
        description: >-
               The trust manager provider to use if SSL over TCP is to be used for connection-level security.
      serverPort:
        type: integer
        description: >-
               Specifies the port number of the endpoint where metric data should be sent.
      connectionType:
        type: string
        enum:
        - "unencrypted-udp"
        - "unencrypted-tcp"
        - "ssl-over-tcp"
        description: >-
               Specifies the protocol and security that this StatsD Monitoring Endpoint should use to connect to the configured endpoint.
      enabled:
        type: boolean
        description: >-
               Indicates whether this Monitoring Endpoint is enabled for use in the Directory Server.

  password-storage-scheme-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/password-storage-scheme-response'
    required:
    - schemas
    - totalResults
  add-password-storage-scheme-request:
    allOf:
    - type: object
      properties:
        schemeName:
          type: string
          description: >-
              Name of the new Password Storage Scheme
    - $ref: '#/definitions/password-storage-scheme-properties'
    required:
    - schemeName
  password-storage-scheme-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Password Storage Scheme
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/password-storage-scheme-properties'
    required:
    - id
    - schemas
  password-storage-scheme-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/password-storage-scheme-response'
  password-storage-scheme-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2d"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2i"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2id"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5"
      keyVaultURI:
        type: string
        description: >-
               The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Password Storage Scheme.
      derivedKeyLengthBytes:
        type: integer
        description: >-
               The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
      azureAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Azure service.
      encryptionSettingsDefinitionID:
        type: string
        description: >-
               The identifier for the encryption settings definition that should be used to derive the encryption key to use when encrypting new passwords. If this is not provided, the server's preferred encryption settings definition will be used.
      description:
        type: string
        description: >-
               A description for this Password Storage Scheme
      vaultExternalServer:
        type: string
        description: >-
               An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
      saltLengthBytes:
        type: integer
        description: >-
               Specifies the number of bytes to use for the generated salt.
      maxPasswordLength:
        type: integer
        description: >-
               Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Password Storage Scheme is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
      iterationCount:
        type: integer
        description: >-
               The number of rounds of cryptographic processing required in the course of encoding each password.
      awsExternalServer:
        type: string
        description: >-
               The external server with information to use when interacting with the AWS Secrets Manager service.
      scryptCpuMemoryCostFactorExponent:
        type: integer
        description: >-
               Specifies the exponent that should be used for the CPU/memory cost factor. The cost factor must be a power of two, so the value of this property represents the power to which two is raised. The CPU/memory cost factor specifies the number of iterations required for encoding the password, and also affects the amount of memory required during processing. A higher cost factor requires more processing and more memory to generate a password, which makes attacks against the password more expensive.
      numDigestRounds:
        type: integer
        description: >-
               Specifies the number of digest rounds to use for the SHA-2 encodings. This will not be used for the legacy or MD5-based encodings.
      memoryUsageKb:
        type: integer
        description: >-
               The number of kilobytes of memory that must be used in the course of encoding each password.
      defaultField:
        type: string
        description: >-
               The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.
      digestAlgorithm:
        type: string
        enum:
        - "sha-1"
        - "sha-256"
        - "sha-384"
        - "sha-512"
        description: >-
               Specifies the digest algorithm that will be used when encoding passwords.
      conjurExternalServer:
        type: string
        description: >-
               An external server definition with information needed to connect and authenticate to the Conjur instance containing user passwords.
      passwordEncodingMechanism:
        type: string
        enum:
        - "crypt"
        - "md5"
        - "sha-2-256"
        - "sha-2-512"
        description: >-
               Specifies the mechanism that should be used to encode clear-text passwords for use with this scheme.
      parallelismFactor:
        type: integer
        description: >-
               The number of concurrent threads that will be used in the course of encoding each password.
      scryptParallelizationParameter:
        type: integer
        description: >-
               Specifies the number of times that scrypt has to perform the entire encoding process to produce the final result.
      bcryptCostFactor:
        type: integer
        description: >-
               Specifies the cost factor to use when encoding passwords with Bcrypt. A higher cost factor requires more processing to generate a password, which makes attacks against the password more expensive.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the Azure service.
      scryptBlockSize:
        type: integer
        description: >-
               Specifies the block size for the digest that will be used in the course of encoding passwords. Increasing the block size while keeping the CPU/memory cost factor constant will increase the amount of memory required to encode a password, but it also increases the ratio of sequential memory access to random memory access (and sequential memory access is generally faster than random memory access).

  http-configuration-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the HTTP Configuration
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/http-configuration-properties'
    required:
    - id
    - schemas
  http-configuration-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/http-configuration-response'
  http-configuration-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:http-configuration"
      includeStackTracesInErrorPages:
        type: boolean
        description: >-
               Indicates whether exceptions thrown by servlet or web application extensions will be included in the resulting error page response. Stack traces can be helpful in diagnosing application errors, but in production they may reveal information that might be useful to a malicious attacker.

  json-attribute-constraints-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/json-attribute-constraints-response'
    required:
    - schemas
    - totalResults
  add-json-attribute-constraints-request:
    allOf:
    - type: object
      properties:
        attributeType:
          type: string
          description: >-
              Name of the new JSON Attribute Constraints
    - $ref: '#/definitions/json-attribute-constraints-properties'
    required:
    - attributeType
  json-attribute-constraints-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the JSON Attribute Constraints
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/json-attribute-constraints-properties'
    required:
    - id
    - schemas
  json-attribute-constraints-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/json-attribute-constraints-response'
  json-attribute-constraints-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:json-attribute-constraints"
      attributeType:
        type: string
        description: >-
               The name or OID of the LDAP attribute type whose values will be subject to the associated field constraints. This attribute type must be defined in the server schema, and it must have a "JSON object" syntax.
      allowUnnamedFields:
        type: boolean
        description: >-
               Indicates whether JSON objects stored as values of attributes with the associated attribute-type will be permitted to include fields for which there is no subordinate json-field-constraints definition. If unnamed fields are allowed, then no constraints will be imposed on the values of those fields. However, if unnamed fields are not allowed, then the server will reject any attempt to store a JSON object with a field for which there is no corresponding json-fields-constraints definition.
      description:
        type: string
        description: >-
               A description for this JSON Attribute Constraints
      enabled:
        type: boolean
        description: >-
               Indicates whether this JSON Attribute Constraints is enabled.

  json-field-constraints-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/json-field-constraints-response'
    required:
    - schemas
    - totalResults
  add-json-field-constraints-request:
    allOf:
    - type: object
      properties:
        jsonField:
          type: string
          description: >-
              Name of the new JSON Field Constraints
    - $ref: '#/definitions/json-field-constraints-properties'
    required:
    - jsonField
  json-field-constraints-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the JSON Field Constraints
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/json-field-constraints-properties'
    required:
    - id
    - schemas
  json-field-constraints-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/json-field-constraints-response'
  json-field-constraints-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:json-field-constraints"
      isRequired:
        type: boolean
        description: >-
               Indicates whether the target field must be present in JSON objects stored as values of the associated attribute type.
      jsonField:
        type: string
        description: >-
               The full name of the JSON field to which these constraints apply.
      tokenizeValues:
        type: boolean
        description: >-
               Indicates whether the backend should attempt to assign a compact token for each distinct value for the target field in an attempt to reduce the encoded size of the field in JSON objects. These tokens would be assigned prior to using any from the token set used for automatic compaction of some JSON string values.
      allowEmptyObject:
        type: boolean
        description: >-
               Indicates whether the target field may have a value that is an empty JSON object (i.e., a JSON object with zero fields). This may only be set to true if value-type property is set to object.
      description:
        type: string
        description: >-
               A description for this JSON Field Constraints
      allowNullValue:
        type: boolean
        description: >-
               Indicates whether the target field may have a value that is the JSON null value as an alternative to a value (or array of values) of the specified value-type.
      maximumValueCount:
        type: integer
        description: >-
               Specifies the largest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with more than this number of elements.
      allowedValue:
        type: array
        items:
          type: string
        description: >-
               Specifies an explicit set of string values that will be the only values permitted for the target field. If a set of allowed values is defined, then the server will reject any attempt to store a JSON object with a value for the target field that is not included in that set.
      minimumValueLength:
        type: integer
        description: >-
               Specifies the smallest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is shorter than that minimum value length.
      minimumNumericValue:
        type: string
        description: >-
               Specifies the smallest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is less than that minimum numeric value.
      indexValues:
        type: boolean
        description: >-
               Indicates whether backends that support JSON indexing should maintain an index for values of the target field.
      maximumValueLength:
        type: integer
        description: >-
               Specifies the largest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is longer than that maximum value length.
      allowedValueRegularExpression:
        type: array
        items:
          type: string
        description: >-
               Specifies an explicit set of regular expressions that may be used to restrict the set of values that may be used for the target field. If a set of allowed value regular expressions is defined, then the server will reject any attempt to store a JSON object with a value for the target field that does not match at least one of those regular expressions.
      maximumNumericValue:
        type: string
        description: >-
               Specifies the largest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is greater than that maximum numeric value.
      valueType:
        type: string
        enum:
        - "any"
        - "boolean"
        - "integer"
        - "null"
        - "number"
        - "object"
        - "string"
        description: >-
               The data type that will be required for values of the target field.
      cacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        description: >-
               Specifies the behavior that the server should exhibit when caching data for the associated JSON index. This can be useful in environments in which the system does not have enough memory to fully cache the entire data set, as it makes it possible to prioritize which data is the most important to keep in memory.
      isArray:
        type: string
        enum:
        - "required"
        - "optional"
        - "prohibited"
        description: >-
               Indicates whether the value of the target field may be an array of values rather than a single value. If this property is set to "required" or "optional", then the constraints defined for this field will be applied to each element of the array.
      indexEntryLimit:
        type: integer
        description: >-
               The maximum number of entries that may contain a particular value for the target field before the server will stop maintaining the index for that value.
      primeIndex:
        type: boolean
        description: >-
               Indicates whether backends that support database priming should load the contents of the associated JSON index into memory whenever the backend is opened.
      minimumValueCount:
        type: integer
        description: >-
               Specifies the smallest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with fewer than this number of elements.

  http-servlet-cross-origin-policy-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/http-servlet-cross-origin-policy-response'
    required:
    - schemas
    - totalResults
  add-http-servlet-cross-origin-policy-request:
    allOf:
    - type: object
      properties:
        policyName:
          type: string
          description: >-
              Name of the new HTTP Servlet Cross Origin Policy
    - $ref: '#/definitions/http-servlet-cross-origin-policy-properties'
    required:
    - policyName
  http-servlet-cross-origin-policy-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the HTTP Servlet Cross Origin Policy
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/http-servlet-cross-origin-policy-properties'
    required:
    - id
    - schemas
  http-servlet-cross-origin-policy-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/http-servlet-cross-origin-policy-response'
  http-servlet-cross-origin-policy-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:http-servlet-cross-origin-policy"
      corsPreflightMaxAge:
        type: string
        description: >-
               The maximum amount of time that a preflight request can be cached by a client.
      corsAllowedMethods:
        type: array
        items:
          type: string
        description: >-
               A list of HTTP methods allowed for cross-origin access to resources. i.e. one or more of GET, POST, PUT, DELETE, etc.
      description:
        type: string
        description: >-
               A description for this HTTP Servlet Cross Origin Policy
      corsAllowedHeaders:
        type: array
        items:
          type: string
        description: >-
               A list of HTTP headers that are supported by the resource and can be specified in a cross-origin request.
      corsAllowedOrigins:
        type: array
        items:
          type: string
        description: >-
               A list of origins that are allowed to execute cross-origin requests.
      corsExposedHeaders:
        type: array
        items:
          type: string
        description: >-
               A list of HTTP headers other than the simple response headers that browsers are allowed to access.
      corsAllowCredentials:
        type: boolean
        description: >-
               Indicates whether the servlet extension allows CORS requests with username/password credentials.

  delegated-admin-attribute-category-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/delegated-admin-attribute-category-response'
    required:
    - schemas
    - totalResults
  add-delegated-admin-attribute-category-request:
    allOf:
    - type: object
      properties:
        displayName:
          type: string
          description: >-
              Name of the new Delegated Admin Attribute Category
    - $ref: '#/definitions/delegated-admin-attribute-category-properties'
    required:
    - displayName
  delegated-admin-attribute-category-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Delegated Admin Attribute Category
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/delegated-admin-attribute-category-properties'
    required:
    - id
    - schemas
  delegated-admin-attribute-category-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/delegated-admin-attribute-category-response'
  delegated-admin-attribute-category-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute-category"
      displayOrderIndex:
        type: integer
        description: >-
               Delegated Admin Attribute Categories are ordered for display based on this index from least to greatest.
      displayName:
        type: string
        description: >-
               A human readable display name for this Delegated Admin Attribute Category.
      description:
        type: string
        description: >-
               A description for this Delegated Admin Attribute Category

  scim-schema-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/scim-schema-response'
    required:
    - schemas
    - totalResults
  add-scim-schema-request:
    allOf:
    - type: object
      properties:
        schemaName:
          type: string
          description: >-
              Name of the new SCIM Schema
    - $ref: '#/definitions/scim-schema-properties'
    required:
    - schemaName
  scim-schema-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the SCIM Schema
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/scim-schema-properties'
    required:
    - id
    - schemas
  scim-schema-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/scim-schema-response'
  scim-schema-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:scim-schema"
      schemaURN:
        type: string
        description: >-
               The URN which identifies this SCIM Schema.
      displayName:
        type: string
        description: >-
               The human readable name for this SCIM Schema.
      description:
        type: string
        description: >-
               A description for this SCIM Schema

  scim-attribute-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/scim-attribute-response'
    required:
    - schemas
    - totalResults
  add-scim-attribute-request:
    allOf:
    - type: object
      properties:
        attributeName:
          type: string
          description: >-
              Name of the new SCIM Attribute
    - $ref: '#/definitions/scim-attribute-properties'
    required:
    - attributeName
  scim-attribute-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the SCIM Attribute
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/scim-attribute-properties'
    required:
    - id
    - schemas
  scim-attribute-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/scim-attribute-response'
  scim-attribute-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:scim-attribute"
      canonicalValue:
        type: array
        items:
          type: string
        description: >-
               Specifies the suggested canonical type values for the attribute.
      name:
        type: string
        description: >-
               The name of the attribute.
      description:
        type: string
        description: >-
               A description for this SCIM Attribute
      referenceType:
        type: array
        items:
          type: string
        description: >-
               Specifies the SCIM resource types that may be referenced. This property is only applicable for attributes that are of type 'reference'. Valid values are: A SCIM resource type (e.g., 'User' or 'Group'), 'external' - indicating the resource is an external resource (e.g., such as a photo), or 'uri' - indicating that the reference is to a service endpoint or an identifier (such as a schema urn).
      mutability:
        type: string
        enum:
        - "read-only"
        - "read-write"
        - "immutable"
        - "write-only"
        description: >-
               Specifies the circumstances under which the values of the attribute can be written.
      type:
        type: string
        enum:
        - "string"
        - "boolean"
        - "datetime"
        - "decimal"
        - "integer"
        - "binary"
        - "reference"
        - "complex"
        description: >-
               Specifies the data type for this attribute.
      caseExact:
        type: boolean
        description: >-
               Specifies whether the attribute values are case sensitive.
      multiValued:
        type: boolean
        description: >-
               Specifies whether this attribute may have multiple values.
      returned:
        type: string
        enum:
        - "by-default"
        - "upon-request"
        - "always"
        - "never"
        description: >-
               Specifies the circumstances under which the values of the attribute are returned in response to a request.
      required:
        type: boolean
        description: >-
               Specifies whether this attribute is required.

  scim-subattribute-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/scim-subattribute-response'
    required:
    - schemas
    - totalResults
  add-scim-subattribute-request:
    allOf:
    - type: object
      properties:
        subattributeName:
          type: string
          description: >-
              Name of the new SCIM Subattribute
    - $ref: '#/definitions/scim-subattribute-properties'
    required:
    - subattributeName
  scim-subattribute-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the SCIM Subattribute
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/scim-subattribute-properties'
    required:
    - id
    - schemas
  scim-subattribute-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/scim-subattribute-response'
  scim-subattribute-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:scim-subattribute"
      canonicalValue:
        type: array
        items:
          type: string
        description: >-
               Specifies the suggested canonical type values for the sub-attribute.
      description:
        type: string
        description: >-
               A description for this SCIM Subattribute
      referenceType:
        type: array
        items:
          type: string
        description: >-
               Specifies the SCIM resource types that may be referenced. This property is only applicable for sub-attributes that are of type 'reference'. Valid values are: A SCIM resource type (e.g., 'User' or 'Group'), 'external' - indicating the resource is an external resource (e.g., such as a photo), or 'uri' - indicating that the reference is to a service endpoint or an identifier (such as a schema urn).
      mutability:
        type: string
        enum:
        - "read-only"
        - "read-write"
        - "immutable"
        - "write-only"
        description: >-
               Specifies the circumstances under which the values of the sub-attribute can be written.
      type:
        type: string
        enum:
        - "string"
        - "boolean"
        - "datetime"
        - "decimal"
        - "integer"
        - "binary"
        - "reference"
        description: >-
               Specifies the data type for this sub-attribute.
      caseExact:
        type: boolean
        description: >-
               Specifies whether the sub-attribute values are case sensitive.
      multiValued:
        type: boolean
        description: >-
               Specifies whether this attribute may have multiple values.
      returned:
        type: string
        enum:
        - "by-default"
        - "upon-request"
        - "always"
        - "never"
        description: >-
               Specifies the circumstances under which the values of the sub-attribute are returned in response to a request.
      required:
        type: boolean
        description: >-
               Specifies whether this sub-attribute is required.

  location-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/location-response'
    required:
    - schemas
    - totalResults
  add-location-request:
    allOf:
    - type: object
      properties:
        locationName:
          type: string
          description: >-
              Name of the new Location
    - $ref: '#/definitions/location-properties'
    required:
    - locationName
  location-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Location
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/location-properties'
    required:
    - id
    - schemas
  location-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/location-response'
  location-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:location"
      description:
        type: string
        description: >-
               A description for this Location

  log-retention-policy-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/log-retention-policy-response'
    required:
    - schemas
    - totalResults
  add-log-retention-policy-request:
    allOf:
    - type: object
      properties:
        policyName:
          type: string
          description: >-
              Name of the new Log Retention Policy
    - $ref: '#/definitions/log-retention-policy-properties'
    required:
    - policyName
  log-retention-policy-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Log Retention Policy
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/log-retention-policy-properties'
    required:
    - id
    - schemas
  log-retention-policy-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/log-retention-policy-response'
  log-retention-policy-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:time-limit"
          - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:never-delete"
          - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:file-count"
          - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:free-disk-space"
          - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:size-limit"
      numberOfFiles:
        type: integer
        description: >-
               Specifies the number of archived log files to retain before the oldest ones are cleaned.
      diskSpaceUsed:
        type: string
        description: >-
               Specifies the maximum total disk space used by the log files.
      retainDuration:
        type: string
        description: >-
               Specifies the desired minimum length of time that each log file should be retained.
      description:
        type: string
        description: >-
               A description for this Log Retention Policy
      freeDiskSpace:
        type: string
        description: >-
               Specifies the minimum amount of free disk space that should be available on the file system on which the archived log files are stored.

  oauth-token-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/oauth-token-handler-response'
    required:
    - schemas
    - totalResults
  add-oauth-token-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new OAuth Token Handler
    - $ref: '#/definitions/oauth-token-handler-properties'
    required:
    - handlerName
  oauth-token-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the OAuth Token Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/oauth-token-handler-properties'
    required:
    - id
    - schemas
  oauth-token-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/oauth-token-handler-response'
  oauth-token-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:oauth-token-handler:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:oauth-token-handler:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party OAuth Token Handler.
      description:
        type: string
        description: >-
               A description for this OAuth Token Handler
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted OAuth Token Handler.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted OAuth Token Handler. Each configuration property should be given in the form 'name=value'.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party OAuth Token Handler. Each configuration property should be given in the form 'name=value'.


