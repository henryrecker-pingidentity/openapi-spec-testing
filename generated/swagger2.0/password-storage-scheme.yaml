swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /password-storage-schemes:
    get:
      summary: Returns a list of all Password Storage Scheme objects
      operationId: list-password-storage-schemes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
    post:
      summary: Add a new Password Storage Scheme to the config
      operationId: add-password-storage-scheme
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-password-storage-scheme-request'
        description: Create a new Password Storage Scheme in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
  /password-storage-schemes/{password-storage-scheme-name}:
    get:
      operationId: get-password-storage-scheme
      summary: Returns a single Password Storage Scheme
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Password Storage Scheme
        in: path
        name: password-storage-scheme-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
    put:
      operationId: put-password-storage-scheme
      summary: Update an existing Password Storage Scheme by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Storage Scheme
        in: path
        name: password-storage-scheme-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/password-storage-scheme-properties'
        description: Attributes to replace in the Password Storage Scheme
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
    patch:
      operationId: patch-password-storage-scheme
      summary: Update an existing Password Storage Scheme by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Storage Scheme
        in: path
        name: password-storage-scheme-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Password Storage Scheme
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-storage-scheme-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme
    delete:
      summary: Delete a Password Storage Scheme
      operationId: delete-password-storage-scheme
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Storage Scheme
        in: path
        name: password-storage-scheme-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-storage-scheme

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  password-storage-scheme-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/password-storage-scheme-response'
    required:
    - schemas
    - totalResults
  add-password-storage-scheme-request:
    allOf:
    - type: object
      properties:
        schemeName:
          type: string
          description: >-
              Name of the new Password Storage Scheme
    - $ref: '#/definitions/password-storage-scheme-properties'
    required:
    - schemeName
  password-storage-scheme-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Password Storage Scheme
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/password-storage-scheme-properties'
    required:
    - id
    - schemas
  password-storage-scheme-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/password-storage-scheme-response'
  password-storage-scheme-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2d"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2i"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2id"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt"
          - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5"
      keyVaultURI:
        type: string
        description: >-
               The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Password Storage Scheme.
      derivedKeyLengthBytes:
        type: integer
        description: >-
               The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
      azureAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Azure service.
      encryptionSettingsDefinitionID:
        type: string
        description: >-
               The identifier for the encryption settings definition that should be used to derive the encryption key to use when encrypting new passwords. If this is not provided, the server's preferred encryption settings definition will be used.
      description:
        type: string
        description: >-
               A description for this Password Storage Scheme
      vaultExternalServer:
        type: string
        description: >-
               An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
      saltLengthBytes:
        type: integer
        description: >-
               Specifies the number of bytes to use for the generated salt.
      maxPasswordLength:
        type: integer
        description: >-
               Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Password Storage Scheme is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
      iterationCount:
        type: integer
        description: >-
               The number of rounds of cryptographic processing required in the course of encoding each password.
      awsExternalServer:
        type: string
        description: >-
               The external server with information to use when interacting with the AWS Secrets Manager service.
      scryptCpuMemoryCostFactorExponent:
        type: integer
        description: >-
               Specifies the exponent that should be used for the CPU/memory cost factor. The cost factor must be a power of two, so the value of this property represents the power to which two is raised. The CPU/memory cost factor specifies the number of iterations required for encoding the password, and also affects the amount of memory required during processing. A higher cost factor requires more processing and more memory to generate a password, which makes attacks against the password more expensive.
      numDigestRounds:
        type: integer
        description: >-
               Specifies the number of digest rounds to use for the SHA-2 encodings. This will not be used for the legacy or MD5-based encodings.
      memoryUsageKb:
        type: integer
        description: >-
               The number of kilobytes of memory that must be used in the course of encoding each password.
      defaultField:
        type: string
        description: >-
               The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.
      digestAlgorithm:
        type: string
        enum:
        - "sha-1"
        - "sha-256"
        - "sha-384"
        - "sha-512"
        description: >-
               Specifies the digest algorithm that will be used when encoding passwords.
      conjurExternalServer:
        type: string
        description: >-
               An external server definition with information needed to connect and authenticate to the Conjur instance containing user passwords.
      passwordEncodingMechanism:
        type: string
        enum:
        - "crypt"
        - "md5"
        - "sha-2-256"
        - "sha-2-512"
        description: >-
               Specifies the mechanism that should be used to encode clear-text passwords for use with this scheme.
      parallelismFactor:
        type: integer
        description: >-
               The number of concurrent threads that will be used in the course of encoding each password.
      scryptParallelizationParameter:
        type: integer
        description: >-
               Specifies the number of times that scrypt has to perform the entire encoding process to produce the final result.
      bcryptCostFactor:
        type: integer
        description: >-
               Specifies the cost factor to use when encoding passwords with Bcrypt. A higher cost factor requires more processing to generate a password, which makes attacks against the password more expensive.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the Azure service.
      scryptBlockSize:
        type: integer
        description: >-
               Specifies the block size for the digest that will be used in the course of encoding passwords. Increasing the block size while keeping the CPU/memory cost factor constant will increase the amount of memory required to encode a password, but it also increases the ratio of sequential memory access to random memory access (and sequential memory access is generally faster than random memory access).


