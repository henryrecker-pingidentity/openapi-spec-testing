swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /virtual-attributes:
    get:
      summary: Returns a list of all Virtual Attribute objects
      operationId: list-virtual-attributes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
    post:
      summary: Add a new Virtual Attribute to the config
      operationId: add-virtual-attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-virtual-attribute-request'
        description: Create a new Virtual Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
  /virtual-attributes/{virtual-attribute-name}:
    get:
      operationId: get-virtual-attribute
      summary: Returns a single Virtual Attribute
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Virtual Attribute
        in: path
        name: virtual-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
    put:
      operationId: put-virtual-attribute
      summary: Update an existing Virtual Attribute by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Virtual Attribute
        in: path
        name: virtual-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/virtual-attribute-properties'
        description: Attributes to replace in the Virtual Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
    patch:
      operationId: patch-virtual-attribute
      summary: Update an existing Virtual Attribute by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Virtual Attribute
        in: path
        name: virtual-attribute-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Virtual Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/virtual-attribute-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute
    delete:
      summary: Delete a Virtual Attribute
      operationId: delete-virtual-attribute
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Virtual Attribute
        in: path
        name: virtual-attribute-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - virtual-attribute

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  virtual-attribute-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/virtual-attribute-response'
    required:
    - schemas
    - totalResults
  add-virtual-attribute-request:
    allOf:
    - type: object
      properties:
        name:
          type: string
          description: >-
              Name of the new Virtual Attribute
    - $ref: '#/definitions/virtual-attribute-properties'
    required:
    - name
  virtual-attribute-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Virtual Attribute
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/virtual-attribute-properties'
    required:
    - id
    - schemas
  virtual-attribute-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/virtual-attribute-response'
  virtual-attribute-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:mirror"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:entry-checksum"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:member-of-server-group"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:constructed"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:is-member-of"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:custom"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:num-subordinates"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:reverse-dn-join"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:identify-references"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:user-defined"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:current-time"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:short-unique-id"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:entry-dn"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:has-subordinates"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:equality-join"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:instance-name"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:replication-state-detail"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:member"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:password-policy-state-json"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:subschema-subentry"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:dn-join"
          - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:third-party"
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Virtual Attribute.
      multipleVirtualAttributeEvaluationOrderIndex:
        type: integer
        description: >-
               Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
      sequenceNumberAttribute:
        type: string
        description: >-
               Specifies the name or OID of the attribute which contains the sequence number from which unique identifiers are generated. The attribute should have Integer syntax or a String syntax permitting integer values. If this property is modified then the filter property should be updated accordingly so that only entries containing the sequence number attribute are eligible to have a value generated for this virtual attribute.
      excludedAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the attributes that should be excluded from the checksum calculation.
      description:
        type: string
        description: >-
               A description for this Virtual Attribute
      joinFilter:
        type: string
        description: >-
               An optional filter that specifies additional criteria for identifying joined entries. If a join-filter value is specified, then only entries matching that filter (in addition to satisfying the other join criteria) will be joined with the search result entry.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Virtual Attribute is enabled for use.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Virtual Attribute. Each configuration property should be given in the form 'name=value'.
      joinAttribute:
        type: array
        items:
          type: string
        description: >-
               An optional set of the names of the attributes to include with joined entries.
      referenceSearchBaseDN:
        type: array
        items:
          type: string
        description: >-
               The base DN that will be used when searching for references to the target entry. If no reference search base DN is specified, the default behavior will be to search below all public naming contexts configured in the server.
      directMembershipsOnly:
        type: boolean
        description: >-
               Specifies whether to only include groups in which the user is directly associated with and the membership maybe modified via the group entry. Groups in which the user's membership is derived dynamically or through nested groups will not be included.
      includedGroupFilter:
        type: string
        description: >-
               A search filter that will be used to identify which groups should be included in the values of the virtual attribute. With no value defined (which is the default behavior), all groups that contain the target user will be included.
      joinSizeLimit:
        type: integer
        description: >-
               The maximum number of entries that may be joined with the source entry, which also corresponds to the maximum number of values that the virtual attribute provider will generate for an entry.
      joinCustomBaseDN:
        type: string
        description: >-
               The fixed, administrator-specified base DN for the internal searches used to identify joined entries.
      attributeType:
        type: string
        description: >-
               Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
      joinScope:
        type: string
        enum:
        - "base-object"
        - "single-level"
        - "whole-subtree"
        - "subordinate-subtree"
        description: >-
               The scope for searches used to identify joined entries.
      sourceEntryDNAttribute:
        type: string
        description: >-
               Specifies the attribute containing the DN of another entry from which to obtain the source attribute providing the values for this virtual attribute.
      sourceEntryDNMap:
        type: string
        description: >-
               Specifies a DN map that will be used to identify the entry from which to obtain the source attribute providing the values for this virtual attribute.
      conflictBehavior:
        type: string
        enum:
        - "real-overrides-virtual"
        - "virtual-overrides-real"
        - "merge-real-and-virtual"
        description: >-
               Specifies the behavior that the server is to exhibit for entries that already contain one or more real values for the associated attribute.
      allowIndexConflicts:
        type: boolean
        description: >-
               Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      returnUtcTime:
        type: boolean
        description: >-
               Indicates whether to return current time in UTC.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Virtual Attribute. Each configuration property should be given in the form 'name=value'.
      sourceAttribute:
        type: string
        description: >-
               Specifies the source attribute containing the values to use for this virtual attribute.
      baseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
      includeMilliseconds:
        type: boolean
        description: >-
               Indicates whether the current time includes millisecond precision.
      value:
        type: array
        items:
          type: string
        description: >-
               Specifies the values to be included in the virtual attribute.
      rewriteSearchFilters:
        type: string
        enum:
        - "always"
        - "within-group-scope"
        - "never"
        description: >-
               Search filters that include Is Member Of Virtual Attribute searches on dynamic groups can be updated to include the dynamic group filter in the search filter itself. This can allow the backend to more efficiently process the search filter by using attribute indexes sooner in the search processing.
      joinSourceAttribute:
        type: string
        description: >-
               The attribute containing the value(s) in the source entry to use to identify related entries.
      joinBaseDNType:
        type: string
        enum:
        - "use-search-base-dn"
        - "use-source-entry-dn"
        - "use-custom-base-dn"
        description: >-
               Specifies how server should determine the base DN for the internal searches used to identify joined entries.
      valuePattern:
        type: array
        items:
          type: string
        description: >-
               Specifies a pattern for constructing the virtual attribute value using fixed text and attribute values from the entry.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Virtual Attribute.
      excludeOperationalAttributes:
        type: boolean
        description: >-
               Indicates whether all operational attributes should be excluded from the generated checksum.
      joinMatchAll:
        type: boolean
        description: >-
               Indicates whether joined entries will be required to have all values for the source attribute, or only at least one of its values.
      referencedByAttribute:
        type: array
        items:
          type: string
        description: >-
               The name or OID of an attribute type whose values will be searched for references to the target entry. The attribute type must be defined in the server schema, must have a syntax of either "distinguished name" or "name and optional UID", and must be indexed for equality.
      filter:
        type: array
        items:
          type: string
        description: >-
               Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
      groupDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
      allowRetrievingMembership:
        type: boolean
        description: >-
               Indicates whether to handle requests that request all values for the virtual attribute.
      bypassAccessControlForSearches:
        type: boolean
        description: >-
               Indicates whether searches performed by this virtual attribute provider should be exempted from access control restrictions.
      clientConnectionPolicy:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
      multipleVirtualAttributeMergeBehavior:
        type: string
        enum:
        - "use-first-definition"
        - "use-only-definitions-with-the-lowest-evaluation-order-index"
        - "use-all-definitions"
        description: >-
               Specifies the behavior that will be exhibited for cases in which multiple virtual attribute definitions apply to the same multivalued attribute type. This will be ignored for single-valued attribute types.
      joinDNAttribute:
        type: string
        description: >-
               The attribute in related entries whose set of values must contain the DN of the search result entry to be joined with that entry.
      joinTargetAttribute:
        type: string
        description: >-
               The attribute in target entries whose value(s) match values of the source attribute in the source entry.
      requireExplicitRequestByName:
        type: boolean
        description: >-
               Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.


