swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /plugin-root:
    get:
      operationId: get-plugin-root
      summary: Returns the Plugin Root
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-root-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin-root
    put:
      operationId: put-plugin-root
      summary: Update the Plugin Root, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/plugin-root-properties'
        description: Attributes to replace in the Plugin Root
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-root-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin-root
    patch:
      operationId: patch-plugin-root
      summary: Update an existing Plugin Root by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Plugin Root
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-root-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin-root

  /plugin-root/plugins:
    get:
      summary: Returns a list of all Plugin objects
      operationId: list-plugins
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
    post:
      summary: Add a new Plugin to the config
      operationId: add-plugin
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-plugin-request'
        description: Create a new Plugin in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
  /plugin-root/plugins/{plugin-name}:
    get:
      operationId: get-plugin
      summary: Returns a single Plugin
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
    put:
      operationId: put-plugin
      summary: Update an existing Plugin by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/plugin-properties'
        description: Attributes to replace in the Plugin
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
    patch:
      operationId: patch-plugin
      summary: Update an existing Plugin by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Plugin
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/plugin-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin
    delete:
      summary: Delete a Plugin
      operationId: delete-plugin
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - plugin

  /plugin-root/plugins/{plugin-name}/custom-logged-stats:
    get:
      summary: Returns a list of all Custom Logged Stats objects
      operationId: list-custom-logged-stats
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
    post:
      summary: Add a new Custom Logged Stats to the config
      operationId: add-custom-logged-stats
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-custom-logged-stats-request'
        description: Create a new Custom Logged Stats in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
  /plugin-root/plugins/{plugin-name}/custom-logged-stats/{custom-logged-stats-name}:
    get:
      operationId: get-custom-logged-stats
      summary: Returns a single Custom Logged Stats
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Custom Logged Stats
        in: path
        name: custom-logged-stats-name
        required: true
        type: string
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
    put:
      operationId: put-custom-logged-stats
      summary: Update an existing Custom Logged Stats by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Custom Logged Stats
        in: path
        name: custom-logged-stats-name
        required: true
        type: string
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/custom-logged-stats-properties'
        description: Attributes to replace in the Custom Logged Stats
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
    patch:
      operationId: patch-custom-logged-stats
      summary: Update an existing Custom Logged Stats by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Custom Logged Stats
        in: path
        name: custom-logged-stats-name
        required: true
        type: string
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Custom Logged Stats
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/custom-logged-stats-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats
    delete:
      summary: Delete a Custom Logged Stats
      operationId: delete-custom-logged-stats
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Custom Logged Stats
        in: path
        name: custom-logged-stats-name
        required: true
        type: string
      - description: Name of the Plugin
        in: path
        name: plugin-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - custom-logged-stats

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  plugin-root-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Plugin Root
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/plugin-root-properties'
    required:
    - id
    - schemas
  plugin-root-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/plugin-root-response'
  plugin-root-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:plugin-root"
      pluginOrderPreParseAbandon:
        type: string
        description: >-
               Specifies the order in which pre-parse abandon plug-ins are to be loaded and invoked.
      pluginOrderPreParseModify:
        type: string
        description: >-
               Specifies the order in which pre-parse modify plug-ins are to be loaded and invoked.
      pluginOrderPreOperationExtended:
        type: string
        description: >-
               Specifies the order in which pre-operation extended operation plug-ins are to be loaded and invoked.
      pluginOrderSearchResultEntry:
        type: string
        description: >-
               Specifies the order in which search result entry plug-ins are to be loaded and invoked.
      pluginOrderPostOperationDelete:
        type: string
        description: >-
               Specifies the order in which post-operation delete plug-ins are to be loaded and invoked.
      pluginOrderPostOperationExtended:
        type: string
        description: >-
               Specifies the order in which post-operation extended operation plug-ins are to be loaded and invoked.
      pluginOrderPreParseAdd:
        type: string
        description: >-
               Specifies the order in which pre-parse add plug-ins are to be loaded and invoked.
      pluginOrderPostResponseModifyDN:
        type: string
        description: >-
               Specifies the order in which post-response modify DN plug-ins are to be loaded and invoked.
      pluginOrderPreOperationCompare:
        type: string
        description: >-
               Specifies the order in which pre-operation compare plug-ins are to be loaded and invoked.
      pluginOrderPreParseModifyDN:
        type: string
        description: >-
               Specifies the order in which pre-parse modify DN plug-ins are to be loaded and invoked.
      pluginOrderPreOperationDelete:
        type: string
        description: >-
               Specifies the order in which pre-operation delete plug-ins are to be loaded and invoked.
      pluginOrderPostResponseSearch:
        type: string
        description: >-
               Specifies the order in which post-response search plug-ins are to be loaded and invoked.
      pluginOrderPostOperationAbandon:
        type: string
        description: >-
               Specifies the order in which post-operation abandon plug-ins are to be loaded and invoked.
      pluginOrderPreOperationModify:
        type: string
        description: >-
               Specifies the order in which pre-operation modify plug-ins are to be loaded and invoked.
      pluginOrderShutdown:
        type: string
        description: >-
               Specifies the order in which shutdown plug-ins are to be loaded and invoked.
      pluginOrderPostResponseAdd:
        type: string
        description: >-
               Specifies the order in which post-response add plug-ins are to be loaded and invoked.
      pluginOrderLDIFExport:
        type: string
        description: >-
               Specifies the order in which LDIF export plug-ins are to be loaded and invoked.
      pluginOrderLDIFImport:
        type: string
        description: >-
               Specifies the order in which LDIF import plug-ins are to be loaded and invoked.
      pluginOrderPostSynchronizationModifyDN:
        type: string
        description: >-
               Specifies the order in which post-synchronization modify DN plug-ins are to be loaded and invoked.
      pluginOrderPreParseDelete:
        type: string
        description: >-
               Specifies the order in which pre-parse delete plug-ins are to be loaded and invoked.
      pluginOrderPostResponseBind:
        type: string
        description: >-
               Specifies the order in which post-response bind plug-ins are to be loaded and invoked.
      pluginOrderPostOperationAdd:
        type: string
        description: >-
               Specifies the order in which post-operation add plug-ins are to be loaded and invoked.
      pluginOrderPostOperationSearch:
        type: string
        description: >-
               Specifies the order in which post-operation search plug-ins are to be loaded and invoked.
      pluginOrderPostSynchronizationModify:
        type: string
        description: >-
               Specifies the order in which post-synchronization modify plug-ins are to be loaded and invoked.
      pluginOrderPreOperationSearch:
        type: string
        description: >-
               Specifies the order in which pre-operation search plug-ins are to be loaded and invoked.
      pluginOrderPreParseBind:
        type: string
        description: >-
               Specifies the order in which pre-parse bind plug-ins are to be loaded and invoked.
      pluginOrderPostOperationModifyDN:
        type: string
        description: >-
               Specifies the order in which post-operation modify DN plug-ins are to be loaded and invoked.
      pluginOrderPostDisconnect:
        type: string
        description: >-
               Specifies the order in which post-disconnect plug-ins are to be loaded and invoked.
      pluginOrderPostResponseCompare:
        type: string
        description: >-
               Specifies the order in which post-response compare plug-ins are to be loaded and invoked.
      pluginOrderPostConnect:
        type: string
        description: >-
               Specifies the order in which post-connect plug-ins are to be loaded and invoked.
      pluginOrderPreParseSearch:
        type: string
        description: >-
               Specifies the order in which pre-parse search plug-ins are to be loaded and invoked.
      pluginOrderPostResponseExtended:
        type: string
        description: >-
               Specifies the order in which post-response extended operation plug-ins are to be loaded and invoked.
      pluginOrderPreParseExtended:
        type: string
        description: >-
               Specifies the order in which pre-parse extended operation plug-ins are to be loaded and invoked.
      pluginOrderSearchResultReference:
        type: string
        description: >-
               Specifies the order in which search result reference plug-ins are to be loaded and invoked.
      pluginOrderPreParseCompare:
        type: string
        description: >-
               Specifies the order in which pre-parse compare plug-ins are to be loaded and invoked.
      pluginOrderPostOperationCompare:
        type: string
        description: >-
               Specifies the order in which post-operation compare plug-ins are to be loaded and invoked.
      pluginOrderPostOperationUnbind:
        type: string
        description: >-
               Specifies the order in which post-operation unbind plug-ins are to be loaded and invoked.
      pluginOrderPreOperationBind:
        type: string
        description: >-
               Specifies the order in which pre-operation bind plug-ins are to be loaded and invoked.
      pluginOrderPreOperationAdd:
        type: string
        description: >-
               Specifies the order in which pre-operation add plug-ins are to be loaded and invoked.
      pluginOrderPostOperationModify:
        type: string
        description: >-
               Specifies the order in which post-operation modify plug-ins are to be loaded and invoked.
      pluginOrderStartup:
        type: string
        description: >-
               Specifies the order in which startup plug-ins are to be loaded and invoked.
      pluginOrderPreOperationModifyDN:
        type: string
        description: >-
               Specifies the order in which pre-operation modify DN plug-ins are to be loaded and invoked.
      pluginOrderPostSynchronizationAdd:
        type: string
        description: >-
               Specifies the order in which post-synchronization add plug-ins are to be loaded and invoked.
      pluginOrderPostSynchronizationDelete:
        type: string
        description: >-
               Specifies the order in which post-synchronization delete plug-ins are to be loaded and invoked.
      pluginOrderSubordinateModifyDN:
        type: string
        description: >-
               Specifies the order in which subordinate modify DN plug-ins are to be loaded and invoked.
      pluginOrderIntermediateResponse:
        type: string
        description: >-
               Specifies the order in which intermediate response plug-ins are to be loaded and invoked.
      pluginOrderPostOperationBind:
        type: string
        description: >-
               Specifies the order in which post-operation bind plug-ins are to be loaded and invoked.
      pluginOrderPostResponseModify:
        type: string
        description: >-
               Specifies the order in which post-response modify plug-ins are to be loaded and invoked.
      pluginOrderPreParseUnbind:
        type: string
        description: >-
               Specifies the order in which pre-parse unbind plug-ins are to be loaded and invoked.
      pluginOrderPostResponseDelete:
        type: string
        description: >-
               Specifies the order in which post-response delete plug-ins are to be loaded and invoked.

  plugin-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/plugin-response'
    required:
    - schemas
    - totalResults
  add-plugin-request:
    allOf:
    - type: object
      properties:
        pluginName:
          type: string
          description: >-
              Name of the new Plugin
    - $ref: '#/definitions/plugin-properties'
    required:
    - pluginName
  plugin-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Plugin
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/plugin-properties'
    required:
    - id
    - schemas
  plugin-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/plugin-response'
  plugin-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:plugin:last-access-time"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:stats-collector"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:internal-search-rate"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:modifiable-password-policy-state"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:seven-bit-clean"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-access-grants"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-gc"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:ping-one-pass-through-authentication"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:changelog-password-encryption"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:processing-time-histogram"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:search-shutdown"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-stats-logger"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:change-subscription-notification"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:sub-operation-timing"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:third-party"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:encrypt-attribute-values"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:pass-through-authentication"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:dn-mapper"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:monitor-history"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:referral-on-update"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:simple-to-external-bind"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:custom"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:snmp-subagent"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:password-policy-import"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:profiler"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-inactive-pingfederate-persistent-sessions"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:composed-attribute"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:ldap-result-code-tracker"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:attribute-mapper"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:delay"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-sessions"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:groovy-scripted"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:last-mod"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:pluggable-pass-through-authentication"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:referential-integrity"
          - "urn:pingidentity:schemas:configuration:2.0:plugin:unique-attribute"
      contextName:
        type: string
        description: >-
               The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a topology must have a unique SNMP context name.
      numMostExpensivePhasesShown:
        type: integer
        description: >-
               This controls how many of the most expensive phases are included per operation type in the monitor entry.
      mapAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the enable-attribute-mapping property has a value of "true". Any attributes listed must be defined in the server schema with either the distinguished name syntax or the name and optional UID syntax.
      targetAttribute:
        type: string
        description: >-
               Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute type must be defined in the server schema and must not be equal to the source attribute type.
      type:
        type: array
        items:
          type: string
        description: >-
               Specifies the type of attributes to check for value uniqueness.
      localDBBackendInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        - "verbose"
        description: >-
               Specifies the level of detail to include about the Local DB Backends.
      allowLaxPassThroughAuthenticationPasswords:
        type: boolean
        description: >-
               Indicates whether to overwrite the user's local password even if the password used to authenticate to the PingOne service would have failed validation if the user attempted to set it directly.
      outputFile:
        type: string
        description: >-
               The path of an LDIF file that should be created with the results of the search.
      excludeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of search filters that identify entries for which composed values will not be generated.
      apiURL:
        type: string
        description: >-
               Specifies the API endpoint for the PingOne web service.
      includedLDAPApplication:
        type: array
        items:
          type: string
        description: >-
               If statistics should not be included for all applications, this property names the subset of applications that should be included.
      searchFilterPattern:
        type: string
        description: >-
               A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.
      histogramOpType:
        type: array
        items:
          type: string
          enum:
          - "all"
          - "add"
          - "bind"
          - "compare"
          - "delete"
          - "extended"
          - "modify"
          - "modify-dn"
          - "search"
        description: >-
               Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control this.
      pingInterval:
        type: string
        description: >-
               The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of zero disables the sending of pings by the sub-agent.
      serverAccessMode:
        type: string
        enum:
        - "round-robin"
        - "failover-on-unavailable"
        - "failover-on-any-failure"
        description: >-
               Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.
      ignoredPasswordPolicyStateErrorCondition:
        type: array
        items:
          type: string
          enum:
          - "temporarily-locked-due-to-failures"
          - "permanently-locked-due-to-failures"
          - "locked-due-to-idle-interval"
          - "locked-due-to-maximum-reset-age"
          - "locked-due-to-validation-failure"
          - "password-is-expired"
        description: >-
               A set of password policy state error conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option can only be used if try-local-bind is true.
      rotationPolicy:
        type: array
        items:
          type: string
        description: >-
               The rotation policy to use for the Periodic Stats Logger Plugin .
      statusSummaryInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "verbose"
        description: >-
               Specifies the level of detail to include about the status summary monitor entry.
      peerServerPriorityIndex:
        type: integer
        description: >-
               In a replicated environment, this determines the order in which peer servers should attempt to purge data.
      agentxAddress:
        type: string
        description: >-
               The hostname or IP address of the SNMP master agent.
      previousFileExtension:
        type: string
        description: >-
               An extension that should be appended to the name of an existing output file rather than deleting it. If a file already exists with the full previous file name, then it will be deleted before the current file is renamed to become the previous file.
      environmentID:
        type: string
        description: >-
               Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.
      delay:
        type: string
        description: >-
               The delay to inject for operations matching the associated criteria.
      ldapInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        description: >-
               Specifies the level of detail to include about the LDAP connection handlers.
      replicationInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        - "verbose"
        description: >-
               Specifies the level of detail to include about replication.
      emptyInsteadOfZero:
        type: boolean
        description: >-
               This property controls whether a value in the output is shown as empty if the value is zero.
      maxUpdatesPerSecond:
        type: integer
        description: >-
               This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.
      includeAttribute:
        type: array
        items:
          type: string
        description: >-
               The name of an attribute that should be included in the results. This may include any token which is allowed as a requested attribute in search requests, including the name of an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an object class name preceded with an at symbol (to indicate all attributes associated with that object class), an attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded).
      excludeBaseDN:
        type: array
        items:
          type: string
        description: >-
               The set of base DNs below which composed values will not be generated.
      delayAfterAlert:
        type: string
        description: >-
               Specifies the length of time that the Directory Server should wait after sending the "force-gc-starting" administrative alert before actually invoking the garbage collection processing.
      operationType:
        type: array
        items:
          type: string
          enum:
          - "add"
          - "bind"
          - "compare"
          - "modify"
          - "modify-dn"
          - "search"
        description: >-
               Specifies the types of operations that should result in access time updates.
      datetimeAttribute:
        type: string
        description: >-
               The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.
      collectionInterval:
        type: string
        description: >-
               Some of the calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered, and setting this value too small can have an adverse impact on performance.
      changelogPasswordEncryptionKey:
        type: string
        description: >-
               A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync Server.
      invokeGCDayOfWeek:
        type: array
        items:
          type: string
          enum:
          - "sunday"
          - "monday"
          - "tuesday"
          - "wednesday"
          - "thursday"
          - "friday"
          - "saturday"
        description: >-
               Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will run every day at the specified time.
      sampleInterval:
        type: string
        description: >-
               The duration between statistics collections. Setting this value too small can have an impact on performance. This value should be a multiple of collection-interval.
      server:
        type: array
        items:
          type: string
        description: >-
               Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
      profileSampleInterval:
        type: string
        description: >-
               Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.
      suppressIfIdle:
        type: boolean
        description: >-
               If the server is idle during the specified interval, then do not log any output if this property is set to true. The server is idle if during the interval, no new connections were established, no operations were processed, and no operations are pending.
      encryptionSettingsDefinitionID:
        type: string
        description: >-
               Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
      updatedEntryNewlyMatchesCriteriaBehavior:
        type: string
        enum:
        - "preserve-existing-values-without-composing-new-values"
        - "preserve-existing-values-or-compose-new-values"
        - "preserve-existing-values-and-compose-new-values"
        - "compose-new-values-without-preserving-existing-values"
        description: >-
               The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either the base DN or filter criteria, but now do satisfy that criteria.
      enabled:
        type: boolean
        description: >-
               Indicates whether the plug-in is enabled for use.
      attributeType:
        type: array
        items:
          type: string
        description: >-
               Specifies the name or OID of an attribute type for which values should be checked to ensure that they are 7-bit clean.
      expirationOffset:
        type: string
        description: >-
               The duration to wait after the value specified in datetime-attribute (and optionally datetime-json-field) before purging the data.
      retentionPolicy:
        type: array
        items:
          type: string
        description: >-
               The retention policy to use for the Periodic Stats Logger Plugin .
      loggingErrorBehavior:
        type: string
        enum:
        - "standard-error"
        - "lockdown-mode"
        description: >-
               Specifies the behavior that the server should exhibit if an error occurs during logging processing.
      includeBaseDN:
        type: array
        items:
          type: string
        description: >-
               The set of base DNs below which composed values may be generated.
      separateMonitorEntryPerTrackedApplication:
        type: boolean
        description: >-
               When enabled, separate monitor entries will be included for each application defined in the Global Configuration's tracked-application property.
      numWorkerThreads:
        type: integer
        description: >-
               The number of worker threads to use to handle SNMP requests.
      alwaysMapResponses:
        type: boolean
        description: >-
               Indicates whether DNs in response messages containing the target DN should always be remapped back to the source DN. If this is "false", then mapping will be performed for a response message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.
      retainFilesSparselyByAge:
        type: boolean
        description: >-
               Retain some older files to give greater perspective on how monitoring information has changed over time.
      preventConflictsWithSoftDeletedEntries:
        type: boolean
        description: >-
               Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even if those conflicts only exist in soft-deleted entries.
      connectRetryMaxWait:
        type: string
        description: >-
               The maximum amount of time to wait between attempts to establish a connection to the master agent.
      hostInfo:
        type: array
        items:
          type: string
          enum:
          - "cpu"
          - "disk"
          - "network"
        description: >-
               Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and network activity.
      profileAction:
        type: string
        enum:
        - "none"
        - "start"
        - "stop"
        - "cancel"
        description: >-
               Specifies the action that should be taken by the profiler.
      valuePattern:
        type: array
        items:
          type: string
        description: >-
               Specifies a pattern for constructing the values to use for the target attribute type.
      numThreads:
        type: integer
        description: >-
               Specifies the number of concurrent threads that should be used to process the search operations.
      tryLocalBind:
        type: boolean
        description: >-
               Indicates whether to attempt the bind in the local server first, or to only send it to the PingOne service.
      updateLocalPassword:
        type: boolean
        description: >-
               Indicates whether to overwrite the user's local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service.
      filter:
        type: array
        items:
          type: string
        description: >-
               A filter that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.
      targetDN:
        type: string
        description: >-
               Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.
      updateInterval:
        type: string
        description: >-
               Specifies the interval in seconds when referential integrity updates are made.
      includedLocalEntryBaseDN:
        type: array
        items:
          type: string
        description: >-
               The base DNs for the local users whose authentication attempts may be passed through to the PingOne service.
      lowerBound:
        type: integer
        description: >-
               Specifies the lower bound for the numeric value which will be inserted into the search filter.
      multipleAttributeBehavior:
        type: string
        enum:
        - "unique-within-each-attribute"
        - "unique-across-all-attributes-including-in-same-entry"
        - "unique-across-all-attributes-except-in-same-entry"
        description: >-
               The behavior to exhibit if multiple attribute types are specified.
      sanitize:
        type: boolean
        description: >-
               Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and search filters. Setting this property to true will redact this information from the monitor files. This should only be used when necessary, as it reduces the information available in the archive and can increase the time to find the source of support issues.
      maxSearchResultEntriesToUpdate:
        type: integer
        description: >-
               Specifies the maximum number of entries that should be updated in a search operation. Only search result entries actually returned to the client may have their last access time updated, but because a single search operation may return a very large number of entries, the plugin will only update entries if no more than a specified number of entries are updated.
      overrideLocalPassword:
        type: boolean
        description: >-
               Indicates whether to attempt the authentication in the PingOne service if the local user entry includes a password. This property will only be used if try-local-bind is true.
      invokeForInternalOperations:
        type: boolean
        description: >-
               Indicates whether the plug-in should be invoked for internal operations.
      datetimeFormat:
        type: string
        enum:
        - "generalized-time"
        - "java-system-time-millis"
        - "custom"
        description: >-
               Specifies the format of the datetime stored within the entry that determines when data should be purged.
      enableProfilingOnStartup:
        type: boolean
        description: >-
               Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.
      pollingInterval:
        type: string
        description: >-
               This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).
      includedLDAPStat:
        type: array
        items:
          type: string
          enum:
          - "active-operations"
          - "num-connections"
          - "op-count-and-latency"
          - "work-queue"
          - "ldap-protocol"
        description: >-
               Specifies the types of statistics related to LDAP connections and operation processing that should be included in the output.
      updateLocalPasswordDN:
        type: string
        description: >-
               This is the DN of the user that will be used to overwrite the user's local password if update-local-password is set. The DN put here should be added to 'ignore-changes-by-dn' in the appropriate Sync Source.
      rotationListener:
        type: array
        items:
          type: string
        description: >-
               A listener that should be notified whenever a log file is rotated out of service.
      profileDirectory:
        type: string
        description: >-
               Specifies the path to the directory where profile information is to be written. This path may be either an absolute path or a path that is relative to the root of the Directory Server instance.
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be given in the form 'name=value'.
      OAuthClientSecret:
        type: string
        description: >-
               Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.
      OAuthClientSecretPassphraseProvider:
        type: string
        description: >-
               Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to the PingOne API.
      maxUpdateFrequency:
        type: string
        description: >-
               Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit the rate of internal write operations processed in the server.
      numDeleteThreads:
        type: integer
        description: >-
               The number of threads used to delete expired entries.
      passThroughAuthenticationHandler:
        type: string
        description: >-
               The component used to manage authentication with the external authentication service.
      multipleValuePatternBehavior:
        type: string
        enum:
        - "use-first-non-rejected-value-pattern-with-non-empty-values-but-may-reject"
        - "use-first-non-rejected-value-pattern-with-non-empty-values-and-never-reject"
        - "use-first-rejection-or-first-value-pattern-with-non-empty-values"
        - "use-all-non-rejected-value-patterns-with-non-empty-values-but-may-reject"
        - "use-all-non-rejected-value-patterns-with-non-empty-values-and-never-reject"
        - "use-first-rejection-or-all-value-patterns-with-non-empty-values"
        description: >-
               The behavior to exhibit if the plugin is configured with multiple value patterns.
      perApplicationLDAPStats:
        type: string
        enum:
        - "aggregate-only"
        - "per-application-only"
        description: >-
               Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.
      userMappingRemoteJSONField:
        type: array
        items:
          type: string
        description: >-
               The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the local user entry, as specified in the user-mapping-local-attribute property.
      sourceAttribute:
        type: string
        description: >-
               Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute. Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute type.
      logInterval:
        type: string
        description: >-
               The duration between statistics collection and logging. A new line is logged to the output for each interval. Setting this value too small can have an impact on performance.
      customDatetimeFormat:
        type: string
        description: >-
               When the datetime-format property is configured with a value of "custom", this specifies the format (using a string compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.
      customTimezone:
        type: string
        description: >-
               Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The provided value must be accepted by java.util.TimeZone.getTimeZone.
      requestCriteria:
        type: string
        description: >-
               Specifies a set of request criteria that may be used to indicate whether to apply access time updates for the associated operation.
      initialConnections:
        type: integer
        description: >-
               Specifies the initial number of connections to establish to each external server against which authentication may be attempted.
      changelogPasswordEncryptionKeyPassphraseProvider:
        type: string
        description: >-
               A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync Server.
      targetAttributeExistsDuringInitialPopulationBehavior:
        type: string
        enum:
        - "preserve-existing-values"
        - "overwrite-existing-values"
        - "merge-existing-and-composed-values"
        - "reject-existing-values-in-add-but-preserve-in-ldif-import"
        - "reject-existing-values-in-add-but-overwrite-in-ldif-import"
        - "reject-existing-values-in-add-but-merge-in-ldif-import"
        description: >-
               The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).
      updateTargetAttributeBehavior:
        type: string
        enum:
        - "always-allow"
        - "allow-only-for-non-composed-values"
        - "never-allow"
        description: >-
               The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target attribute.
      sourceAttributeRemovalBehavior:
        type: string
        enum:
        - "preserve-non-composed-values"
        - "preserve-all-values"
        - "remove-all-values-but-preserve-all-if-required"
        - "remove-all-values-but-preserve-non-composed-if-required"
        description: >-
               The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a way that this plugin would no longer generate any composed values for that entry.
      connectionCriteria:
        type: string
        description: >-
               A reference to connection criteria that will be used to indicate which bind requests should be passed through to the PingOne service.
      generateCollectorFiles:
        type: boolean
        description: >-
               Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set to false to prevent unnecessary I/O.
      serverInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        description: >-
               Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.
      entryCacheInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        description: >-
               Specifies the level of detail to include for each entry cache.
      logFile:
        type: string
        description: >-
               The file name to use for the log files generated by the Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an absolute path.
      logFilePermissions:
        type: string
        description: >-
               The UNIX permissions of the log files created by this Periodic Stats Logger Plugin.
      histogramFormat:
        type: string
        enum:
        - "count"
        - "aggregate-percentage"
        description: >-
               The format of the data in the processing time histogram.
      sessionTimeout:
        type: string
        description: >-
               Specifies the maximum amount of time to wait for a session to the master agent to be established.
      invokeGCTimeUtc:
        type: array
        items:
          type: string
        description: >-
               Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in "HH:MM" format, with "HH" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC time zone.
      userMappingLocalAttribute:
        type: array
        items:
          type: string
        description: >-
               The names of the attributes in the local user entry whose values must match the values of the corresponding fields in the PingOne service.
      includeFilter:
        type: array
        items:
          type: string
        description: >-
               The set of search filters that identify entries for which composed values may be generated.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Plugin.
      filterPrefix:
        type: string
        description: >-
               Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should contain the entire filter string.
      upperBound:
        type: integer
        description: >-
               Specifies the upper bound for the numeric value which will be inserted into the search filter.
      includedResourceStat:
        type: array
        items:
          type: string
          enum:
          - "memory-utilization"
        description: >-
               Specifies whether statistics related to resource utilization such as JVM memory.
      dnMap:
        type: array
        items:
          type: string
        description: >-
               Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.
      description:
        type: string
        description: >-
               A description for this Plugin
      excludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing the modifiersName and modifyTimestamp values to be updated for that entry.
      datetimeJSONField:
        type: string
        description: >-
               The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.
      purgeBehavior:
        type: string
        enum:
        - "delete-entries"
        - "subtree-delete-entries"
        - "delete-json-attribute-values"
        description: >-
               Specifies whether to delete expired entries or attribute values. By default entries are deleted.
      gaugeInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        description: >-
               Specifies the level of detail to include for Gauges.
      ldapChangelogInfo:
        type: string
        enum:
        - "none"
        - "basic"
        - "extended"
        - "verbose"
        description: >-
               Specifies the level of detail to include for the LDAP changelog.
      histogramCategoryBoundary:
        type: array
        items:
          type: string
        description: >-
               Specifies the boundary values that will be used to separate the processing times into categories. Values should be specified as durations, and all values must be greater than zero.
      authURL:
        type: string
        description: >-
               Specifies the API endpoint for the PingOne authentication service.
      defaultUserPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy is to be used to govern them.
      scope:
        type: string
        enum:
        - "base"
        - "one"
        - "sub"
        - "subordinate-subtree"
        description: >-
               The scope to use for the search.
      enableControlMapping:
        type: boolean
        description: >-
               Indicates whether DN mapping should be applied to DNs that may be present in specific controls. DN mapping will only be applied for control types which are specifically supported by the DN mapper plugin.
      filterSuffix:
        type: string
        description: >-
               Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should be omitted.
      scriptArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given in the form 'name=value'.
      baseDN:
        type: string
        description: >-
               Specifies the base DN to use for the searches to perform.
      includeQueueTime:
        type: boolean
        description: >-
               Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be available if the work queue is configured to monitor the queue time.
      bindDNPattern:
        type: string
        description: >-
               A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.
      maxConnections:
        type: integer
        description: >-
               Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.
      referralBaseURL:
        type: array
        items:
          type: string
        description: >-
               Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address, and port to use to communicate with the target server (e.g., "ldap://server.example.com:389/").
      linesBetweenHeader:
        type: integer
        description: >-
               The number of lines to log between logging the header line that summarizes the columns in the table.
      pluginType:
        type: array
        items:
          type: string
          enum:
          - "startup"
          - "shutdown"
          - "postconnect"
          - "postdisconnect"
          - "ldifimport"
          - "ldifexport"
          - "preparseabandon"
          - "preparseadd"
          - "preparsebind"
          - "preparsecompare"
          - "preparsedelete"
          - "preparseextended"
          - "preparsemodify"
          - "preparsemodifydn"
          - "preparsesearch"
          - "preparseunbind"
          - "preoperationadd"
          - "preoperationbind"
          - "preoperationcompare"
          - "preoperationdelete"
          - "preoperationextended"
          - "preoperationmodify"
          - "preoperationmodifydn"
          - "preoperationsearch"
          - "postoperationabandon"
          - "postoperationadd"
          - "postoperationbind"
          - "postoperationcompare"
          - "postoperationdelete"
          - "postoperationextended"
          - "postoperationmodify"
          - "postoperationmodifydn"
          - "postoperationsearch"
          - "postoperationunbind"
          - "preresponseadd"
          - "preresponsebind"
          - "preresponsecompare"
          - "preresponsedelete"
          - "preresponseextended"
          - "preresponsemodify"
          - "preresponsemodifydn"
          - "preresponsesearch"
          - "postresponseadd"
          - "postresponsebind"
          - "postresponsecompare"
          - "postresponsedelete"
          - "postresponseextended"
          - "postresponsemodify"
          - "postresponsemodifydn"
          - "postresponsesearch"
          - "postsynchronizationadd"
          - "postsynchronizationdelete"
          - "postsynchronizationmodify"
          - "postsynchronizationmodifydn"
          - "searchresultentry"
          - "searchresultreference"
          - "subordinatemodifydn"
          - "intermediateresponse"
        description: >-
               Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.
      additionalUserMappingSCIMFilter:
        type: string
        description: >-
               An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that corresponds to the local entry. Only the "eq", "sw", "and", and "or" filter types may be used.
      logFileFormat:
        type: string
        enum:
        - "csv"
        - "json"
        description: >-
               Specifies the format to use when logging server statistics.
      agentxPort:
        type: integer
        description: >-
               The port number on which the SNMP master agent will be contacted.
      enableAttributeMapping:
        type: boolean
        description: >-
               Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.
      defaultAuthPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy should be used to govern them.
      multiValuedAttributeBehavior:
        type: string
        enum:
        - "use-first-value"
        - "reject-entries-with-any-multivalued-source-attribute"
        - "use-all-values-if-possible-but-reject-if-not"
        - "use-all-values-if-possible-but-only-first-value-if-not"
        description: >-
               The behavior to exhibit for source attributes that have multiple values.
      scriptClass:
        type: string
        description: >-
               The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.
      sourceDN:
        type: string
        description: >-
               Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the source DN must not be equal to the target DN.
      delayPostGC:
        type: string
        description: >-
               Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection processing, before removing the "force-gc-starting" administrative alert, which marks the server as unavailable.
      invokeForFailedBinds:
        type: boolean
        description: >-
               Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.
      headerPrefixPerColumn:
        type: boolean
        description: >-
               This property controls whether the header prefix, which applies to a group of columns, appears at the start of each column header or only the first column in a group.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the PingOne service.
      updatedEntryNoLongerMatchesCriteriaBehavior:
        type: string
        enum:
        - "preserve-all-values"
        - "preserve-non-composed-values"
        - "remove-all-values-but-preserve-all-if-required"
        - "remove-all-values-but-preserve-non-composed-if-required"
        description: >-
               The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN and filter criteria, but now no longer satisfies that criteria.
      searchBaseDN:
        type: string
        description: >-
               The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
      OAuthClientID:
        type: string
        description: >-
               Specifies the OAuth Client ID used to authenticate connections to the PingOne API.
      append:
        type: boolean
        description: >-
               Specifies whether to append to existing log files.
      updateSourceAttributeBehavior:
        type: string
        enum:
        - "replace-composed-values"
        - "replace-all-values"
        - "preserve-existing-values"
        description: >-
               The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any of the value patterns.

  custom-logged-stats-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/custom-logged-stats-response'
    required:
    - schemas
    - totalResults
  add-custom-logged-stats-request:
    allOf:
    - type: object
      properties:
        statsName:
          type: string
          description: >-
              Name of the new Custom Logged Stats
    - $ref: '#/definitions/custom-logged-stats-properties'
    required:
    - statsName
  custom-logged-stats-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Custom Logged Stats
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/custom-logged-stats-properties'
    required:
    - id
    - schemas
  custom-logged-stats-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/custom-logged-stats-response'
  custom-logged-stats-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:custom-logged-stats"
      divideValueBy:
        type: string
        description: >-
               An optional floating point value that can be used to scale the resulting value.
      divideValueByAttribute:
        type: string
        description: >-
               An optional property that can scale the resulting value by another attribute in the monitored entry.
      monitorObjectclass:
        type: string
        description: >-
               The objectclass name of the monitor entries to examine for generating these statistics.
      regexPattern:
        type: string
        description: >-
               An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the attribute being monitored.
      description:
        type: string
        description: >-
               A description for this Custom Logged Stats
      enabled:
        type: boolean
        description: >-
               Indicates whether the Custom Logged Stats object is enabled.
      attributeToLog:
        type: array
        items:
          type: string
        description: >-
               Specifies the attributes on the monitor entries that should be included in the output.
      headerPrefix:
        type: string
        description: >-
               An optional prefix that is included in the header before the column name.
      statisticType:
        type: array
        items:
          type: string
          enum:
          - "raw"
          - "counter"
          - "average"
          - "minimum"
          - "maximum"
        description: >-
               Specifies the type of statistic to include in the output for each monitored attribute.
      decimalFormat:
        type: string
        description: >-
               This provides a way to format the monitored attribute value in the output to control the precision for instance.
      headerPrefixAttribute:
        type: string
        description: >-
               An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.
      regexReplacement:
        type: string
        description: >-
               An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value of the attribute being monitored.
      nonZeroImpliesNotIdle:
        type: boolean
        description: >-
               If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an interval is considered "idle" by the Periodic Stats Logger.
      includeFilter:
        type: string
        description: >-
               An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.
      columnName:
        type: array
        items:
          type: string
        description: >-
               Optionally, specifies an explicit name for each column header instead of having these names automatically generated from the monitored attribute name.


