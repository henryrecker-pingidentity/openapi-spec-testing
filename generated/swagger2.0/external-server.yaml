swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /external-servers:
    get:
      summary: Returns a list of all External Server objects
      operationId: list-external-servers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
    post:
      summary: Add a new External Server to the config
      operationId: add-external-server
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-external-server-request'
        description: Create a new External Server in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
  /external-servers/{external-server-name}:
    get:
      operationId: get-external-server
      summary: Returns a single External Server
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the External Server
        in: path
        name: external-server-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
    put:
      operationId: put-external-server
      summary: Update an existing External Server by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the External Server
        in: path
        name: external-server-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/external-server-properties'
        description: Attributes to replace in the External Server
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
    patch:
      operationId: patch-external-server
      summary: Update an existing External Server by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the External Server
        in: path
        name: external-server-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the External Server
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/external-server-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server
    delete:
      summary: Delete a External Server
      operationId: delete-external-server
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the External Server
        in: path
        name: external-server-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - external-server

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  external-server-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/external-server-response'
    required:
    - schemas
    - totalResults
  add-external-server-request:
    allOf:
    - type: object
      properties:
        serverName:
          type: string
          description: >-
              Name of the new External Server
    - $ref: '#/definitions/external-server-properties'
    required:
    - serverName
  external-server-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the External Server
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/external-server-properties'
    required:
    - id
    - schemas
  external-server-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/external-server-response'
  external-server-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:external-server:smtp"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-ds"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-ds"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:active-directory"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:jdbc"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:syslog"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-proxy-server"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:http-proxy"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-proxy-server"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:opendj"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:ldap"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-one-http"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:http"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:oracle-unified-directory"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:conjur"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:amazon-aws"
          - "urn:pingidentity:schemas:configuration:2.0:external-server:vault"
      maxConnectionAge:
        type: string
        description: >-
               Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
      databaseName:
        type: string
        description: >-
               Specifies which database to connect to. This is ignored if jdbc-driver-url is specified.
      awsAccessKeyID:
        type: string
        description: >-
               The access key ID that will be used if authentication should use an access key. If this is provided, then an aws-secret-access-key must also be provided.
      serverHostName:
        type: string
        description: >-
               The host name of the smtp server.
      transactionIsolationLevel:
        type: string
        enum:
        - "read-committed"
        - "read-uncommitted"
        - "repeatable-read"
        - "serializable"
        description: >-
               This property specifies the default transaction isolation level for connections to this JDBC External Server.
      password:
        type: string
        description: >-
               The login password for the specified user name. Both username and password must be supplied if this attribute is set.
      maxResponseSize:
        type: string
        description: >-
               Specifies the maximum response size that should be supported for messages received from the LDAP external server.
      connectionSecurity:
        type: string
        enum:
        - "none"
        - "ssl"
        - "starttls"
        description: >-
               The mechanism to use to secure communication with the directory server.
      healthCheckConnectTimeout:
        type: string
        description: >-
               Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
      connectTimeout:
        type: string
        description: >-
               Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
      jdbcConnectionProperties:
        type: array
        items:
          type: string
        description: >-
               Specifies the connection properties for the JDBC datasource.
      hostnameVerificationMethod:
        type: string
        enum:
        - "allow-all"
        - "strict"
        description: >-
               The mechanism for checking if the hostname in the PingOne ID Token Validator's base-url value matches the name(s) stored inside the X.509 certificate presented by PingOne.
      vaultAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Vault server.
      trustStoreType:
        type: string
        description: >-
               The store type for the specified trust store file. The value should likely be one of "JKS", "PKCS12", or "BCFKS".
      basicAuthenticationPassphraseProvider:
        type: string
        description: >-
               A passphrase provider that provides access to the password to use to authenticate to the HTTP Proxy External Server.
      responseTimeout:
        type: string
        description: >-
               Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to PingOne.
      conjurAuthenticationMethod:
        type: string
        description: >-
               The mechanism used to authenticate to the Conjur server.
      trustManagerProvider:
        type: string
        description: >-
               The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
      initialConnections:
        type: integer
        description: >-
               The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
      useAdministrativeOperationControl:
        type: boolean
        description: >-
               Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.
      sslCertNickname:
        type: string
        description: >-
               The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
      defunctConnectionResultCode:
        type: array
        items:
          type: string
          enum:
          - "success"
          - "operations-error"
          - "protocol-error"
          - "time-limit-exceeded"
          - "size-limit-exceeded"
          - "compare-false"
          - "compare-true"
          - "auth-method-not-supported"
          - "strong-auth-required"
          - "referral"
          - "admin-limit-exceeded"
          - "unavailable-critical-extension"
          - "confidentiality-required"
          - "sasl-bind-in-progress"
          - "no-such-attribute"
          - "undefined-attribute-type"
          - "inappropriate-matching"
          - "constraint-violation"
          - "attribute-or-value-exists"
          - "invalid-attribute-syntax"
          - "no-such-object"
          - "alias-problem"
          - "invalid-dn-syntax"
          - "alias-dereferencing-problem"
          - "inappropriate-authentication"
          - "invalid-credentials"
          - "insufficient-access-rights"
          - "busy"
          - "unavailable"
          - "unwilling-to-perform"
          - "loop-detect"
          - "sort-control-missing"
          - "offset-range-error"
          - "naming-violation"
          - "object-class-violation"
          - "not-allowed-on-nonleaf"
          - "not-allowed-on-rdn"
          - "entry-already-exists"
          - "object-class-mods-prohibited"
          - "affects-multiple-dsas"
          - "virtual-list-view-error"
          - "other"
          - "server-down"
          - "local-error"
          - "encoding-error"
          - "decoding-error"
          - "timeout"
          - "auth-unknown"
          - "filter-error"
          - "user-canceled"
          - "param-error"
          - "no-memory"
          - "connect-error"
          - "not-supported"
          - "control-not-found"
          - "no-results-returned"
          - "more-results-to-return"
          - "client-loop"
          - "referral-limit-exceeded"
          - "canceled"
          - "no-such-operation"
          - "too-late"
          - "cannot-cancel"
          - "assertion-failed"
          - "authorization-denied"
          - "no-operation"
          - "interactive-transaction-aborted"
        description: >-
               Specifies the operation result code values that should cause the associated connection should be considered defunct. If an operation fails with one of these result codes, then it will be terminated and an attempt will be made to establish a new connection in its place.
      minExpiredConnectionDisconnectInterval:
        type: string
        description: >-
               Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
      bindDN:
        type: string
        description: >-
               The DN to use to bind to the target LDAP server if simple authentication is required.
      authenticationMethod:
        type: string
        enum:
        - "none"
        - "simple"
        - "external"
        - "inter-server"
        description: >-
               The mechanism to use to authenticate to the target server.
      validationQueryTimeout:
        type: string
        description: >-
               Specifies the amount of time to wait for a response from the database when executing the validation query, if one is set. If the timeout is exceeded, the Directory Server will drop the connection and obtain a new one. A value of zero indicates no timeout.
      conjurAccountName:
        type: string
        description: >-
               The name of the account with which the desired secrets are associated.
      validationQuery:
        type: string
        description: >-
               The SQL query that will be used to validate connections to the database before making them available to the Directory Server.
      smtpTimeout:
        type: string
        description: >-
               Specifies the maximum length of time that a connection or attempted connection to a SMTP server may take.
      vaultServerBaseURI:
        type: array
        items:
          type: string
        description: >-
               The base URL needed to access the Vault server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://vault.example.com:8200/".
      description:
        type: string
        description: >-
               A description for this External Server
      serverPort:
        type: integer
        description: >-
               The port number where the smtp server listens for requests.
      passphraseProvider:
        type: string
        description: >-
               The passphrase provider to use to obtain the login password for the specified user.
      conjurServerBaseURI:
        type: array
        items:
          type: string
        description: >-
               The base URL needed to access the CyberArk Conjur server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://conjur.example.com:8443/".
      trustStoreFile:
        type: string
        description: >-
               The path to a file containing the information needed to trust the certificate presented by the Conjur servers.
      keyManagerProvider:
        type: string
        description: >-
               The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
      basicAuthenticationUsername:
        type: string
        description: >-
               The username to use to authenticate to the HTTP Proxy External Server.
      trustStorePin:
        type: string
        description: >-
               The PIN needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
      verifyCredentialsMethod:
        type: string
        enum:
        - "separate-connections"
        - "retain-identity-control"
        - "bind-on-existing-connections"
        description: >-
               The mechanism to use to verify user credentials while ensuring that the ability to process other operations is not impacted by an alternate authorization identity.
      maxConnections:
        type: integer
        description: >-
               The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
      awsSecretAccessKey:
        type: string
        description: >-
               The secret access key that will be used if authentication should use an access key. If this is provided, then an aws-access-key-id must also be provided.
      awsRegionName:
        type: string
        description: >-
               The name of the AWS region containing the resources that will be accessed.
      smtpSecurity:
        type: string
        enum:
        - "none"
        - "starttls"
        - "ssl"
        description: >-
               This property specifies type of connection security to use when connecting to the outgoing mail server.
      jdbcDriverType:
        type: string
        enum:
        - "oraclethin"
        - "oracleoci"
        - "mysql"
        - "db2"
        - "sqlserver"
        - "postgres"
        - "other"
        description: >-
               Specifies a supported database driver type. The driver class will be automatically selected based on this selection. We highly recommend using a JDBC 4 driver that is suitable for the current Java platform.
      smtpConnectionProperties:
        type: array
        items:
          type: string
        description: >-
               Specifies the connection properties for the smtp server.
      userName:
        type: string
        description: >-
               The name of the login account to use when connecting to the smtp server. Both username and password must be supplied if this attribute is set.
      transportMechanism:
        type: string
        enum:
        - "unencrypted-udp"
        - "unencrypted-tcp"
        - "tls-encrypted-tcp"
        description: >-
               The transport mechanism that should be used when communicating with the syslog server.
      baseURL:
        type: string
        description: >-
               The base URL of the external server, optionally including port number, for example "https://externalService:9031".
      abandonOnTimeout:
        type: boolean
        description: >-
               Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
      jdbcDriverURL:
        type: string
        description: >-
               Specify the complete JDBC URL which will be used instead of the automatic URL format. You must select type 'other' for the jdbc-driver-type.
      location:
        type: string
        description: >-
               Specifies the location for the LDAP External Server.
      httpProxyExternalServer:
        type: string
        description: >-
               A reference to an HTTP proxy server that should be used for requests sent to the AWS service.


