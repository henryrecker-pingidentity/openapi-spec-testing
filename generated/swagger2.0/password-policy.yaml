swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /password-policies:
    get:
      summary: Returns a list of all Password Policy objects
      operationId: list-password-policies
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
    post:
      summary: Add a new Password Policy to the config
      operationId: add-password-policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-password-policy-request'
        description: Create a new Password Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
  /password-policies/{password-policy-name}:
    get:
      operationId: get-password-policy
      summary: Returns a single Password Policy
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Password Policy
        in: path
        name: password-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
    put:
      operationId: put-password-policy
      summary: Update an existing Password Policy by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Policy
        in: path
        name: password-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/password-policy-properties'
        description: Attributes to replace in the Password Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
    patch:
      operationId: patch-password-policy
      summary: Update an existing Password Policy by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Policy
        in: path
        name: password-policy-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Password Policy
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/password-policy-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy
    delete:
      summary: Delete a Password Policy
      operationId: delete-password-policy
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Password Policy
        in: path
        name: password-policy-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - password-policy

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  password-policy-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/password-policy-response'
    required:
    - schemas
    - totalResults
  add-password-policy-request:
    allOf:
    - type: object
      properties:
        policyName:
          type: string
          description: >-
              Name of the new Password Policy
    - $ref: '#/definitions/password-policy-properties'
    required:
    - policyName
  password-policy-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Password Policy
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/password-policy-properties'
    required:
    - id
    - schemas
  password-policy-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/password-policy-response'
  password-policy-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:password-policy"
      previousLastLoginTimeFormat:
        type: array
        items:
          type: string
        description: >-
               Specifies the format string(s) that might have been used with the last login time at any point in the past for users associated with the password policy.
      recentLoginHistorySimilarAttemptBehavior:
        type: string
        enum:
        - "collapse-similar-attempts-on-the-same-date"
        - "maintain-every-attempt"
        - "update-at-most-once-per-day"
        description: >-
               The behavior that the server will exhibit when multiple similar authentication attempts (with the same values for the successful, authentication-method, client-ip-address, and failure-reason fields) are processed for an account.
      maxPasswordAge:
        type: string
        description: >-
               Specifies the maximum length of time that a user can continue using the same password before it must be changed (that is, the password expiration interval).
      requireChangeByTime:
        type: string
        description: >-
               Specifies the time by which all users with the associated password policy must change their passwords.
      requireSecurePasswordChanges:
        type: boolean
        description: >-
               Indicates whether users with the associated password policy are required to change their password in a secure manner that does not expose the credentials.
      accountStatusNotificationHandler:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the account status notification handlers that are used with the associated password storage scheme.
      passwordHistoryDuration:
        type: string
        description: >-
               Specifies the maximum length of time that passwords remain in the password history.
      deprecatedPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password storage schemes that are considered deprecated for this password policy.
      lockoutFailureCount:
        type: integer
        description: >-
               Specifies the maximum number of authentication failures that a user is allowed before the account is locked out.
      failureLockoutAction:
        type: string
        description: >-
               The action that the server should take for authentication attempts that target a user with more than the configured number of outstanding authentication failures.
      requireSecureAuthentication:
        type: boolean
        description: >-
               Indicates whether users with the associated password policy are required to authenticate in a secure manner.
      defaultPasswordStorageScheme:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password storage schemes that are used to encode clear-text passwords for this password policy.
      maxPasswordResetAge:
        type: string
        description: >-
               Specifies the maximum length of time that users have to change passwords after they have been reset by an administrator before they become locked.
      forceChangeOnReset:
        type: boolean
        description: >-
               Indicates whether users are forced to change their passwords if they are reset by an administrator. If a user's password is changed by any other user, that is considered an administrative password reset.
      minPasswordAge:
        type: string
        description: >-
               Specifies the minimum length of time after a password change before the user is allowed to change the password again.
      minimumBindPasswordValidationFrequency:
        type: string
        description: >-
               Indicates how frequently password validation should be performed during bind operations for each user to whom this password policy is assigned.
      skipValidationForAdministrators:
        type: boolean
        description: >-
               Indicates whether passwords set by administrators are allowed to bypass the password validation process that is required for user password changes.
      forceChangeOnAdd:
        type: boolean
        description: >-
               Indicates whether users are forced to change their passwords upon first authenticating to the Directory Server after their account has been created.
      maximumRecentLoginHistoryFailedAuthenticationCount:
        type: integer
        description: >-
               The maximum number of failed authentication attempts to include in the recent login history for each account.
      ignoreDuplicatePasswordFailures:
        type: boolean
        description: >-
               Indicates whether to ignore subsequent authentication failures using the same password as an earlier failed authentication attempt (within the time frame defined by the lockout failure expiration interval). If this option is "true", then multiple failed attempts using the same password will be considered only a single failure. If this option is "false", then any failure will be tracked regardless of whether it used the same password as an earlier attempt.
      lastLoginTimeFormat:
        type: string
        description: >-
               Specifies the format string that is used to generate the last login time value for users with the associated password policy. Last login time values will be written using the UTC (also known as GMT, or Greenwich Mean Time) time zone.
      passwordGenerator:
        type: string
        description: >-
               Specifies the name of the password generator that is used with the associated password policy.
      expirePasswordsWithoutWarning:
        type: boolean
        description: >-
               Indicates whether the Directory Server allows a user's password to expire even if that user has never seen an expiration warning notification.
      passwordAttribute:
        type: string
        description: >-
               Specifies the attribute type used to hold user passwords.
      passwordChangeRequiresCurrentPassword:
        type: boolean
        description: >-
               Indicates whether user password changes must use the password modify extended operation and must include the user's current password before the change is allowed.
      lastLoginTimeAttribute:
        type: string
        description: >-
               Specifies the name or OID of the attribute type that is used to hold the last login time for users with the associated password policy.
      lastLoginIPAddressAttribute:
        type: string
        description: >-
               Specifies the name or OID of the attribute type that is used to hold the IP address of the client from which the user last authenticated.
      enableDebug:
        type: boolean
        description: >-
               Indicates whether to enable debugging for the password policy state.
      returnPasswordExpirationControls:
        type: string
        enum:
        - "unless-password-policy-control-is-used"
        - "always"
        - "never"
        description: >-
               Indicates whether the server should return the password expiring and password expired response controls (as described in draft-vchu-ldap-pwd-policy).
      passwordExpirationWarningInterval:
        type: string
        description: >-
               Specifies the maximum length of time before a user's password actually expires that the server begins to include warning notifications in bind responses for that user.
      graceLoginCount:
        type: integer
        description: >-
               Specifies the number of grace logins that a user is allowed after the account has expired to allow that user to choose a new password.
      description:
        type: string
        description: >-
               A description for this Password Policy
      bindPasswordValidator:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password validators that should be invoked for bind operations.
      maximumRecentLoginHistorySuccessfulAuthenticationDuration:
        type: string
        description: >-
               The maximum age of successful authentication attempts to include in the recent login history for each account.
      idleLockoutInterval:
        type: string
        description: >-
               Specifies the maximum length of time that an account may remain idle (that is, the associated user does not authenticate to the server) before that user is locked out.
      lockoutFailureExpirationInterval:
        type: string
        description: >-
               Specifies the length of time before an authentication failure is no longer counted against a user for the purposes of account lockout.
      allowPreEncodedPasswords:
        type: boolean
        description: >-
               Indicates whether users can change their passwords by providing a pre-encoded value.
      stateUpdateFailurePolicy:
        type: string
        enum:
        - "ignore"
        - "reactive"
        - "proactive"
        description: >-
               Specifies how the server deals with the inability to update password policy state information during an authentication attempt.
      allowMultiplePasswordValues:
        type: boolean
        description: >-
               Indicates whether user entries can have multiple distinct values for the password attribute.
      allowExpiredPasswordChanges:
        type: boolean
        description: >-
               Indicates whether a user whose password is expired is still allowed to change that password using the password modify extended operation.
      maximumRecentLoginHistorySuccessfulAuthenticationCount:
        type: integer
        description: >-
               The maximum number of successful authentication attempts to include in the recent login history for each account.
      maxRetiredPasswordAge:
        type: string
        description: >-
               Specifies the maximum length of time that a retired password should be considered valid and may be used to authenticate to the server.
      allowedPasswordResetTokenUseCondition:
        type: array
        items:
          type: string
          enum:
          - "account-usable"
          - "password-expired"
          - "account-locked-due-to-failures"
          - "account-locked-due-to-idle-time-limit"
          - "account-locked-due-to-admin-reset-timeout"
          - "account-locked-due-to-validation-failure"
        description: >-
               The set of conditions under which a user governed by this Password Policy will be permitted to generate a password reset token via the deliver password reset token extended operation, and to use that token in lieu of the current password via the password modify extended operation.
      maximumRecentLoginHistoryFailedAuthenticationDuration:
        type: string
        description: >-
               The maximum age of failed authentication attempts to include in the recent login history for each account.
      bindPasswordValidationFailureAction:
        type: string
        enum:
        - "reject-bind"
        - "force-password-change"
        - "generate-account-status-notification"
        description: >-
               Specifies the behavior that the server should exhibit if a bind password fails validation by one or more of the configured bind password validators.
      passwordHistoryCount:
        type: integer
        description: >-
               Specifies the maximum number of former passwords to maintain in the password history.
      lockoutDuration:
        type: string
        description: >-
               Specifies the length of time that an account is locked after too many authentication failures.
      allowUserPasswordChanges:
        type: boolean
        description: >-
               Indicates whether users can change their own passwords.
      passwordValidator:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the password validators that are used with the associated password storage scheme.
      passwordRetirementBehavior:
        type: array
        items:
          type: string
          enum:
          - "retire-on-self-change"
          - "retire-on-administrative-reset"
          - "retire-on-request-with-control"
        description: >-
               Specifies the conditions under which the server may retire a user's current password in the course of setting a new password for that user (whether via a modify operation or a password modify extended operation).


