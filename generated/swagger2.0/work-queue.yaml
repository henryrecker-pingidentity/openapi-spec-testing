swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /work-queue:
    get:
      operationId: get-work-queue
      summary: Returns the Work Queue
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/work-queue-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - work-queue
    put:
      operationId: put-work-queue
      summary: Update the Work Queue, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/work-queue-properties'
        description: Attributes to replace in the Work Queue
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/work-queue-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - work-queue
    patch:
      operationId: patch-work-queue
      summary: Update an existing Work Queue by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Work Queue
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/work-queue-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - work-queue

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  work-queue-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Work Queue
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/work-queue-properties'
    required:
    - id
    - schemas
  work-queue-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/work-queue-response'
  work-queue-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:work-queue"
      expensiveOperationMinimumDumpInterval:
        type: string
        description: >-
               The minimum length of time that should be required to pass after dumping stack trace information for all threads before the server should be allowed to create a second dump. This will help prevent the server from dumping stack traces too frequently and eventually consuming all available disk space with stack trace log output. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
      maxOfferTime:
        type: string
        description: >-
               Specifies the maximum length of time that the connection handler should be allowed to wait to enqueue a request if the work queue is full. If the attempt to enqueue an operation does not succeed within this period of time, then the operation will be rejected and an error response will be returned to the client. A value of zero indicates that operations should be rejected immediately if the work queue is already at its maximum capacity.
      expensiveOperationMinimumConcurrentCount:
        type: integer
        description: >-
               The minimum number of concurrent expensive operations that should be detected to trigger dumping stack traces for all threads. If at least this number of worker threads are seen processing the same operations in two consecutive intervals, then the server will dump a stack trace of all threads to a file. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
      numAdministrativeSessionWorkerThreads:
        type: integer
        description: >-
               Specifies the number of worker threads that should be used to process operations as part of an administrative session. These threads may be reserved only for special use by management applications like dsconfig, the administration console, and other administrative tools, so that these applications may be used to diagnose problems and take any necessary corrective action even if all "normal" worker threads are busy processing other requests.
      maxQueueTime:
        type: string
        description: >-
               Specifies the maximum length of time that an operation should be allowed to wait on the work queue. If an operation has been waiting on the queue longer than this period of time, then it will receive an immediate failure result rather than being processed once it has been handed off to a worker thread. A value of zero seconds indicates that there should not be any maximum queue time imposed. This setting will only be used if the monitor-queue-time property has a value of true.
      expensiveOperationCheckInterval:
        type: string
        description: >-
               The interval that the work queue should use when checking for potentially expensive operations. If at least expensive-operation-minimum-concurrent-count worker threads are found to be processing the same operation on two consecutive polls separated by this time interval (i.e., the worker thread has been processing that operation for at least this length of time, and potentially up to twice this length of time), then a stack trace of all running threads will be written to a file for analysis to provide potentially useful information that may help better understand the reason it is taking so long. It may be that the operation is simply an expensive one to process, but there may be other external factors (e.g., a database checkpoint, a log rotation, lock contention, etc.) that could be to blame. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
      numQueues:
        type: integer
        description: >-
               Specifies the number of blocking queues that should be maintained. A value of zero indicates that the server should attempt to automatically select an optimal value (one queue for every two worker threads).
      numWriteQueues:
        type: integer
        description: >-
               Specifies the number of blocking queues that should be maintained for write operations. This will only be used if a value is specified for the num-write-worker-threads property, in which case the num-queues property will specify the number of queues for read operations. Otherwise, all operations will be processed by a common set of worker threads and the value of the num-queues property will specify the number of queues for all types of operations.
      maxWorkQueueCapacity:
        type: integer
        description: >-
               Specifies the maximum number of pending operations that may be held in any of the queues at any given time. The total number of pending requests may be as large as this value times the total number of queues.
      monitorQueueTime:
        type: boolean
        description: >-
               Indicates whether the work queue should monitor the length of time that operations are held in the queue. When enabled the queue time will be included with access log messages as "qtime" in milliseconds.
      numWriteWorkerThreads:
        type: integer
        description: >-
               Specifies the number of worker threads that should be used within the server to process write (add, delete, modify, and modify DN) operations. If this is specified, then separate sets of worker threads will be used for processing read and write operations, and the value of the num-worker-threads property will reflect the number of threads to use to process read operations.
      numWorkerThreads:
        type: integer
        description: >-
               Specifies the total number of worker threads that should be used within the server in order to process requested operations. The worker threads will be split evenly across all of the configured queues.


