swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /connection-handlers:
    get:
      summary: Returns a list of all Connection Handler objects
      operationId: list-connection-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
    post:
      summary: Add a new Connection Handler to the config
      operationId: add-connection-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-connection-handler-request'
        description: Create a new Connection Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
  /connection-handlers/{connection-handler-name}:
    get:
      operationId: get-connection-handler
      summary: Returns a single Connection Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Connection Handler
        in: path
        name: connection-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
    put:
      operationId: put-connection-handler
      summary: Update an existing Connection Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Handler
        in: path
        name: connection-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/connection-handler-properties'
        description: Attributes to replace in the Connection Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
    patch:
      operationId: patch-connection-handler
      summary: Update an existing Connection Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Handler
        in: path
        name: connection-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Connection Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/connection-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler
    delete:
      summary: Delete a Connection Handler
      operationId: delete-connection-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Connection Handler
        in: path
        name: connection-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - connection-handler

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  connection-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/connection-handler-response'
    required:
    - schemas
    - totalResults
  add-connection-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new Connection Handler
    - $ref: '#/definitions/connection-handler-properties'
    required:
    - handlerName
  connection-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Connection Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/connection-handler-properties'
    required:
    - id
    - schemas
  connection-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/connection-handler-response'
  connection-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:connection-handler:jmx"
          - "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldap"
          - "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldif"
          - "urn:pingidentity:schemas:configuration:2.0:connection-handler:http"
      correlationIDRequestHeader:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of HTTP request headers that may contain a value to be used as the correlation ID. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      numRequestHandlers:
        type: integer
        description: >-
               Specifies the number of request handlers that are used to read requests from clients.
      enableMultipartMIMEParameters:
        type: boolean
        description: >-
               Determines whether request form parameters submitted in multipart/ form-data (RFC 2388) format should be processed as request parameters.
      responseHeader:
        type: array
        items:
          type: string
        description: >-
               Specifies HTTP header fields and values added to response headers for all requests.
      description:
        type: string
        description: >-
               A description for this Connection Handler
      httpRequestHeaderSize:
        type: integer
        description: >-
               Specifies the maximum buffer size of an http request including the request uri and all of the request headers.
      enabled:
        type: boolean
        description: >-
               Indicates whether the Connection Handler is enabled.
      idleTimeLimit:
        type: string
        description: >-
               Specifies the maximum idle time for a connection. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.
      lowResourcesConnectionThreshold:
        type: integer
        description: >-
               Specifies the number of connections, which if exceeded, places this handler in a low resource state where a different idle time limit is applied on the connections.
      keyManagerProvider:
        type: string
        description: >-
               Specifies the name of the key manager that should be used with this JMX Connection Handler .
      listenAddress:
        type: array
        items:
          type: string
        description: >-
               Specifies the address or set of addresses on which this LDAP Connection Handler should listen for connections from LDAP clients.
      ldifDirectory:
        type: string
        description: >-
               Specifies the path to the directory in which the LDIF files should be placed.
      correlationIDResponseHeader:
        type: string
        description: >-
               Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      acceptBacklog:
        type: integer
        description: >-
               Specifies the maximum number of pending connection attempts that are allowed to queue up in the accept backlog before the server starts rejecting new connection attempts.
      autoAuthenticateUsingClientCertificate:
        type: boolean
        description: >-
               Indicates whether to attempt to automatically authenticate a client connection that has established a secure communication channel (using either SSL or StartTLS) and presented its own client certificate. Generally, clients should use the SASL EXTERNAL mechanism to authenticate using a client certificate, but some clients may not support that capability and/or may expect automatic authentication.
      lowResourcesIdleTimeLimit:
        type: string
        description: >-
               Specifies the maximum idle time for a connection when this handler is in a low resource state as defined by low-resource-connections. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.
      closeConnectionsOnExplicitGC:
        type: boolean
        description: >-
               Indicates whether all connections associated with this LDAP Connection Handler should be closed before an explicit garbage collection is performed to allow clients to route requests to another server.
      webApplicationExtension:
        type: array
        items:
          type: string
        description: >-
               Specifies information about web applications that will be provided via this connection handler.
      useTCPKeepAlive:
        type: boolean
        description: >-
               Indicates whether the LDAP Connection Handler should use TCP keep-alive.
      allowTCPReuseAddress:
        type: boolean
        description: >-
               Indicates whether the server should attempt to reuse socket descriptors. This may be useful in environments with a high rate of connection establishment and termination.
      httpOperationLogPublisher:
        type: array
        items:
          type: string
        description: >-
               Specifies the set of HTTP operation loggers that should be used to log information about requests and responses for operations processed through this HTTP Connection Handler.
      maxRequestSize:
        type: string
        description: >-
               Specifies the size of the largest LDAP request message that will be allowed by this LDAP Connection handler.
      useForwardedHeaders:
        type: boolean
        description: >-
               Indicates whether to use "Forwarded" and "X-Forwarded-*" request headers to override corresponding HTTP request information available during request processing.
      trustManagerProvider:
        type: string
        description: >-
               Specifies the name of the trust manager that should be used with the LDAP Connection Handler .
      httpServletExtension:
        type: array
        items:
          type: string
        description: >-
               Specifies information about servlets that will be provided via this connection handler.
      sslCertNickname:
        type: string
        description: >-
               Specifies the nickname (also called the alias) of the certificate that the JMX Connection Handler should use when performing SSL communication.
      useCorrelationIDHeader:
        type: boolean
        description: >-
               If enabled, a correlation ID header will be added to outgoing HTTP responses.
      allowedClient:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of address masks that determines the addresses of the clients that are allowed to establish connections to this connection handler.
      numAcceptHandlers:
        type: integer
        description: >-
               Specifies the number of threads that are used to accept new client connections, and to perform any initial preparation on those connections that may be needed before the connection can be used to read requests and send responses.
      useSSL:
        type: boolean
        description: >-
               Indicates whether the JMX Connection Handler should use SSL.
      sendRejectionNotice:
        type: boolean
        description: >-
               Indicates whether the LDAP Connection Handler should send a notice of disconnection extended response message to the client if a new connection is rejected for some reason.
      maxBlockedWriteTimeLimit:
        type: string
        description: >-
               Specifies the maximum length of time that attempts to write data to LDAP clients should be allowed to block.
      closeConnectionsWhenUnavailable:
        type: boolean
        description: >-
               Indicates whether all connections associated with this LDAP Connection Handler should be closed and no new connections accepted when the server has determined that it is "unavailable." This allows clients (or a network load balancer) to route requests to another server.
      pollInterval:
        type: string
        description: >-
               Specifies how frequently the LDIF connection handler should check the LDIF directory to determine whether a new LDIF file has been added.
      allowStartTLS:
        type: boolean
        description: >-
               Indicates whether clients are allowed to use StartTLS.
      failedBindResponseDelay:
        type: string
        description: >-
               Specifies the length of time that the server should delay the response to non-successful bind operations. A value of zero milliseconds indicates that non-successful bind operations should not be delayed.
      keepStats:
        type: boolean
        description: >-
               Indicates whether to enable statistics collection for this connection handler.
      sslClientAuthPolicy:
        type: string
        enum:
        - "disabled"
        - "optional"
        - "required"
        description: >-
               Specifies the policy that the LDAP Connection Handler should use regarding client SSL certificates.
      sslProtocol:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the SSL protocols that are allowed for use in SSL or StartTLS communication. The set of supported ssl protocols can be viewed via the ssl context monitor entry.
      deniedClient:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of address masks that determines the addresses of the clients that are not allowed to establish connections to this connection handler.
      allowLDAPV2:
        type: boolean
        description: >-
               Indicates whether connections from LDAPv2 clients are allowed.
      maxCancelHandlers:
        type: integer
        description: >-
               Specifies the maximum number of threads that are used to process cancel and abandon requests from clients.
      sslCipherSuite:
        type: array
        items:
          type: string
        description: >-
               Specifies the names of the SSL cipher suites that are allowed for use in SSL or StartTLS communication. The set of supported cipher suites can be viewed via the ssl context monitor entry.
      listenPort:
        type: integer
        description: >-
               Specifies the port number on which the JMX Connection Handler will listen for connections from clients.


