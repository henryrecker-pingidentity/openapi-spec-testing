swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /id-token-validators:
    get:
      summary: Returns a list of all ID Token Validator objects
      operationId: list-id-token-validators
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
    post:
      summary: Add a new ID Token Validator to the config
      operationId: add-id-token-validator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-id-token-validator-request'
        description: Create a new ID Token Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
  /id-token-validators/{id-token-validator-name}:
    get:
      operationId: get-id-token-validator
      summary: Returns a single ID Token Validator
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
    put:
      operationId: put-id-token-validator
      summary: Update an existing ID Token Validator by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/id-token-validator-properties'
        description: Attributes to replace in the ID Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
    patch:
      operationId: patch-id-token-validator
      summary: Update an existing ID Token Validator by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the ID Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/id-token-validator-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator
    delete:
      summary: Delete a ID Token Validator
      operationId: delete-id-token-validator
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - id-token-validator

  /id-token-validators/{id-token-validator-name}/token-claim-validations:
    get:
      summary: Returns a list of all Token Claim Validation objects
      operationId: list-token-claim-validations
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
    post:
      summary: Add a new Token Claim Validation to the config
      operationId: add-token-claim-validation
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-token-claim-validation-request'
        description: Create a new Token Claim Validation in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
  /id-token-validators/{id-token-validator-name}/token-claim-validations/{token-claim-validation-name}:
    get:
      operationId: get-token-claim-validation
      summary: Returns a single Token Claim Validation
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Token Claim Validation
        in: path
        name: token-claim-validation-name
        required: true
        type: string
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
    put:
      operationId: put-token-claim-validation
      summary: Update an existing Token Claim Validation by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Token Claim Validation
        in: path
        name: token-claim-validation-name
        required: true
        type: string
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/token-claim-validation-properties'
        description: Attributes to replace in the Token Claim Validation
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
    patch:
      operationId: patch-token-claim-validation
      summary: Update an existing Token Claim Validation by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Token Claim Validation
        in: path
        name: token-claim-validation-name
        required: true
        type: string
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Token Claim Validation
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/token-claim-validation-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation
    delete:
      summary: Delete a Token Claim Validation
      operationId: delete-token-claim-validation
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Token Claim Validation
        in: path
        name: token-claim-validation-name
        required: true
        type: string
      - description: Name of the ID Token Validator
        in: path
        name: id-token-validator-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - token-claim-validation

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  id-token-validator-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/id-token-validator-response'
    required:
    - schemas
    - totalResults
  add-id-token-validator-request:
    allOf:
    - type: object
      properties:
        validatorName:
          type: string
          description: >-
              Name of the new ID Token Validator
    - $ref: '#/definitions/id-token-validator-properties'
    required:
    - validatorName
  id-token-validator-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the ID Token Validator
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/id-token-validator-properties'
    required:
    - id
    - schemas
  id-token-validator-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/id-token-validator-response'
  id-token-validator-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:id-token-validator:ping-one"
          - "urn:pingidentity:schemas:configuration:2.0:id-token-validator:openid-connect"
      OpenIDConnectMetadataCacheDuration:
        type: string
        description: >-
               How often the PingOne ID Token Validator should refresh its stored cache of OpenID Connect-related metadata.
      subjectClaimName:
        type: string
        description: >-
               The name of the token claim that contains the subject; i.e., the authenticated user.
      signingCertificate:
        type: array
        items:
          type: string
        description: >-
               Specifies the locally stored certificates that may be used to validate the signature of an incoming ID token. This property may be specified if a JWKS endpoint should not be used to retrieve public signing keys.
      OpenIDConnectProvider:
        type: string
        description: >-
               Specifies HTTPS connection settings for the PingOne OpenID Connect provider.
      issuerURL:
        type: string
        description: >-
               Specifies a PingOne base issuer URL.
      jwksEndpointPath:
        type: string
        description: >-
               The relative path to the JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming ID token. This path is relative to the base_url property defined for the validator's OpenID Connect provider. If jwks-endpoint-path is specified, the OpenID Connect ID Token Validator will not consult locally stored certificates for validating token signatures.
      description:
        type: string
        description: >-
               A description for this ID Token Validator
      enabled:
        type: boolean
        description: >-
               Indicates whether this ID Token Validator is enabled for use in the Directory Server.
      evaluationOrderIndex:
        type: integer
        description: >-
               When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.
      identityMapper:
        type: string
        description: >-
               Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
      jwksCacheDuration:
        type: string
        description: >-
               How often the ID Token Validator should refresh its cache of JWKS token signing keys.
      allowedSigningAlgorithm:
        type: array
        items:
          type: string
          enum:
          - "RS256"
          - "RS384"
          - "RS512"
          - "ES256"
          - "ES384"
          - "ES512"
        description: >-
               Specifies an allow list of JWT signing algorithms that will be accepted by the OpenID Connect ID Token Validator.
      clockSkewGracePeriod:
        type: string
        description: >-
               Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.

  token-claim-validation-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/token-claim-validation-response'
    required:
    - schemas
    - totalResults
  add-token-claim-validation-request:
    allOf:
    - type: object
      properties:
        validationName:
          type: string
          description: >-
              Name of the new Token Claim Validation
    - $ref: '#/definitions/token-claim-validation-properties'
    required:
    - validationName
  token-claim-validation-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Token Claim Validation
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/token-claim-validation-properties'
    required:
    - id
    - schemas
  token-claim-validation-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/token-claim-validation-response'
  token-claim-validation-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string-array"
          - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:boolean"
          - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string"
      claimName:
        type: string
        description: >-
               The name of the claim to be validated.
      allRequiredValue:
        type: array
        items:
          type: string
        description: >-
               The set of all values that the claim must have to be considered valid.
      anyRequiredValue:
        type: array
        items:
          type: string
        description: >-
               The set of values that the claim may have to be considered valid.
      description:
        type: string
        description: >-
               A description for this Token Claim Validation
      requiredValue:
        type: string
        enum:
        - "true"
        - "false"
        description: >-
               Specifies the boolean claim's required value.


