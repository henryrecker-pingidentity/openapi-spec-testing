swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /pass-through-authentication-handlers:
    get:
      summary: Returns a list of all Pass Through Authentication Handler objects
      operationId: list-pass-through-authentication-handlers
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
    post:
      summary: Add a new Pass Through Authentication Handler to the config
      operationId: add-pass-through-authentication-handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-pass-through-authentication-handler-request'
        description: Create a new Pass Through Authentication Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
  /pass-through-authentication-handlers/{pass-through-authentication-handler-name}:
    get:
      operationId: get-pass-through-authentication-handler
      summary: Returns a single Pass Through Authentication Handler
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Pass Through Authentication Handler
        in: path
        name: pass-through-authentication-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
    put:
      operationId: put-pass-through-authentication-handler
      summary: Update an existing Pass Through Authentication Handler by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Pass Through Authentication Handler
        in: path
        name: pass-through-authentication-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/pass-through-authentication-handler-properties'
        description: Attributes to replace in the Pass Through Authentication Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
    patch:
      operationId: patch-pass-through-authentication-handler
      summary: Update an existing Pass Through Authentication Handler by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Pass Through Authentication Handler
        in: path
        name: pass-through-authentication-handler-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Pass Through Authentication Handler
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/pass-through-authentication-handler-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler
    delete:
      summary: Delete a Pass Through Authentication Handler
      operationId: delete-pass-through-authentication-handler
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Pass Through Authentication Handler
        in: path
        name: pass-through-authentication-handler-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - pass-through-authentication-handler

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  pass-through-authentication-handler-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/pass-through-authentication-handler-response'
    required:
    - schemas
    - totalResults
  add-pass-through-authentication-handler-request:
    allOf:
    - type: object
      properties:
        handlerName:
          type: string
          description: >-
              Name of the new Pass Through Authentication Handler
    - $ref: '#/definitions/pass-through-authentication-handler-properties'
    required:
    - handlerName
  pass-through-authentication-handler-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Pass Through Authentication Handler
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/pass-through-authentication-handler-properties'
    required:
    - id
    - schemas
  pass-through-authentication-handler-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/pass-through-authentication-handler-response'
  pass-through-authentication-handler-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:ldap"
          - "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:third-party"
      server:
        type: array
        items:
          type: string
        description: >-
               Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
      serverAccessMode:
        type: string
        enum:
        - "round-robin"
        - "failover-on-unavailable"
        - "failover-on-any-failure"
        description: >-
               Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.
      usePasswordPolicyControl:
        type: boolean
        description: >-
               Indicates whether to include the password policy request control (as defined in draft-behera-ldap-password-policy-10) in bind requests sent to the external server.
      extensionClass:
        type: string
        description: >-
               The fully-qualified name of the Java class providing the logic for the Third Party Pass Through Authentication Handler.
      dnMap:
        type: array
        items:
          type: string
        description: >-
               Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.
      initialConnections:
        type: integer
        description: >-
               Specifies the initial number of connections to establish to each external server against which authentication may be attempted.
      description:
        type: string
        description: >-
               A description for this Pass Through Authentication Handler
      extensionArgument:
        type: array
        items:
          type: string
        description: >-
               The set of arguments used to customize the behavior for the Third Party Pass Through Authentication Handler. Each configuration property should be given in the form 'name=value'.
      useLocation:
        type: boolean
        description: >-
               Indicates whether to take server locations into account when prioritizing the servers to use for pass-through authentication attempts.
      searchFilterPattern:
        type: string
        description: >-
               A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.
      maximumAllowedLocalResponseTime:
        type: string
        description: >-
               The maximum length of time to wait for a response from an external server in the same location as this Directory Server before considering it unavailable.
      maximumAllowedNonlocalResponseTime:
        type: string
        description: >-
               The maximum length of time to wait for a response from an external server in a different location from this Directory Server before considering it unavailable.
      bindDNPattern:
        type: string
        description: >-
               A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.
      searchBaseDN:
        type: string
        description: >-
               The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
      maxConnections:
        type: integer
        description: >-
               Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.


