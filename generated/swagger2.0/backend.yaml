swagger: "2.0"
info:
  description: PingData Configuration API - OpenAPI 3.0
  title: PingData Configuration API
  version: "9.2.0.0"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
basePath: /config
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
produces:
- application/json
paths:
  /ResourceTypes:
    get:
      summary: List all sub-paths for the Configuration API
      operationId: get-resource-types
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/get-resource-types-response'
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - list-resource-types
  /backends:
    get:
      summary: Returns a list of all Backend objects
      operationId: list-backends
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
    post:
      summary: Add a new Backend to the config
      operationId: add-backend
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-backend-request'
        description: Create a new Backend in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
  /backends/{backend-name}:
    get:
      operationId: get-backend
      summary: Returns a single Backend
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
    put:
      operationId: put-backend
      summary: Update an existing Backend by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/backend-properties'
        description: Attributes to replace in the Backend
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
    patch:
      operationId: patch-backend
      summary: Update an existing Backend by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Backend
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/backend-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend
    delete:
      summary: Delete a Backend
      operationId: delete-backend
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - backend

  /backends/{backend-name}/local-db-composite-indexes:
    get:
      summary: Returns a list of all Local DB Composite Index objects
      operationId: list-local-db-composite-indexes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
    post:
      summary: Add a new Local DB Composite Index to the config
      operationId: add-local-db-composite-index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-local-db-composite-index-request'
        description: Create a new Local DB Composite Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
  /backends/{backend-name}/local-db-composite-indexes/{local-db-composite-index-name}:
    get:
      operationId: get-local-db-composite-index
      summary: Returns a single Local DB Composite Index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Local DB Composite Index
        in: path
        name: local-db-composite-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
    put:
      operationId: put-local-db-composite-index
      summary: Update an existing Local DB Composite Index by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Composite Index
        in: path
        name: local-db-composite-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/local-db-composite-index-properties'
        description: Attributes to replace in the Local DB Composite Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
    patch:
      operationId: patch-local-db-composite-index
      summary: Update an existing Local DB Composite Index by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Composite Index
        in: path
        name: local-db-composite-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Local DB Composite Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-composite-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index
    delete:
      summary: Delete a Local DB Composite Index
      operationId: delete-local-db-composite-index
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Composite Index
        in: path
        name: local-db-composite-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-composite-index

  /backends/{backend-name}/local-db-vlv-indexes:
    get:
      summary: Returns a list of all Local DB VLV Index objects
      operationId: list-local-db-vlv-indexes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
    post:
      summary: Add a new Local DB VLV Index to the config
      operationId: add-local-db-vlv-index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-local-db-vlv-index-request'
        description: Create a new Local DB VLV Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
  /backends/{backend-name}/local-db-vlv-indexes/{local-db-vlv-index-name}:
    get:
      operationId: get-local-db-vlv-index
      summary: Returns a single Local DB VLV Index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Local DB VLV Index
        in: path
        name: local-db-vlv-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
    put:
      operationId: put-local-db-vlv-index
      summary: Update an existing Local DB VLV Index by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB VLV Index
        in: path
        name: local-db-vlv-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/local-db-vlv-index-properties'
        description: Attributes to replace in the Local DB VLV Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
    patch:
      operationId: patch-local-db-vlv-index
      summary: Update an existing Local DB VLV Index by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB VLV Index
        in: path
        name: local-db-vlv-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Local DB VLV Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-vlv-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index
    delete:
      summary: Delete a Local DB VLV Index
      operationId: delete-local-db-vlv-index
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB VLV Index
        in: path
        name: local-db-vlv-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-vlv-index

  /backends/{backend-name}/local-db-indexes:
    get:
      summary: Returns a list of all Local DB Index objects
      operationId: list-local-db-indexes
      parameters:
      - $ref: '#/parameters/filter'
      - $ref: '#/parameters/sortBy'
      - $ref: '#/parameters/sortOrder'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/count'
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-list-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
    post:
      summary: Add a new Local DB Index to the config
      operationId: add-local-db-index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/add-local-db-index-request'
        description: Create a new Local DB Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
  /backends/{backend-name}/local-db-indexes/{local-db-index-name}:
    get:
      operationId: get-local-db-index
      summary: Returns a single Local DB Index
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - description: Name of the Local DB Index
        in: path
        name: local-db-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-response'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
    put:
      operationId: put-local-db-index
      summary: Update an existing Local DB Index by name, replacing any attributes specified in the request body
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Index
        in: path
        name: local-db-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/local-db-index-properties'
        description: Attributes to replace in the Local DB Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
    patch:
      operationId: patch-local-db-index
      summary: Update an existing Local DB Index by name, using a SCIM patch request
      parameters:
      - $ref: '#/parameters/attributes'
      - $ref: '#/parameters/excludeAttributes'
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Index
        in: path
        name: local-db-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      - name: body
        in: body
        schema:
          $ref: '#/definitions/patch-request'
        description: SCIM operations to apply to the Local DB Index
        required: true
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/local-db-index-response-with-messages'
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index
    delete:
      summary: Delete a Local DB Index
      operationId: delete-local-db-index
      parameters:
      - $ref: '#/parameters/applyChangeTo'
      - description: Name of the Local DB Index
        in: path
        name: local-db-index-name
        required: true
        type: string
      - description: Name of the Backend
        in: path
        name: backend-name
        required: true
        type: string
      responses:
        "200":
          description: Successful operation
        "204":
          description: The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation.
        "400":
          description: The request contents are incorrectly formatted or the request was made for an invalid API version.
        "401":
          description: The requester cannot be authenticated
        "403":
          description: The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object.
        "404":
          description: The requested path does not refer to an existing object or object relation.
        "409":
          description: The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object.
        "415":
          description: The request is such that the Accept header does not indicate that JSON is an acceptable format for a response.
        "500":
          description: The server encountered an unexpected error.
      tags:
      - local-db-index

parameters:
  filter:
    in: query
    name: filter
    description: "SCIM filter"
    required: false
    type: string
  sortBy:
    in: query
    name: sortBy
    description: "Specifies a property value by which to sort"
    required: false
    type: string
  sortOrder:
    in: query
    name: sortOrder
    description: "Specifies either ascending or descending alphabetical order"
    required: false
    type: string
    enum:
    - "ascending"
    - "descending"
  startIndex:
    in: query
    name: startIndex
    description: "1-based index of the first result to return"
    required: false
    type: number
  count:
    in: query
    name: count
    description: "Indicates the number of results per page"
    required: false
    type: number
  attributes:
    in: query
    name: attributes
    description: "Comma-separated list of attributes to include in the response"
    required: false
    type: string
  excludeAttributes:
    in: query
    name: excludeAttributes
    description: "Comma-separated list of attributes to exclude from the response"
    required: false
    type: string
  applyChangeTo:
    in: query
    name: applyChangeTo
    description: "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects"
    required: false
    type: string
    enum:
    - "singleServer"
    - "serverGroup"
definitions:
  get-resource-types-response:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          allOf:
          - type: object
            properties:
              schemas:
                type: array
                items:
                  type: string
                  enum:
                  - "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
              id:
                type: string
              name:
                type: string
              description:
                type: string
              endpoint:
                type: string
          - $ref: '#/definitions/meta'
  meta:
    type: object
    properties:
      meta:
        type: object
        properties:
          resourceType:
            type: string
          location:
            type: string
  messages:
    type: object
    properties:
      "urn:pingidentity:schemas:configuration:messages:2.0":
        type: object
        properties:
          notifications:
            type: array
            items:
              type: string
          requiredActions:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                type:
                  type: string
                synopsis:
                  type: string
              required:
              - type
              - synopsis
  patch-request:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/operation'
    required:
    - operations
  operation:
    type: object
    properties:
      op:
        type: string
        enum:
        - "add"
        - "remove"
        - "replace"
      path:
        type: string
      value:
        type: string
    required:
    - op
    - path
  backend-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/backend-response'
    required:
    - schemas
    - totalResults
  add-backend-request:
    allOf:
    - type: object
      properties:
        backendName:
          type: string
          description: >-
              Name of the new Backend
    - $ref: '#/definitions/backend-properties'
    required:
    - backendName
  backend-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Backend
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/backend-properties'
    required:
    - id
    - schemas
  backend-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/backend-response'
  backend-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:backend:schema"
          - "urn:pingidentity:schemas:configuration:2.0:backend:backup"
          - "urn:pingidentity:schemas:configuration:2.0:backend:encryption-settings"
          - "urn:pingidentity:schemas:configuration:2.0:backend:ldif"
          - "urn:pingidentity:schemas:configuration:2.0:backend:trust-store"
          - "urn:pingidentity:schemas:configuration:2.0:backend:custom"
          - "urn:pingidentity:schemas:configuration:2.0:backend:changelog"
          - "urn:pingidentity:schemas:configuration:2.0:backend:monitor"
          - "urn:pingidentity:schemas:configuration:2.0:backend:local-db"
          - "urn:pingidentity:schemas:configuration:2.0:backend:config-file-handler"
          - "urn:pingidentity:schemas:configuration:2.0:backend:task"
          - "urn:pingidentity:schemas:configuration:2.0:backend:alert"
          - "urn:pingidentity:schemas:configuration:2.0:backend:alarm"
          - "urn:pingidentity:schemas:configuration:2.0:backend:metrics"
      primeTimeLimit:
        type: string
        description: >-
               Specifies the maximum length of time that the backend prime should be allowed to run. A duration of zero seconds indicates that there should not be a time limit.
      dbDirectory:
        type: string
        description: >-
               Specifies the path to the filesystem directory that is used to hold the Berkeley DB Java Edition database files containing the data for this backend. The files for this backend are stored in a sub-directory named after the backend-id.
      processFiltersWithUndefinedAttributeTypes:
        type: boolean
        description: >-
               Determines whether the Directory Server should continue filter processing for LDAP search operations in this Local DB Backend that includes a search filter with an attribute that is not defined in the schema. This will only apply if check-schema is enabled in the global configuration.
      dn2idCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the dn2id database, which provides a mapping between normalized entry DNs and the corresponding entry IDs.
      setDegradedAlertForUntrustedIndex:
        type: boolean
        description: >-
               Determines whether the Directory Server enters a DEGRADED state when this Local DB Backend has an index whose contents cannot be trusted.
      primeAllIndexes:
        type: boolean
        description: >-
               Indicates whether to prime all indexes associated with this backend, or to only prime the specified set of indexes (as configured with the system-index-to-prime property for the system indexes, and the prime-index property in the attribute index definition for attribute indexes).
      dn2uriCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the dn2uri database, which provides a mapping between a normalized entry DN and a set of referral URLs contained in the associated smart referral entry.
      taskBackingFile:
        type: string
        description: >-
               Specifies the path to the backing file for storing information about the tasks configured in the server.
      changelogPurgeBatchSize:
        type: integer
        description: >-
               Specifies the number of changelog entries purged in a single database transaction.
      trustStoreType:
        type: string
        description: >-
               Specifies the format for the data in the key store file.
      id2childrenCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the id2children database, which provides a mapping between the entry ID of a particular entry and the entry IDs of all of its immediate children. This index may be used when performing searches with a single-level scope if the search filter cannot be resolved to a small enough candidate list. The size of this database directly depends on the number of entries that have children.
      jeProperty:
        type: array
        items:
          type: string
        description: >-
               Specifies the database and environment properties for the Berkeley DB Java Edition database for this changelog backend.
      indexExcludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute types are to be specifically excluded from the set of attribute indexes maintained on the changelog. This property is useful when the index-include-attribute property contains one of the special values "*" and "+".
      compactCommonParentDN:
        type: array
        items:
          type: string
        description: >-
               Provides a DN of an entry that may be the parent for a large number of entries in the backend. This may be used to help increase the space efficiency when encoding entries for storage.
      uncachedId2entryCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the uncached-id2entry database, which provides a way to store complete or partial encoded entries with a different (and presumably less memory-intensive) cache mode than records written to id2entry.
      taskRetentionTime:
        type: string
        description: >-
               Specifies the length of time that task entries should be retained after processing on the associated task has been completed.
      externalTxnDefaultBackendLockBehavior:
        type: string
        enum:
        - "do-not-acquire"
        - "acquire-after-retries"
        - "acquire-before-retries"
        - "acquire-before-initial-attempt"
        description: >-
               Specifies the default behavior that should be exhibited by external transactions (e.g., an LDAP transaction or an atomic multi-update operation) with regard to acquiring an exclusive lock in this backend.
      dbCleanerMinUtilization:
        type: integer
        description: >-
               Specifies the minimum percentage of "live" data that the database cleaner attempts to keep in database log files.
      dbUseThreadLocalHandles:
        type: boolean
        description: >-
               Indicates whether to use thread-local database handles to reduce contention in the backend.
      changelogEntryExcludeBaseDN:
        type: array
        items:
          type: string
        description: >-
               The base DNs for branches in the data for which no changelog records should be generated.
      dbLoggingLevel:
        type: string
        description: >-
               Specifies the log level that should be used by the database when it is writing information into the je.info file.
      dbTxnWriteNoSync:
        type: boolean
        description: >-
               Indicates whether the database should synchronously flush data as it is written to disk.
      importTempDirectory:
        type: string
        description: >-
               Specifies the location of the directory that is used to hold temporary information during the index post-processing phase of an LDIF import.
      setDegradedAlertWhenDisabled:
        type: boolean
        description: >-
               Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
      backendID:
        type: string
        description: >-
               Specifies a name to identify the associated backend.
      targetDatabaseSize:
        type: string
        description: >-
               The changelog database is allowed to grow up to this size on disk even if changes are older than the configured changelog-maximum-age.
      dbCheckpointerWakeupInterval:
        type: string
        description: >-
               Specifies the maximum length of time that should pass between checkpoints.
      enabled:
        type: boolean
        description: >-
               Indicates whether the backend is enabled in the server.
      dbBackgroundSyncInterval:
        type: string
        description: >-
               Specifies the interval to use when performing background synchronous writes in the database environment in order to smooth overall write performance and increase data durability. A value of "0 s" will disable background synchronous writes.
      changelogEntryExcludeFilter:
        type: array
        items:
          type: string
        description: >-
               A filter that indicates which changelog entries should be excluded from the changelog. Note that this filter is evaluated against the changelog entry itself and not against the entry that was the target of the change referenced by the changelog entry. This filter may target any attributes that appear in changelog entries with the exception of the changeNumber and entry-size-bytes attributes, since they will not be known at the time of the filter evaluation.
      writeLastmodAttributes:
        type: boolean
        description: >-
               Specifies whether values of creatorsName, createTimestamp, modifiersName and modifyTimestamp attributes will be written to changelog entries.
      trustStorePin:
        type: string
        description: >-
               Specifies the clear-text PIN needed to access the Trust Store Backend.
      compressEntries:
        type: boolean
        description: >-
               Indicates whether the backend should attempt to compress entries before storing them in the database.
      retentionPolicy:
        type: array
        items:
          type: string
        description: >-
               The retention policy to use for the Metrics Backend .
      metricsDir:
        type: string
        description: >-
               Specifies the path to the directory that contains metric definitions.
      backupDirectory:
        type: array
        items:
          type: string
        description: >-
               Specifies the path to a backup directory containing one or more backups for a particular backend.
      changelogWriteBatchSize:
        type: integer
        description: >-
               Specifies the number of changelog entries written in a single database transaction.
      ldifFile:
        type: string
        description: >-
               Specifies the path to the LDIF file containing the data for this backend.
      indexIncludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute types are to be specifically included in the set of attribute indexes maintained on the changelog. If this property does not have any values then no attribute types are indexed.
      primeThreadCount:
        type: integer
        description: >-
               Specifies the number of threads to use when priming. At present, this applies only to the preload and cursor-across-indexes prime methods.
      readOnlySchemaFile:
        type: array
        items:
          type: string
        description: >-
               Specifies the name of a file (which must exist in the config/schema directory) containing schema elements that should be considered read-only. Any schema definitions contained in read-only files cannot be altered by external clients.
      trustStorePinPassphraseProvider:
        type: string
        description: >-
               The passphrase provider to use to obtain the clear-text PIN needed to access the Trust Store Backend.
      systemIndexToPrimeInternalNodesOnly:
        type: array
        items:
          type: string
          enum:
          - "dn2id"
          - "id2entry"
          - "uncached-id2entry"
          - "id2children"
          - "id2subtree"
          - "dn2uri"
        description: >-
               Specifies the system index(es) for which internal database nodes only (i.e., the database keys but not values) should be primed when the backend is initialized.
      maxAlerts:
        type: integer
        description: >-
               Specifies the maximum number of alerts that should be retained. If more alerts than this configured maximum are generated within the alert retention time, then the oldest alerts will be purged to achieve this maximum.
      deadlockRetryLimit:
        type: integer
        description: >-
               Specifies the number of times that the server should retry an attempted operation in the backend if a deadlock results from two concurrent requests that interfere with each other in a conflicting manner.
      subtreeDeleteSizeLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that may be deleted from the backend when using the subtree delete control.
      id2childrenIndexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entry IDs to maintain for each entry in the id2children system index (which keeps track of the immediate children for an entry, to assist in otherwise unindexed searches with a single-level scope). A value of 0 means there is no limit, however this could have a big impact on database size on disk and on server performance.
      changelogEntryIncludeFilter:
        type: array
        items:
          type: string
        description: >-
               A filter that indicates which changelog entries should actually be stored in the changelog. Note that this filter is evaluated against the changelog entry itself and not against the entry that was the target of the change referenced by the changelog entry. This filter may target any attributes that appear in changelog entries with the exception of the changeNumber and entry-size-bytes attributes, since they will not be known at the time of the filter evaluation.
      backgroundPrime:
        type: boolean
        description: >-
               Indicates whether to attempt to perform the prime using a background thread if possible. If background priming is enabled, then the Directory Server may be allowed to accept client connections and process requests while the prime is in progress.
      mirroredSubtreeEntryUpdateTimeout:
        type: string
        description: >-
               Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait for an update operation (add, delete, modify and modify-dn) on an entry to be applied on all servers in the topology. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data.
      dbDirectoryPermissions:
        type: string
        description: >-
               Specifies the permissions that should be applied to the directory containing the backend database files and to directories and files created during backup of the backend.
      changelogDeletedEntryIncludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of attribute types that should be included in a changelog entry for DELETE operations.
      exportThreadCount:
        type: integer
        description: >-
               Specifies the number of threads to use for concurrently retrieving and encoding entries during an LDIF export.
      disabledAlertType:
        type: array
        items:
          type: string
          enum:
          - "access-control-change"
          - "access-control-disabled"
          - "access-control-enabled"
          - "access-control-parse-failure"
          - "access-log-criteria-matched"
          - "alarm-cleared"
          - "alarm-critical"
          - "alarm-major"
          - "alarm-minor"
          - "alarm-warning"
          - "backend-disabled"
          - "backend-initialization-failed"
          - "backup-failed"
          - "cannot-acquire-shared-backend-lock"
          - "cannot-copy-schema-files"
          - "cannot-decode-entry"
          - "cannot-find-recurring-task"
          - "cannot-register-backend"
          - "cannot-release-shared-backend-lock"
          - "cannot-rename-current-task-file"
          - "cannot-rename-new-task-file"
          - "cannot-restore-backup"
          - "cannot-schedule-recurring-task-iteration"
          - "cannot-write-configuration"
          - "cannot-write-new-schema-files"
          - "cannot-write-server-state-file"
          - "cannot-write-task-backing-file"
          - "config-change"
          - "console-logger-without-no-detach"
          - "crypto-manager-error"
          - "continuous-garbage-collection-detected"
          - "deadlock-detected"
          - "debug-logging-enabled"
          - "delegated-admin-configuration-errors"
          - "duplicate-alerts-suppressed"
          - "duplicate-error-alerts-suppressed"
          - "duplicate-fatal-alerts-suppressed"
          - "duplicate-info-alerts-suppressed"
          - "duplicate-warning-alerts-suppressed"
          - "embedded-postgresql-unavailable"
          - "entering-lockdown-mode"
          - "entry-references-removed-attribute-type"
          - "exec-task-launching-command"
          - "exploded-index-background-delete-cleanup-failed"
          - "exploded-index-background-delete-failed"
          - "external-config-file-edit-handled"
          - "external-config-file-edit-lost"
          - "external-server-initialization-failed"
          - "failed-to-apply-mirrored-configuration"
          - "file-retention-task-delete-failure"
          - "force-gc-complete"
          - "force-gc-starting"
          - "global-index-insufficient-disk-space-error"
          - "global-index-persistence-error"
          - "global-index-read-error"
          - "global-referential-integrity-update-failure"
          - "globally-unique-attribute-conflict"
          - "health-check-available-to-degraded"
          - "health-check-available-to-unavailable"
          - "health-check-degraded-to-available"
          - "health-check-degraded-to-unavailable"
          - "health-check-unavailable-to-available"
          - "health-check-unavailable-to-degraded"
          - "http-connection-handler-duplicate-context-path"
          - "http-connection-handler-duplicate-servlet-extension"
          - "index-corrupt"
          - "index-degraded"
          - "index-rebuild-completed"
          - "index-rebuild-in-progress"
          - "insecure-access-token-validator-enabled"
          - "invalid-privilege"
          - "je-background-sync-failed"
          - "je-cleaner-disabled"
          - "je-daemon-thread-exception"
          - "je-environment-not-closed-cleanly"
          - "je-recovery-required"
          - "jvm-misconfiguration"
          - "large-attribute-update-failure"
          - "lba-no-available-servers"
          - "ldap-connection-handler-cannot-listen"
          - "ldap-connection-handler-consecutive-failures"
          - "ldap-connection-handler-uncaught-error"
          - "ldif-backend-cannot-write"
          - "ldif-connection-handler-parse-error"
          - "ldif-connection-handler-io-error"
          - "leaving-lockdown-mode"
          - "log-file-rotation-listener-invoke-error"
          - "log-file-rotation-listener-processing-takes-too-long"
          - "logging-error"
          - "low-disk-space-error"
          - "low-disk-space-warning"
          - "mirrored-subtree-manager-forced-as-master-error"
          - "mirrored-subtree-manager-forced-as-master-warning"
          - "mirrored-subtree-manager-no-master-found"
          - "mirrored-subtree-server-not-in-topology"
          - "mirrored-subtree-manager-operation-error"
          - "mirrored-subtree-manager-failed-outbound-connection"
          - "mirrored-subtree-manager-connection-asymmetry"
          - "missing-schema-elements-referenced-by-backend"
          - "monitoring-endpoint-unable-to-connect"
          - "no-enabled-alert-handlers"
          - "offline-config-change-detected"
          - "out-of-disk-space-error"
          - "pdp-unavailable"
          - "pdp-trust-framework-version-deprecated"
          - "proxy-entry-balancing-operation-failure"
          - "proxy-entry-balancing-error-multiple-operations-succeeded"
          - "proxy-entry-rebalancing-admin-action-required"
          - "replication-backlogged"
          - "replication-metadata-decode-failure"
          - "replication-missing-changes"
          - "replication-monitor-data-unavailable"
          - "replication-plugin-message-serialization-failure"
          - "replication-server-changelog-failure"
          - "replication-server-listen-failure"
          - "replication-unresolved-conflict"
          - "replication-unsent-changes"
          - "replication-replay-failed"
          - "restart-required"
          - "schema-checking-disabled"
          - "scim-lookthrough-limit-exceeded"
          - "restricted-subtree-accessibility"
          - "server-shutting-down"
          - "server-starting"
          - "server-started"
          - "subtree-delete-interrupted"
          - "sync-resource-connection-error"
          - "sync-resource-operation-error"
          - "sync-pipe-initialization-error"
          - "sync-pipe-backlog-above-threshold"
          - "sync-pipe-backlog-below-threshold"
          - "system-nanotime-stopped"
          - "system-current-time-shifted"
          - "task-started"
          - "task-completed"
          - "task-failed"
          - "third-party-extension-exception"
          - "thread-exit-holding-lock"
          - "threshold-warning-entry"
          - "threshold-warning-exit"
          - "threshold-critical-entry"
          - "threshold-critical-exit"
          - "topology-registry-secret-key-deleted"
          - "uncaught-exception"
          - "unindexed-internal-search"
          - "unique-attribute-sync-conflict"
          - "unique-attribute-sync-error"
          - "uniqueness-control-post-commit-conflict"
          - "unlicensed-product"
          - "unrecognized-alert-type"
          - "user-defined-error"
          - "user-defined-fatal"
          - "user-defined-info"
          - "user-defined-warning"
          - "worker-thread-caught-error"
          - "work-queue-backlogged"
          - "work-queue-full"
          - "work-queue-no-threads-remaining"
          - "server-jvm-paused"
          - "sensitive-trace-data-logged-warning"
          - "replication-generation-id-mismatch"
          - "account-temporarily-locked-account-status-notification"
          - "account-permanently-locked-account-status-notification"
          - "account-unlocked-account-status-notification"
          - "account-idle-locked-account-status-notification"
          - "account-reset-locked-account-status-notification"
          - "account-disabled-account-status-notification"
          - "account-enabled-account-status-notification"
          - "account-not-yet-active-account-status-notification"
          - "account-expired-account-status-notification"
          - "password-expired-account-status-notification"
          - "password-expiring-account-status-notification"
          - "password-reset-account-status-notification"
          - "password-changed-account-status-notification"
          - "account-created-account-status-notification"
          - "account-updated-account-status-notification"
          - "bind-password-failed-validation-account-status-notification"
          - "must-change-password-account-status-notification"
          - "privilege-assigned"
          - "insecure-request-rejected"
          - "incremental-backups-deprecated"
          - "replace-certificate-succeeded"
          - "replace-certificate-failed"
        description: >-
               Specifies the names of the alert types that should not be added to the backend. This can be used to suppress high volume alerts that might trigger hitting the max-alerts limit sooner than desired. Disabled alert types will not be sent out over persistent searches on this backend.
      notificationManager:
        type: string
        description: >-
               Specifies a notification manager for changes resulting from operations processed through this Backend
      numRecentChanges:
        type: integer
        description: >-
               Specifies the number of recent LDAP entry changes per replica for which the backend keeps a record to allow replication to recover in the event that the server is abruptly terminated. Increasing this value can lead to an increased peak server modification rate as well as increased replication throughput.
      storageDir:
        type: string
        description: >-
               Specifies the path to the directory that will be used to store queued samples.
      changelogMaximumAge:
        type: string
        description: >-
               Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting target-database-size can allow additional changes to be maintained up to the configured size on disk.
      changelogIncludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute types will be included in a changelog entry for ADD and MODIFY operations.
      dbImportCachePercent:
        type: integer
        description: >-
               The percentage of JVM memory to allocate to the database cache during import operations.
      id2subtreeCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the id2subtree database, which provides a mapping between the entry ID of a particular entry and the entry IDs of all of its children to any depth. This index may be used when performing searches with a whole-subtree or subordinate-subtree scope if the search filter cannot be resolved to a small enough candidate list. The size of this database directly depends on the number of entries that have children.
      dbEvictorCriticalPercentage:
        type: integer
        description: >-
               Specifies the percentage over the configured maximum that the database cache is allowed to grow. It is recommended to set this value slightly above zero when the database is too large to fully cache in memory. In this case, a dedicated background evictor thread is used to perform evictions once the cache fills up reducing the possibility that server threads are blocked.
      showAllAttributes:
        type: boolean
        description: >-
               Indicates whether to treat all attributes in the schema entry as if they were user attributes regardless of their configuration.
      changelogEntryIncludeBaseDN:
        type: array
        items:
          type: string
        description: >-
               The base DNs for branches in the data for which to record changes in the changelog.
      sampleFlushInterval:
        type: string
        description: >-
               Period when samples are flushed to disk.
      systemIndexToPrime:
        type: array
        items:
          type: string
          enum:
          - "dn2id"
          - "id2entry"
          - "id2children"
          - "id2subtree"
          - "dn2uri"
        description: >-
               Specifies which system index(es) should be primed when the backend is initialized.
      changelogMaxBeforeAfterValues:
        type: integer
        description: >-
               This controls whether all attribute values for a modified attribute (even those values that have not changed) will be included in the changelog entry. If the number of attribute values does not exceed this limit, then all values for the modified attribute will be included in the changelog entry.
      changelogIncludeKeyAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies which attribute types will be included in a changelog entry on every change.
      maxAlarms:
        type: integer
        description: >-
               Specifies the maximum number of alarms that should be retained. If more alarms than this configured maximum are generated within the alarm retention time, then the oldest alarms will be purged to achieve this maximum. Only alarms at normal severity will be purged.
      reportExcludedChangelogAttributes:
        type: string
        enum:
        - "none"
        - "attribute-counts"
        - "attribute-names"
        description: >-
               Indicates whether changelog entries that have been altered by applying access controls should include additional information about any attributes that may have been removed.
      compositeIndexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that are allowed to match a given composite index key before that particular composite index key is no longer maintained.
      maximumFinalTaskLogMessagesToRetain:
        type: integer
        description: >-
               The maximum number of log messages to retain in each task entry from the end of the processing for that task. If too many messages are logged during task processing, then retaining only a limited number of messages from the beginning and/or end of task processing can reduce the amount of memory that the server consumes by caching information about currently-active and recently-completed tasks.
      singleWriterLockBehavior:
        type: string
        enum:
        - "never-acquire"
        - "acquire-on-retry"
        - "always-acquire"
        description: >-
               Specifies the condition under which to acquire a single-writer lock to ensure that the associated operation will be the only write in progress at the time the lock is held. The single-writer lock can help avoid problems that result from database lock conflicts that arise between two write operations being processed at the same time in the same backend. This will not have any effect on the read operations processed while the write is in progress.
      alarmRetentionTime:
        type: string
        description: >-
               Specifies the maximum length of time that information about raised alarms should be maintained before they will be purged.
      applyAccessControlsToChangelogEntryContents:
        type: boolean
        description: >-
               Indicates whether the contents of changelog entries should be subject to access control and sensitive attribute evaluation such that the contents of attributes like changes, deletedEntryAttrs, ds-changelog-entry-key-attr-values, ds-changelog-before-values, and ds-changelog-after-values may be altered based on attributes the user can see in the target entry.
      indexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained.
      dbCachePercent:
        type: integer
        description: >-
               Specifies the percentage of JVM memory to allocate to the changelog database cache.
      uncachedAttributeCriteria:
        type: string
        description: >-
               The criteria that will be used to identify attributes that should be written into the uncached-id2entry database rather than the id2entry database. This will only be used for entries in which the associated uncached-entry-criteria does not indicate that the entire entry should be uncached.
      notificationSenderAddress:
        type: string
        description: >-
               Specifies the email address to use as the sender address (that is, the "From:" address) for notification mail messages generated when a task completes execution.
      returnUnavailableForUntrustedIndex:
        type: boolean
        description: >-
               Determines whether the Directory Server returns UNAVAILABLE for any LDAP search operation in this Local DB Backend that would use an index whose contents cannot be trusted.
      dbNumCleanerThreads:
        type: integer
        description: >-
               Specifies the number of threads that the backend should maintain to keep the database log files at or near the desired utilization. A value of zero indicates that the number of cleaner threads should be automatically configured based on the number of available CPUs.
      backupFilePermissions:
        type: string
        description: >-
               Specifies the permissions that should be applied to files and directories created by a backup of the backend.
      dbLogFileMax:
        type: string
        description: >-
               Specifies the maximum size for a database log file.
      maximumInitialTaskLogMessagesToRetain:
        type: integer
        description: >-
               The maximum number of log messages to retain in each task entry from the beginning of the processing for that task. If too many messages are logged during task processing, then retaining only a limited number of messages from the beginning and/or end of task processing can reduce the amount of memory that the server consumes by caching information about currently-active and recently-completed tasks.
      description:
        type: string
        description: >-
               A description for this Backend
      changelogWriteQueueCapacity:
        type: integer
        description: >-
               Specifies the capacity of the changelog write queue in number of changes.
      trustStoreFile:
        type: string
        description: >-
               Specifies the path to the file that stores the trust information.
      alertRetentionTime:
        type: string
        description: >-
               Specifies the maximum length of time that information about generated alerts should be maintained before they will be purged.
      schemaEntryDN:
        type: array
        items:
          type: string
        description: >-
               Defines the base DNs of the subtrees in which the schema information is published in addition to the value included in the base-dn property.
      changelogDeletedEntryExcludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of attribute types that should be excluded from a changelog entry for DELETE operations.
      softDeleteEntryIncludedOperation:
        type: array
        items:
          type: string
          enum:
          - "modify"
          - "delete"
        description: >-
               Specifies which operations performed on soft-deleted entries will appear in the changelog.
      baseDN:
        type: array
        items:
          type: string
        description: >-
               Specifies the base DN(s) for the data that the backend handles.
      isPrivateBackend:
        type: boolean
        description: >-
               Indicates whether the backend should be considered a private backend, which indicates that it is used for storing operational data rather than user-defined information.
      mirroredSubtreeSearchTimeout:
        type: string
        description: >-
               Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait for a search operation to complete. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data. Search requests that take longer than this timeout will be canceled and considered failures.
      id2entryCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the id2entry database, which provides a mapping between entry IDs and entry contents. Consider configuring uncached entries or uncached attributes in lieu of changing from the "cache-keys-and-values" default value.
      insignificantConfigArchiveAttribute:
        type: array
        items:
          type: string
        description: >-
               The name or OID of an attribute type that is considered insignificant for the purpose of maintaining the configuration archive.
      writabilityMode:
        type: string
        enum:
        - "enabled"
        - "disabled"
        - "internal-only"
        description: >-
               Specifies the behavior that the backend should use when processing write operations.
      hashEntries:
        type: boolean
        description: >-
               Indicates whether to calculate and store a message digest of the entry contents along with the entry data, in order to provide a means of verifying the integrity of the entry data.
      id2subtreeIndexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entry IDs to maintain for each entry in the id2subtree system index (which keeps track of all descendants below an entry, to assist in otherwise unindexed searches with a whole-subtree or subordinate subtree scope). A value of 0 means there is no limit, however this could have a big impact on database size on disk and on server performance.
      trustStorePinFile:
        type: string
        description: >-
               Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the Trust Store Backend.
      offlineProcessDatabaseOpenTimeout:
        type: string
        description: >-
               Specifies a timeout duration which will be used for opening the database environment by an offline process, such as export-ldif.
      includeVirtualAttributes:
        type: array
        items:
          type: string
          enum:
          - "add-attributes"
          - "deleted-entry-attributes"
          - "before-and-after-values"
          - "key-attribute-values"
        description: >-
               Specifies the changelog entry elements (if any) in which virtual attributes should be included.
      returnUnavailableWhenDisabled:
        type: boolean
        description: >-
               Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
      primeMethod:
        type: array
        items:
          type: string
          enum:
          - "none"
          - "preload"
          - "preload-internal-nodes-only"
          - "cursor-across-indexes"
          - "prime-to-filesystem-cache"
          - "prime-to-filesystem-cache-non-sequential"
        description: >-
               Specifies the method that should be used to prime caches with data for this backend.
      changelogExcludeAttribute:
        type: array
        items:
          type: string
        description: >-
               Specifies a set of attribute types that should be excluded in a changelog entry for ADD and MODIFY operations.
      defaultCacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used for any database for which the cache mode is not explicitly specified. This includes the id2entry database, which stores encoded entries, and all attribute indexes.
      mirroredSubtreePeerPollingInterval:
        type: string
        description: >-
               Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait before polling the peer servers in the topology to determine if there are any changes in the topology. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data.
      uncachedEntryCriteria:
        type: string
        description: >-
               The criteria that will be used to identify entries that should be written into the uncached-id2entry database rather than the id2entry database.
      importThreadCount:
        type: integer
        description: >-
               Specifies the number of threads to use for concurrent processing during an LDIF import.
      useReversibleForm:
        type: boolean
        description: >-
               Specifies whether the changelog should provide enough information to be able to revert the changes if desired.

  local-db-composite-index-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/local-db-composite-index-response'
    required:
    - schemas
    - totalResults
  add-local-db-composite-index-request:
    allOf:
    - type: object
      properties:
        indexName:
          type: string
          description: >-
              Name of the new Local DB Composite Index
    - $ref: '#/definitions/local-db-composite-index-properties'
    required:
    - indexName
  local-db-composite-index-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Local DB Composite Index
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/local-db-composite-index-properties'
    required:
    - id
    - schemas
  local-db-composite-index-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/local-db-composite-index-response'
  local-db-composite-index-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:local-db-composite-index"
      primeInternalNodesOnly:
        type: boolean
        description: >-
               Indicates whether to only prime the internal nodes of the index database, rather than priming both internal and leaf nodes.
      cacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        description: >-
               The behavior that the server should exhibit when storing information from this index in the database cache.
      description:
        type: string
        description: >-
               A description for this Local DB Composite Index
      indexFilterPattern:
        type: string
        description: >-
               A filter pattern that identifies which entries to include in the index.
      indexEntryLimit:
        type: integer
        description: >-
               The maximum number of entries that any single index key will be allowed to match before the server stops maintaining the ID set for that index key.
      primeIndex:
        type: boolean
        description: >-
               Indicates whether the server should load the contents of this index into memory when the backend is being opened.
      indexBaseDNPattern:
        type: string
        description: >-
               An optional base DN pattern that identifies portions of the DIT in which entries to index may exist.

  local-db-vlv-index-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/local-db-vlv-index-response'
    required:
    - schemas
    - totalResults
  add-local-db-vlv-index-request:
    allOf:
    - type: object
      properties:
        indexName:
          type: string
          description: >-
              Name of the new Local DB VLV Index
    - $ref: '#/definitions/local-db-vlv-index-properties'
    required:
    - indexName
  local-db-vlv-index-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Local DB VLV Index
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/local-db-vlv-index-properties'
    required:
    - id
    - schemas
  local-db-vlv-index-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/local-db-vlv-index-response'
  local-db-vlv-index-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:local-db-vlv-index"
      filter:
        type: string
        description: >-
               Specifies the LDAP filter used in the query that is being indexed.
      maxBlockSize:
        type: integer
        description: >-
               Specifies the number of entry IDs to store in a single sorted set before it must be split.
      scope:
        type: string
        enum:
        - "base-object"
        - "single-level"
        - "whole-subtree"
        - "subordinate-subtree"
        description: >-
               Specifies the LDAP scope of the query that is being indexed.
      sortOrder:
        type: string
        description: >-
               Specifies the names of the attributes that are used to sort the entries for the query being indexed.
      name:
        type: string
        description: >-
               Specifies a unique name for this VLV index.
      cacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the database for this index.
      baseDN:
        type: string
        description: >-
               Specifies the base DN used in the search query that is being indexed.

  local-db-index-list-response:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      totalResults:
        type: number
      Resources:
        type: array
        items:
          $ref: '#/definitions/local-db-index-response'
    required:
    - schemas
    - totalResults
  add-local-db-index-request:
    allOf:
    - type: object
      properties:
        indexName:
          type: string
          description: >-
              Name of the new Local DB Index
    - $ref: '#/definitions/local-db-index-properties'
    required:
    - indexName
  local-db-index-response:
    allOf:
    - type: object
      properties:
        id:
          type: string
          description: >-
              Name of the Local DB Index
    - $ref: '#/definitions/meta'
    - $ref: '#/definitions/local-db-index-properties'
    required:
    - id
    - schemas
  local-db-index-response-with-messages:
    allOf:
    - $ref: '#/definitions/messages'
    - $ref: '#/definitions/local-db-index-response'
  local-db-index-properties:
    type: object
    properties:
      schemas:
        type: array
        minItems: 1
        maxItems: 1
        items:
          type: string
          enum:
          - "urn:pingidentity:schemas:configuration:2.0:local-db-index"
      maintainMatchCountForKeysExceedingEntryLimit:
        type: boolean
        description: >-
               Indicates whether to continue to maintain a count of the number of matching entries for an index key even after that count exceeds the index entry limit.
      indexType:
        type: array
        items:
          type: string
          enum:
          - "equality"
          - "ordering"
          - "presence"
          - "substring"
          - "approximate"
        description: >-
               Specifies the type(s) of indexing that should be performed for the associated attribute.
      equalityIndexFilter:
        type: array
        items:
          type: string
        description: >-
               A search filter that may be used in conjunction with an equality component for the associated attribute type. If an equality index filter is defined, then an additional equality index will be maintained for the associated attribute, but only for entries which match the provided filter. Further, the index will be used only for searches containing an equality component with the associated attribute type ANDed with this filter.
      primeInternalNodesOnly:
        type: boolean
        description: >-
               If this option is enabled and this index's backend is configured to prime indexes using the preload method, then only the internal database nodes (i.e., the database keys but not values) should be primed when the backend is initialized.
      substringLength:
        type: integer
        description: >-
               The length of substrings in a substring index.
      cacheMode:
        type: string
        enum:
        - "cache-keys-and-values"
        - "cache-keys-only"
        - "no-caching"
        - "keep-hot"
        - "default"
        - "make-cold"
        - "evict-leaf-immediately"
        - "evict-bin-immediately"
        description: >-
               Specifies the cache mode that should be used when accessing the records in the database for this index. This controls how much database cache memory can be consumed by this index.
      attribute:
        type: string
        description: >-
               Specifies the name of the attribute for which the index is to be maintained.
      indexEntryLimit:
        type: integer
        description: >-
               Specifies the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained.
      substringIndexEntryLimit:
        type: integer
        description: >-
               Specifies, for substring indexes, the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained. Setting a large limit can dramatically increase the database size on disk and have a big impact on server performance if the indexed attribute is modified frequently. When a very large limit is required, creating a dedicated composite index with an index-filter-pattern of (attr=*?*) will give the best balance between search and update performance.
      primeIndex:
        type: boolean
        description: >-
               If this option is enabled and this index's backend is configured to prime indexes, then this index will be loaded at startup.
      maintainEqualityIndexWithoutFilter:
        type: boolean
        description: >-
               Indicates whether to maintain a separate equality index for the associated attribute without any filter, in addition to maintaining an index for each equality index filter that is defined. If this is false, then the attribute will not be indexed for equality by itself but only in conjunction with the defined equality index filters.


