{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/password-storage-schemes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Password Storage Scheme objects",
                    "type": "password-storage-scheme-list-response",
                    "nickname": "list-password-storage-schemes",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Password Storage Scheme to the config",
                    "nickname": "add-password-storage-scheme",
                    "type": "password-storage-scheme-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Password Storage Scheme to add",
                            "name": "add-password-storage-scheme-request",
                            "type": "add-password-storage-scheme-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/password-storage-schemes/{password-storage-scheme-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Password Storage Scheme",
                    "type": "password-storage-scheme-response",
                    "nickname": "get-password-storage-scheme",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "password-storage-scheme-name",
                          "description": "Name of the Password Storage Scheme",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Password Storage Scheme by name, replacing any attributes specified in the request body",
                    "type": "password-storage-scheme-response",
                    "nickname": "put-password-storage-scheme",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "password-storage-scheme-name",
                          "description": "Name of the Password Storage Scheme",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Password Storage Scheme attributes to update",
                            "name": "password-storage-scheme-properties",
                            "type": "password-storage-scheme-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Password Storage Scheme by name, using a SCIM patch request",
                    "type": "password-storage-scheme-response",
                    "nickname": "patch-password-storage-scheme",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "password-storage-scheme-name",
                          "description": "Name of the Password Storage Scheme",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Password Storage Scheme",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Password Storage Scheme",
                    "nickname": "delete-password-storage-scheme",
                    "parameters": [
                        {
                          "name": "password-storage-scheme-name",
                          "description": "Name of the Password Storage Scheme",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "password-storage-scheme-list-response": {
            "id": "password-storage-scheme-list-response",
            "description": "Password Storage Scheme list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "password-storage-scheme-response"
                    }
                }
            }
        },
        "add-password-storage-scheme-request": {
            "id": "add-password-storage-scheme-request",
            "description": "A Password Storage Scheme resource request",
            "required": [
                "schemeName"
            ],
            "properties": {
                "schemeName": {
                    "type": "string",
                    "description": "Name of the new Password Storage Scheme"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2d"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2i"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2id"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5"
                        ]
                    }
                },
                "keyVaultURI": {
                    "description": "The URI that identifies the Azure Key Vault from which the secret is to be retrieved.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Password Storage Scheme.",
                    "type": "string"
                }
                ,
                "derivedKeyLengthBytes": {
                    "description": "The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.",
                    "type": "integer"
                }
                ,
                "azureAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Azure service.",
                    "type": "string"
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "The identifier for the encryption settings definition that should be used to derive the encryption key to use when encrypting new passwords. If this is not provided, the server's preferred encryption settings definition will be used.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Password Storage Scheme",
                    "type": "string"
                }
                ,
                "vaultExternalServer": {
                    "description": "An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.",
                    "type": "string"
                }
                ,
                "saltLengthBytes": {
                    "description": "Specifies the number of bytes to use for the generated salt.",
                    "type": "integer"
                }
                ,
                "maxPasswordLength": {
                    "description": "Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Password Storage Scheme is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Password Storage Scheme. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "iterationCount": {
                    "description": "The number of rounds of cryptographic processing required in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "awsExternalServer": {
                    "description": "The external server with information to use when interacting with the AWS Secrets Manager service.",
                    "type": "string"
                }
                ,
                "scryptCpuMemoryCostFactorExponent": {
                    "description": "Specifies the exponent that should be used for the CPU/memory cost factor. The cost factor must be a power of two, so the value of this property represents the power to which two is raised. The CPU/memory cost factor specifies the number of iterations required for encoding the password, and also affects the amount of memory required during processing. A higher cost factor requires more processing and more memory to generate a password, which makes attacks against the password more expensive.",
                    "type": "integer"
                }
                ,
                "numDigestRounds": {
                    "description": "Specifies the number of digest rounds to use for the SHA-2 encodings. This will not be used for the legacy or MD5-based encodings.",
                    "type": "integer"
                }
                ,
                "memoryUsageKb": {
                    "description": "The number of kilobytes of memory that must be used in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "defaultField": {
                    "description": "The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.",
                    "type": "string"
                }
                ,
                "digestAlgorithm": {
                    "description": "Specifies the digest algorithm that will be used when encoding passwords.",
                    "type": "string"
                    , "enum": [
                        "sha-1"
                        ,
                        "sha-256"
                        ,
                        "sha-384"
                        ,
                        "sha-512"
                    ]
                }
                ,
                "conjurExternalServer": {
                    "description": "An external server definition with information needed to connect and authenticate to the Conjur instance containing user passwords.",
                    "type": "string"
                }
                ,
                "passwordEncodingMechanism": {
                    "description": "Specifies the mechanism that should be used to encode clear-text passwords for use with this scheme.",
                    "type": "string"
                    , "enum": [
                        "crypt"
                        ,
                        "md5"
                        ,
                        "sha-2-256"
                        ,
                        "sha-2-512"
                    ]
                }
                ,
                "parallelismFactor": {
                    "description": "The number of concurrent threads that will be used in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "scryptParallelizationParameter": {
                    "description": "Specifies the number of times that scrypt has to perform the entire encoding process to produce the final result.",
                    "type": "integer"
                }
                ,
                "bcryptCostFactor": {
                    "description": "Specifies the cost factor to use when encoding passwords with Bcrypt. A higher cost factor requires more processing to generate a password, which makes attacks against the password more expensive.",
                    "type": "integer"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the Azure service.",
                    "type": "string"
                }
                ,
                "scryptBlockSize": {
                    "description": "Specifies the block size for the digest that will be used in the course of encoding passwords. Increasing the block size while keeping the CPU/memory cost factor constant will increase the amount of memory required to encode a password, but it also increases the ratio of sequential memory access to random memory access (and sequential memory access is generally faster than random memory access).",
                    "type": "integer"
                }
            }
        },
        "password-storage-scheme-response": {
            "id": "password-storage-scheme-response",
            "description": "A Password Storage Scheme resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2d"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2i"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2id"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Password Storage Scheme"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "keyVaultURI": {
                    "description": "The URI that identifies the Azure Key Vault from which the secret is to be retrieved.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Password Storage Scheme.",
                    "type": "string"
                }
                ,
                "derivedKeyLengthBytes": {
                    "description": "The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.",
                    "type": "integer"
                }
                ,
                "azureAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Azure service.",
                    "type": "string"
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "The identifier for the encryption settings definition that should be used to derive the encryption key to use when encrypting new passwords. If this is not provided, the server's preferred encryption settings definition will be used.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Password Storage Scheme",
                    "type": "string"
                }
                ,
                "vaultExternalServer": {
                    "description": "An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.",
                    "type": "string"
                }
                ,
                "saltLengthBytes": {
                    "description": "Specifies the number of bytes to use for the generated salt.",
                    "type": "integer"
                }
                ,
                "maxPasswordLength": {
                    "description": "Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Password Storage Scheme is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Password Storage Scheme. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "iterationCount": {
                    "description": "The number of rounds of cryptographic processing required in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "awsExternalServer": {
                    "description": "The external server with information to use when interacting with the AWS Secrets Manager service.",
                    "type": "string"
                }
                ,
                "scryptCpuMemoryCostFactorExponent": {
                    "description": "Specifies the exponent that should be used for the CPU/memory cost factor. The cost factor must be a power of two, so the value of this property represents the power to which two is raised. The CPU/memory cost factor specifies the number of iterations required for encoding the password, and also affects the amount of memory required during processing. A higher cost factor requires more processing and more memory to generate a password, which makes attacks against the password more expensive.",
                    "type": "integer"
                }
                ,
                "numDigestRounds": {
                    "description": "Specifies the number of digest rounds to use for the SHA-2 encodings. This will not be used for the legacy or MD5-based encodings.",
                    "type": "integer"
                }
                ,
                "memoryUsageKb": {
                    "description": "The number of kilobytes of memory that must be used in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "defaultField": {
                    "description": "The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.",
                    "type": "string"
                }
                ,
                "digestAlgorithm": {
                    "description": "Specifies the digest algorithm that will be used when encoding passwords.",
                    "type": "string"
                    , "enum": [
                        "sha-1"
                        ,
                        "sha-256"
                        ,
                        "sha-384"
                        ,
                        "sha-512"
                    ]
                }
                ,
                "conjurExternalServer": {
                    "description": "An external server definition with information needed to connect and authenticate to the Conjur instance containing user passwords.",
                    "type": "string"
                }
                ,
                "passwordEncodingMechanism": {
                    "description": "Specifies the mechanism that should be used to encode clear-text passwords for use with this scheme.",
                    "type": "string"
                    , "enum": [
                        "crypt"
                        ,
                        "md5"
                        ,
                        "sha-2-256"
                        ,
                        "sha-2-512"
                    ]
                }
                ,
                "parallelismFactor": {
                    "description": "The number of concurrent threads that will be used in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "scryptParallelizationParameter": {
                    "description": "Specifies the number of times that scrypt has to perform the entire encoding process to produce the final result.",
                    "type": "integer"
                }
                ,
                "bcryptCostFactor": {
                    "description": "Specifies the cost factor to use when encoding passwords with Bcrypt. A higher cost factor requires more processing to generate a password, which makes attacks against the password more expensive.",
                    "type": "integer"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the Azure service.",
                    "type": "string"
                }
                ,
                "scryptBlockSize": {
                    "description": "Specifies the block size for the digest that will be used in the course of encoding passwords. Increasing the block size while keeping the CPU/memory cost factor constant will increase the amount of memory required to encode a password, but it also increases the ratio of sequential memory access to random memory access (and sequential memory access is generally faster than random memory access).",
                    "type": "integer"
                }
            }
        },
        "password-storage-scheme-properties": {
            "id": "password-storage-scheme-properties",
            "description": "Password Storage Scheme properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2d"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2i"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2id"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5"
                        ]
                    }
                },
                "keyVaultURI": {
                    "description": "The URI that identifies the Azure Key Vault from which the secret is to be retrieved.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Password Storage Scheme.",
                    "type": "string"
                }
                ,
                "derivedKeyLengthBytes": {
                    "description": "The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.",
                    "type": "integer"
                }
                ,
                "azureAuthenticationMethod": {
                    "description": "The mechanism used to authenticate to the Azure service.",
                    "type": "string"
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "The identifier for the encryption settings definition that should be used to derive the encryption key to use when encrypting new passwords. If this is not provided, the server's preferred encryption settings definition will be used.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Password Storage Scheme",
                    "type": "string"
                }
                ,
                "vaultExternalServer": {
                    "description": "An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.",
                    "type": "string"
                }
                ,
                "saltLengthBytes": {
                    "description": "Specifies the number of bytes to use for the generated salt.",
                    "type": "integer"
                }
                ,
                "maxPasswordLength": {
                    "description": "Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Password Storage Scheme is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Password Storage Scheme. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "iterationCount": {
                    "description": "The number of rounds of cryptographic processing required in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "awsExternalServer": {
                    "description": "The external server with information to use when interacting with the AWS Secrets Manager service.",
                    "type": "string"
                }
                ,
                "scryptCpuMemoryCostFactorExponent": {
                    "description": "Specifies the exponent that should be used for the CPU/memory cost factor. The cost factor must be a power of two, so the value of this property represents the power to which two is raised. The CPU/memory cost factor specifies the number of iterations required for encoding the password, and also affects the amount of memory required during processing. A higher cost factor requires more processing and more memory to generate a password, which makes attacks against the password more expensive.",
                    "type": "integer"
                }
                ,
                "numDigestRounds": {
                    "description": "Specifies the number of digest rounds to use for the SHA-2 encodings. This will not be used for the legacy or MD5-based encodings.",
                    "type": "integer"
                }
                ,
                "memoryUsageKb": {
                    "description": "The number of kilobytes of memory that must be used in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "defaultField": {
                    "description": "The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.",
                    "type": "string"
                }
                ,
                "digestAlgorithm": {
                    "description": "Specifies the digest algorithm that will be used when encoding passwords.",
                    "type": "string"
                    , "enum": [
                        "sha-1"
                        ,
                        "sha-256"
                        ,
                        "sha-384"
                        ,
                        "sha-512"
                    ]
                }
                ,
                "conjurExternalServer": {
                    "description": "An external server definition with information needed to connect and authenticate to the Conjur instance containing user passwords.",
                    "type": "string"
                }
                ,
                "passwordEncodingMechanism": {
                    "description": "Specifies the mechanism that should be used to encode clear-text passwords for use with this scheme.",
                    "type": "string"
                    , "enum": [
                        "crypt"
                        ,
                        "md5"
                        ,
                        "sha-2-256"
                        ,
                        "sha-2-512"
                    ]
                }
                ,
                "parallelismFactor": {
                    "description": "The number of concurrent threads that will be used in the course of encoding each password.",
                    "type": "integer"
                }
                ,
                "scryptParallelizationParameter": {
                    "description": "Specifies the number of times that scrypt has to perform the entire encoding process to produce the final result.",
                    "type": "integer"
                }
                ,
                "bcryptCostFactor": {
                    "description": "Specifies the cost factor to use when encoding passwords with Bcrypt. A higher cost factor requires more processing to generate a password, which makes attacks against the password more expensive.",
                    "type": "integer"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the Azure service.",
                    "type": "string"
                }
                ,
                "scryptBlockSize": {
                    "description": "Specifies the block size for the digest that will be used in the course of encoding passwords. Increasing the block size while keeping the CPU/memory cost factor constant will increase the amount of memory required to encode a password, but it also increases the ratio of sequential memory access to random memory access (and sequential memory access is generally faster than random memory access).",
                    "type": "integer"
                }
            }
        }
    }
}
