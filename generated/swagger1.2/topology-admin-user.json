{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/topology-admin-users",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Topology Admin User objects",
                    "type": "topology-admin-user-list-response",
                    "nickname": "list-topology-admin-users",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Topology Admin User to the config",
                    "nickname": "add-topology-admin-user",
                    "type": "topology-admin-user-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Topology Admin User to add",
                            "name": "add-topology-admin-user-request",
                            "type": "add-topology-admin-user-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/topology-admin-users/{topology-admin-user-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Topology Admin User",
                    "type": "topology-admin-user-response",
                    "nickname": "get-topology-admin-user",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "topology-admin-user-name",
                          "description": "Name of the Topology Admin User",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Topology Admin User by name, replacing any attributes specified in the request body",
                    "type": "topology-admin-user-response",
                    "nickname": "put-topology-admin-user",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "topology-admin-user-name",
                          "description": "Name of the Topology Admin User",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Topology Admin User attributes to update",
                            "name": "topology-admin-user-properties",
                            "type": "topology-admin-user-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Topology Admin User by name, using a SCIM patch request",
                    "type": "topology-admin-user-response",
                    "nickname": "patch-topology-admin-user",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "topology-admin-user-name",
                          "description": "Name of the Topology Admin User",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Topology Admin User",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Topology Admin User",
                    "nickname": "delete-topology-admin-user",
                    "parameters": [
                        {
                          "name": "topology-admin-user-name",
                          "description": "Name of the Topology Admin User",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "topology-admin-user-list-response": {
            "id": "topology-admin-user-list-response",
            "description": "Topology Admin User list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "topology-admin-user-response"
                    }
                }
            }
        },
        "add-topology-admin-user-request": {
            "id": "add-topology-admin-user-request",
            "description": "A Topology Admin User resource request",
            "required": [
                "userName"
            ],
            "properties": {
                "userName": {
                    "type": "string",
                    "description": "Name of the new Topology Admin User"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:topology-admin-user"
                        ]
                    }
                },
                "lastName": {
                    "description": "Specifies the user's last name. This is stored in the sn LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountActivationTime": {
                    "description": "Specifies the time, in generalized time format (e.g., '20160101070000Z'), that the root user account should become active. If an activation time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, until the activation time has arrived. This is stored in the ds-pwp-account-activation-time LDAP attribute.",
                    "type": "string"
                }
                ,
                "requireSecureConnections": {
                    "description": "Indicates whether this User must be required to communicate with the server over a secure connection. When set to \"true\", the User will only be allowed to communicate with the server over a secure connection (i.e., using TLS or the StartTLS extended operation).",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this User.",
                    "type": "string"
                }
                ,
                "isProxyableByURL": {
                    "description": "Specifies LDAP URLs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "privilege": {
                    "description": "Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "audit-data-security"
                            ,
                            "-audit-data-security"
                            ,
                            "bypass-acl"
                            ,
                            "-bypass-acl"
                            ,
                            "bypass-read-acl"
                            ,
                            "-bypass-read-acl"
                            ,
                            "modify-acl"
                            ,
                            "-modify-acl"
                            ,
                            "config-read"
                            ,
                            "-config-read"
                            ,
                            "config-write"
                            ,
                            "-config-write"
                            ,
                            "jmx-read"
                            ,
                            "-jmx-read"
                            ,
                            "jmx-write"
                            ,
                            "-jmx-write"
                            ,
                            "jmx-notify"
                            ,
                            "-jmx-notify"
                            ,
                            "ldif-import"
                            ,
                            "-ldif-import"
                            ,
                            "ldif-export"
                            ,
                            "-ldif-export"
                            ,
                            "backend-backup"
                            ,
                            "-backend-backup"
                            ,
                            "backend-restore"
                            ,
                            "-backend-restore"
                            ,
                            "server-shutdown"
                            ,
                            "-server-shutdown"
                            ,
                            "server-restart"
                            ,
                            "-server-restart"
                            ,
                            "proxied-auth"
                            ,
                            "-proxied-auth"
                            ,
                            "disconnect-client"
                            ,
                            "-disconnect-client"
                            ,
                            "password-reset"
                            ,
                            "-password-reset"
                            ,
                            "update-schema"
                            ,
                            "-update-schema"
                            ,
                            "privilege-change"
                            ,
                            "-privilege-change"
                            ,
                            "unindexed-search"
                            ,
                            "-unindexed-search"
                            ,
                            "unindexed-search-with-control"
                            ,
                            "-unindexed-search-with-control"
                            ,
                            "bypass-pw-policy"
                            ,
                            "-bypass-pw-policy"
                            ,
                            "lockdown-mode"
                            ,
                            "-lockdown-mode"
                            ,
                            "stream-values"
                            ,
                            "-stream-values"
                            ,
                            "third-party-task"
                            ,
                            "-third-party-task"
                            ,
                            "use-admin-session"
                            ,
                            "-use-admin-session"
                            ,
                            "soft-delete-read"
                            ,
                            "-soft-delete-read"
                            ,
                            "metrics-read"
                            ,
                            "-metrics-read"
                            ,
                            "remote-log-read"
                            ,
                            "-remote-log-read"
                            ,
                            "manage-topology"
                            ,
                            "-manage-topology"
                            ,
                            "permit-get-password-policy-state-issues"
                            ,
                            "-permit-get-password-policy-state-issues"
                            ,
                            "permit-proxied-mschapv2-details"
                            ,
                            "-permit-proxied-mschapv2-details"
                            ,
                            "permit-externally-processed-authentication"
                            ,
                            "-permit-externally-processed-authentication"
                            ,
                            "permit-export-reversible-passwords"
                            ,
                            "-permit-export-reversible-passwords"
                            ,
                            "permit-forwarding-client-connection-policy"
                            ,
                            "-permit-forwarding-client-connection-policy"
                            ,
                            "exec-task"
                            ,
                            "-exec-task"
                            ,
                            "collect-support-data"
                            ,
                            "-collect-support-data"
                            ,
                            "file-servlet-access"
                            ,
                            "-file-servlet-access"
                            ,
                            "permit-replace-certificate-request"
                            ,
                            "-permit-replace-certificate-request"
                        ]
                    }
                }
                ,
                "userID": {
                    "description": "Specifies the user's user ID. This is stored in the uid LDAP attribute.",
                    "type": "string"
                }
                ,
                "mayProxyAsGroup": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries that are in the group with the specified DN.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "workTelephoneNumber": {
                    "description": "Specifies the user's work telephone number. This is stored in the telephoneNumber LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "password": {
                    "description": "Specifies the user's password. This is stored in the userPassword LDAP attribute. To set a pre-hashed value, the account making the change must have the bypass-pw-policy privilege.",
                    "type": "string"
                }
                ,
                "emailAddress": {
                    "description": "Specifies the user's email address. This is stored in the mail LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "alternateBindDN": {
                    "description": "Specifies one or more alternate DNs that can be used to bind to the server as this User.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "homeTelephoneNumber": {
                    "description": "Specifies the user's home telephone number. This is stored in the homePhone LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowedAuthenticationType": {
                    "description": "Indicates that User should only be allowed to authenticate in certain ways. Allowed values include \"simple\" (to indicate that the user should be allowed to bind using simple authentication) or \"sasl {mech}\" (to indicate that the user should be allowed to bind using the specified SASL mechanism, like \"sasl PLAIN\"). The list of available SASL mechanisms can be retrieved by running \"dsconfig --advanced list-sasl-mechanism-handlers\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "disabled": {
                    "description": "Specifies whether the root user account should be disabled. A disabled account is not permitted to authenticate, nor can it be used as an authorization identity. This is stored in the ds-pwp-account-disabled LDAP attribute.",
                    "type": "boolean"
                }
                ,
                "requireSecureAuthentication": {
                    "description": "Indicates whether this User must authenticate in a secure manner. When set to \"true\", the User will only be allowed to authenticate over a secure connection or using a mechanism that does not expose user credentials (e.g., the CRAM-MD5, DIGEST-MD5, and GSSAPI SASL mechanisms).",
                    "type": "boolean"
                }
                ,
                "isProxyable": {
                    "description": "This can be used to indicate whether the User can be used as an alternate authorization identity (using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity).",
                    "type": "string"
                    , "enum": [
                        "allowed"
                        ,
                        "prohibited"
                        ,
                        "required"
                    ]
                }
                ,
                "isProxyableByGroup": {
                    "description": "Specifies the DNs of groups whose members can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "preferredOTPDeliveryMechanism": {
                    "description": "Overrides the default settings for the mechanisms (e.g., email or SMS) that are used to deliver one time passwords to Users.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "pagerTelephoneNumber": {
                    "description": "Specifies the user's pager telephone number. This is stored in the pager LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "lookThroughEntryLimit": {
                    "description": "Specifies the maximum number of candidate entries that the server may examine in the course of processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-lookthrough-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "passwordPolicy": {
                    "description": "Specifies the password policy for the user. This is stored in the ds-pwp-password-policy-dn LDAP attribute.",
                    "type": "string"
                }
                ,
                "mayProxyAsURL": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries that are matched by the specified LDAP URL.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowedAuthenticationIPAddress": {
                    "description": "An IPv4 or IPv6 address mask that controls the set of IP addresses from which this User can authenticate to the server. For instance a value of 127.0.0.1 (or ::1 in IPv6) would restricted access only to localhost connections, whereas 10.6.1.* would restrict access to servers on the 10.6.1.* subnet.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "searchResultEntryLimit": {
                    "description": "Specifies the maximum number of entries that the server may return to the user in response to any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-size-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "mayProxyAsDN": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries with the specified DNs.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "idleTimeLimitSeconds": {
                    "description": "Specifies the maximum length of time (in seconds) that a connection authenticated as this user may remain established without issuing any requests. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-idle-time-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "firstName": {
                    "description": "Specifies the user's first name. This is stored in the givenName LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "isProxyableByDN": {
                    "description": "Specifies the DNs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "inheritDefaultRootPrivileges": {
                    "description": "Indicates whether this User should be automatically granted the set of privileges defined in the default-root-privilege-name property of the Root DN configuration object.",
                    "type": "boolean"
                }
                ,
                "accountExpirationTime": {
                    "description": "Specifies the time, in generalized time format (e.g., '20240101070000Z'), that the root user account should expire. If an expiration time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, after this time has passed. This is stored in the ds-pwp-account-expiration-time LDAP attribute.",
                    "type": "string"
                }
                ,
                "timeLimitSeconds": {
                    "description": "Specifies the maximum length of time (in seconds) that the server may spend processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-time-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "mobileTelephoneNumber": {
                    "description": "Specifies the user's mobile telephone number. This is stored in the mobile LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "topology-admin-user-response": {
            "id": "topology-admin-user-response",
            "description": "A Topology Admin User resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:topology-admin-user"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Topology Admin User"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "lastName": {
                    "description": "Specifies the user's last name. This is stored in the sn LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountActivationTime": {
                    "description": "Specifies the time, in generalized time format (e.g., '20160101070000Z'), that the root user account should become active. If an activation time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, until the activation time has arrived. This is stored in the ds-pwp-account-activation-time LDAP attribute.",
                    "type": "string"
                }
                ,
                "requireSecureConnections": {
                    "description": "Indicates whether this User must be required to communicate with the server over a secure connection. When set to \"true\", the User will only be allowed to communicate with the server over a secure connection (i.e., using TLS or the StartTLS extended operation).",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this User.",
                    "type": "string"
                }
                ,
                "isProxyableByURL": {
                    "description": "Specifies LDAP URLs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "privilege": {
                    "description": "Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "audit-data-security"
                            ,
                            "-audit-data-security"
                            ,
                            "bypass-acl"
                            ,
                            "-bypass-acl"
                            ,
                            "bypass-read-acl"
                            ,
                            "-bypass-read-acl"
                            ,
                            "modify-acl"
                            ,
                            "-modify-acl"
                            ,
                            "config-read"
                            ,
                            "-config-read"
                            ,
                            "config-write"
                            ,
                            "-config-write"
                            ,
                            "jmx-read"
                            ,
                            "-jmx-read"
                            ,
                            "jmx-write"
                            ,
                            "-jmx-write"
                            ,
                            "jmx-notify"
                            ,
                            "-jmx-notify"
                            ,
                            "ldif-import"
                            ,
                            "-ldif-import"
                            ,
                            "ldif-export"
                            ,
                            "-ldif-export"
                            ,
                            "backend-backup"
                            ,
                            "-backend-backup"
                            ,
                            "backend-restore"
                            ,
                            "-backend-restore"
                            ,
                            "server-shutdown"
                            ,
                            "-server-shutdown"
                            ,
                            "server-restart"
                            ,
                            "-server-restart"
                            ,
                            "proxied-auth"
                            ,
                            "-proxied-auth"
                            ,
                            "disconnect-client"
                            ,
                            "-disconnect-client"
                            ,
                            "password-reset"
                            ,
                            "-password-reset"
                            ,
                            "update-schema"
                            ,
                            "-update-schema"
                            ,
                            "privilege-change"
                            ,
                            "-privilege-change"
                            ,
                            "unindexed-search"
                            ,
                            "-unindexed-search"
                            ,
                            "unindexed-search-with-control"
                            ,
                            "-unindexed-search-with-control"
                            ,
                            "bypass-pw-policy"
                            ,
                            "-bypass-pw-policy"
                            ,
                            "lockdown-mode"
                            ,
                            "-lockdown-mode"
                            ,
                            "stream-values"
                            ,
                            "-stream-values"
                            ,
                            "third-party-task"
                            ,
                            "-third-party-task"
                            ,
                            "use-admin-session"
                            ,
                            "-use-admin-session"
                            ,
                            "soft-delete-read"
                            ,
                            "-soft-delete-read"
                            ,
                            "metrics-read"
                            ,
                            "-metrics-read"
                            ,
                            "remote-log-read"
                            ,
                            "-remote-log-read"
                            ,
                            "manage-topology"
                            ,
                            "-manage-topology"
                            ,
                            "permit-get-password-policy-state-issues"
                            ,
                            "-permit-get-password-policy-state-issues"
                            ,
                            "permit-proxied-mschapv2-details"
                            ,
                            "-permit-proxied-mschapv2-details"
                            ,
                            "permit-externally-processed-authentication"
                            ,
                            "-permit-externally-processed-authentication"
                            ,
                            "permit-export-reversible-passwords"
                            ,
                            "-permit-export-reversible-passwords"
                            ,
                            "permit-forwarding-client-connection-policy"
                            ,
                            "-permit-forwarding-client-connection-policy"
                            ,
                            "exec-task"
                            ,
                            "-exec-task"
                            ,
                            "collect-support-data"
                            ,
                            "-collect-support-data"
                            ,
                            "file-servlet-access"
                            ,
                            "-file-servlet-access"
                            ,
                            "permit-replace-certificate-request"
                            ,
                            "-permit-replace-certificate-request"
                        ]
                    }
                }
                ,
                "userID": {
                    "description": "Specifies the user's user ID. This is stored in the uid LDAP attribute.",
                    "type": "string"
                }
                ,
                "mayProxyAsGroup": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries that are in the group with the specified DN.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "workTelephoneNumber": {
                    "description": "Specifies the user's work telephone number. This is stored in the telephoneNumber LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "password": {
                    "description": "Specifies the user's password. This is stored in the userPassword LDAP attribute. To set a pre-hashed value, the account making the change must have the bypass-pw-policy privilege.",
                    "type": "string"
                }
                ,
                "emailAddress": {
                    "description": "Specifies the user's email address. This is stored in the mail LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "alternateBindDN": {
                    "description": "Specifies one or more alternate DNs that can be used to bind to the server as this User.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "homeTelephoneNumber": {
                    "description": "Specifies the user's home telephone number. This is stored in the homePhone LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowedAuthenticationType": {
                    "description": "Indicates that User should only be allowed to authenticate in certain ways. Allowed values include \"simple\" (to indicate that the user should be allowed to bind using simple authentication) or \"sasl {mech}\" (to indicate that the user should be allowed to bind using the specified SASL mechanism, like \"sasl PLAIN\"). The list of available SASL mechanisms can be retrieved by running \"dsconfig --advanced list-sasl-mechanism-handlers\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "disabled": {
                    "description": "Specifies whether the root user account should be disabled. A disabled account is not permitted to authenticate, nor can it be used as an authorization identity. This is stored in the ds-pwp-account-disabled LDAP attribute.",
                    "type": "boolean"
                }
                ,
                "requireSecureAuthentication": {
                    "description": "Indicates whether this User must authenticate in a secure manner. When set to \"true\", the User will only be allowed to authenticate over a secure connection or using a mechanism that does not expose user credentials (e.g., the CRAM-MD5, DIGEST-MD5, and GSSAPI SASL mechanisms).",
                    "type": "boolean"
                }
                ,
                "isProxyable": {
                    "description": "This can be used to indicate whether the User can be used as an alternate authorization identity (using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity).",
                    "type": "string"
                    , "enum": [
                        "allowed"
                        ,
                        "prohibited"
                        ,
                        "required"
                    ]
                }
                ,
                "isProxyableByGroup": {
                    "description": "Specifies the DNs of groups whose members can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "preferredOTPDeliveryMechanism": {
                    "description": "Overrides the default settings for the mechanisms (e.g., email or SMS) that are used to deliver one time passwords to Users.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "pagerTelephoneNumber": {
                    "description": "Specifies the user's pager telephone number. This is stored in the pager LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "lookThroughEntryLimit": {
                    "description": "Specifies the maximum number of candidate entries that the server may examine in the course of processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-lookthrough-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "passwordPolicy": {
                    "description": "Specifies the password policy for the user. This is stored in the ds-pwp-password-policy-dn LDAP attribute.",
                    "type": "string"
                }
                ,
                "mayProxyAsURL": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries that are matched by the specified LDAP URL.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowedAuthenticationIPAddress": {
                    "description": "An IPv4 or IPv6 address mask that controls the set of IP addresses from which this User can authenticate to the server. For instance a value of 127.0.0.1 (or ::1 in IPv6) would restricted access only to localhost connections, whereas 10.6.1.* would restrict access to servers on the 10.6.1.* subnet.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "searchResultEntryLimit": {
                    "description": "Specifies the maximum number of entries that the server may return to the user in response to any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-size-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "mayProxyAsDN": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries with the specified DNs.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "idleTimeLimitSeconds": {
                    "description": "Specifies the maximum length of time (in seconds) that a connection authenticated as this user may remain established without issuing any requests. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-idle-time-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "firstName": {
                    "description": "Specifies the user's first name. This is stored in the givenName LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "isProxyableByDN": {
                    "description": "Specifies the DNs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "inheritDefaultRootPrivileges": {
                    "description": "Indicates whether this User should be automatically granted the set of privileges defined in the default-root-privilege-name property of the Root DN configuration object.",
                    "type": "boolean"
                }
                ,
                "accountExpirationTime": {
                    "description": "Specifies the time, in generalized time format (e.g., '20240101070000Z'), that the root user account should expire. If an expiration time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, after this time has passed. This is stored in the ds-pwp-account-expiration-time LDAP attribute.",
                    "type": "string"
                }
                ,
                "timeLimitSeconds": {
                    "description": "Specifies the maximum length of time (in seconds) that the server may spend processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-time-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "mobileTelephoneNumber": {
                    "description": "Specifies the user's mobile telephone number. This is stored in the mobile LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "topology-admin-user-properties": {
            "id": "topology-admin-user-properties",
            "description": "Topology Admin User properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:topology-admin-user"
                        ]
                    }
                },
                "lastName": {
                    "description": "Specifies the user's last name. This is stored in the sn LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountActivationTime": {
                    "description": "Specifies the time, in generalized time format (e.g., '20160101070000Z'), that the root user account should become active. If an activation time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, until the activation time has arrived. This is stored in the ds-pwp-account-activation-time LDAP attribute.",
                    "type": "string"
                }
                ,
                "requireSecureConnections": {
                    "description": "Indicates whether this User must be required to communicate with the server over a secure connection. When set to \"true\", the User will only be allowed to communicate with the server over a secure connection (i.e., using TLS or the StartTLS extended operation).",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this User.",
                    "type": "string"
                }
                ,
                "isProxyableByURL": {
                    "description": "Specifies LDAP URLs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "privilege": {
                    "description": "Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "audit-data-security"
                            ,
                            "-audit-data-security"
                            ,
                            "bypass-acl"
                            ,
                            "-bypass-acl"
                            ,
                            "bypass-read-acl"
                            ,
                            "-bypass-read-acl"
                            ,
                            "modify-acl"
                            ,
                            "-modify-acl"
                            ,
                            "config-read"
                            ,
                            "-config-read"
                            ,
                            "config-write"
                            ,
                            "-config-write"
                            ,
                            "jmx-read"
                            ,
                            "-jmx-read"
                            ,
                            "jmx-write"
                            ,
                            "-jmx-write"
                            ,
                            "jmx-notify"
                            ,
                            "-jmx-notify"
                            ,
                            "ldif-import"
                            ,
                            "-ldif-import"
                            ,
                            "ldif-export"
                            ,
                            "-ldif-export"
                            ,
                            "backend-backup"
                            ,
                            "-backend-backup"
                            ,
                            "backend-restore"
                            ,
                            "-backend-restore"
                            ,
                            "server-shutdown"
                            ,
                            "-server-shutdown"
                            ,
                            "server-restart"
                            ,
                            "-server-restart"
                            ,
                            "proxied-auth"
                            ,
                            "-proxied-auth"
                            ,
                            "disconnect-client"
                            ,
                            "-disconnect-client"
                            ,
                            "password-reset"
                            ,
                            "-password-reset"
                            ,
                            "update-schema"
                            ,
                            "-update-schema"
                            ,
                            "privilege-change"
                            ,
                            "-privilege-change"
                            ,
                            "unindexed-search"
                            ,
                            "-unindexed-search"
                            ,
                            "unindexed-search-with-control"
                            ,
                            "-unindexed-search-with-control"
                            ,
                            "bypass-pw-policy"
                            ,
                            "-bypass-pw-policy"
                            ,
                            "lockdown-mode"
                            ,
                            "-lockdown-mode"
                            ,
                            "stream-values"
                            ,
                            "-stream-values"
                            ,
                            "third-party-task"
                            ,
                            "-third-party-task"
                            ,
                            "use-admin-session"
                            ,
                            "-use-admin-session"
                            ,
                            "soft-delete-read"
                            ,
                            "-soft-delete-read"
                            ,
                            "metrics-read"
                            ,
                            "-metrics-read"
                            ,
                            "remote-log-read"
                            ,
                            "-remote-log-read"
                            ,
                            "manage-topology"
                            ,
                            "-manage-topology"
                            ,
                            "permit-get-password-policy-state-issues"
                            ,
                            "-permit-get-password-policy-state-issues"
                            ,
                            "permit-proxied-mschapv2-details"
                            ,
                            "-permit-proxied-mschapv2-details"
                            ,
                            "permit-externally-processed-authentication"
                            ,
                            "-permit-externally-processed-authentication"
                            ,
                            "permit-export-reversible-passwords"
                            ,
                            "-permit-export-reversible-passwords"
                            ,
                            "permit-forwarding-client-connection-policy"
                            ,
                            "-permit-forwarding-client-connection-policy"
                            ,
                            "exec-task"
                            ,
                            "-exec-task"
                            ,
                            "collect-support-data"
                            ,
                            "-collect-support-data"
                            ,
                            "file-servlet-access"
                            ,
                            "-file-servlet-access"
                            ,
                            "permit-replace-certificate-request"
                            ,
                            "-permit-replace-certificate-request"
                        ]
                    }
                }
                ,
                "userID": {
                    "description": "Specifies the user's user ID. This is stored in the uid LDAP attribute.",
                    "type": "string"
                }
                ,
                "mayProxyAsGroup": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries that are in the group with the specified DN.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "workTelephoneNumber": {
                    "description": "Specifies the user's work telephone number. This is stored in the telephoneNumber LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "password": {
                    "description": "Specifies the user's password. This is stored in the userPassword LDAP attribute. To set a pre-hashed value, the account making the change must have the bypass-pw-policy privilege.",
                    "type": "string"
                }
                ,
                "emailAddress": {
                    "description": "Specifies the user's email address. This is stored in the mail LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "alternateBindDN": {
                    "description": "Specifies one or more alternate DNs that can be used to bind to the server as this User.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "homeTelephoneNumber": {
                    "description": "Specifies the user's home telephone number. This is stored in the homePhone LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowedAuthenticationType": {
                    "description": "Indicates that User should only be allowed to authenticate in certain ways. Allowed values include \"simple\" (to indicate that the user should be allowed to bind using simple authentication) or \"sasl {mech}\" (to indicate that the user should be allowed to bind using the specified SASL mechanism, like \"sasl PLAIN\"). The list of available SASL mechanisms can be retrieved by running \"dsconfig --advanced list-sasl-mechanism-handlers\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "disabled": {
                    "description": "Specifies whether the root user account should be disabled. A disabled account is not permitted to authenticate, nor can it be used as an authorization identity. This is stored in the ds-pwp-account-disabled LDAP attribute.",
                    "type": "boolean"
                }
                ,
                "requireSecureAuthentication": {
                    "description": "Indicates whether this User must authenticate in a secure manner. When set to \"true\", the User will only be allowed to authenticate over a secure connection or using a mechanism that does not expose user credentials (e.g., the CRAM-MD5, DIGEST-MD5, and GSSAPI SASL mechanisms).",
                    "type": "boolean"
                }
                ,
                "isProxyable": {
                    "description": "This can be used to indicate whether the User can be used as an alternate authorization identity (using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity).",
                    "type": "string"
                    , "enum": [
                        "allowed"
                        ,
                        "prohibited"
                        ,
                        "required"
                    ]
                }
                ,
                "isProxyableByGroup": {
                    "description": "Specifies the DNs of groups whose members can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "preferredOTPDeliveryMechanism": {
                    "description": "Overrides the default settings for the mechanisms (e.g., email or SMS) that are used to deliver one time passwords to Users.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "pagerTelephoneNumber": {
                    "description": "Specifies the user's pager telephone number. This is stored in the pager LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "lookThroughEntryLimit": {
                    "description": "Specifies the maximum number of candidate entries that the server may examine in the course of processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-lookthrough-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "passwordPolicy": {
                    "description": "Specifies the password policy for the user. This is stored in the ds-pwp-password-policy-dn LDAP attribute.",
                    "type": "string"
                }
                ,
                "mayProxyAsURL": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries that are matched by the specified LDAP URL.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "allowedAuthenticationIPAddress": {
                    "description": "An IPv4 or IPv6 address mask that controls the set of IP addresses from which this User can authenticate to the server. For instance a value of 127.0.0.1 (or ::1 in IPv6) would restricted access only to localhost connections, whereas 10.6.1.* would restrict access to servers on the 10.6.1.* subnet.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "searchResultEntryLimit": {
                    "description": "Specifies the maximum number of entries that the server may return to the user in response to any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-size-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "mayProxyAsDN": {
                    "description": "This restricts the set of accounts that this User can proxy as to entries with the specified DNs.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "idleTimeLimitSeconds": {
                    "description": "Specifies the maximum length of time (in seconds) that a connection authenticated as this user may remain established without issuing any requests. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-idle-time-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "firstName": {
                    "description": "Specifies the user's first name. This is stored in the givenName LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "isProxyableByDN": {
                    "description": "Specifies the DNs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to \"allowed\" or \"required\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "inheritDefaultRootPrivileges": {
                    "description": "Indicates whether this User should be automatically granted the set of privileges defined in the default-root-privilege-name property of the Root DN configuration object.",
                    "type": "boolean"
                }
                ,
                "accountExpirationTime": {
                    "description": "Specifies the time, in generalized time format (e.g., '20240101070000Z'), that the root user account should expire. If an expiration time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, after this time has passed. This is stored in the ds-pwp-account-expiration-time LDAP attribute.",
                    "type": "string"
                }
                ,
                "timeLimitSeconds": {
                    "description": "Specifies the maximum length of time (in seconds) that the server may spend processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-time-limit LDAP attribute.",
                    "type": "integer"
                }
                ,
                "mobileTelephoneNumber": {
                    "description": "Specifies the user's mobile telephone number. This is stored in the mobile LDAP attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
