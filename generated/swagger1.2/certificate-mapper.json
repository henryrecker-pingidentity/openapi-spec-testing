{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/certificate-mappers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Certificate Mapper objects",
                    "type": "certificate-mapper-list-response",
                    "nickname": "list-certificate-mappers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Certificate Mapper to the config",
                    "nickname": "add-certificate-mapper",
                    "type": "certificate-mapper-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Certificate Mapper to add",
                            "name": "add-certificate-mapper-request",
                            "type": "add-certificate-mapper-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/certificate-mappers/{certificate-mapper-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Certificate Mapper",
                    "type": "certificate-mapper-response",
                    "nickname": "get-certificate-mapper",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "certificate-mapper-name",
                          "description": "Name of the Certificate Mapper",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Certificate Mapper by name, replacing any attributes specified in the request body",
                    "type": "certificate-mapper-response",
                    "nickname": "put-certificate-mapper",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "certificate-mapper-name",
                          "description": "Name of the Certificate Mapper",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Certificate Mapper attributes to update",
                            "name": "certificate-mapper-properties",
                            "type": "certificate-mapper-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Certificate Mapper by name, using a SCIM patch request",
                    "type": "certificate-mapper-response",
                    "nickname": "patch-certificate-mapper",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "certificate-mapper-name",
                          "description": "Name of the Certificate Mapper",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Certificate Mapper",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Certificate Mapper",
                    "nickname": "delete-certificate-mapper",
                    "parameters": [
                        {
                          "name": "certificate-mapper-name",
                          "description": "Name of the Certificate Mapper",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "certificate-mapper-list-response": {
            "id": "certificate-mapper-list-response",
            "description": "Certificate Mapper list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "certificate-mapper-response"
                    }
                }
            }
        },
        "add-certificate-mapper-request": {
            "id": "add-certificate-mapper-request",
            "description": "A Certificate Mapper resource request",
            "required": [
                "mapperName"
            ],
            "properties": {
                "mapperName": {
                    "type": "string",
                    "description": "Name of the new Certificate Mapper"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-equals-dn"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-dn-to-user-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-attribute-to-user-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:fingerprint"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:third-party"
                        ]
                    }
                },
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Certificate Mapper.",
                    "type": "string"
                }
                ,
                "fingerprintAttribute": {
                    "description": "Specifies the attribute in which to look for the fingerprint.",
                    "type": "string"
                }
                ,
                "fingerprintAlgorithm": {
                    "description": "Specifies the name of the digest algorithm to compute the fingerprint of client certificates.",
                    "type": "string"
                    , "enum": [
                        "md5"
                        ,
                        "sha1"
                        ,
                        "sha256"
                    ]
                }
                ,
                "description": {
                    "description": "A description for this Certificate Mapper",
                    "type": "string"
                }
                ,
                "subjectAttributeMapping": {
                    "description": "Specifies a mapping between certificate attributes and user attributes.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Certificate Mapper.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Certificate Mapper. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Certificate Mapper is enabled.",
                    "type": "boolean"
                }
                ,
                "subjectAttribute": {
                    "description": "Specifies the name or OID of the attribute whose value should exactly match the certificate subject DN.",
                    "type": "string"
                }
                ,
                "userBaseDN": {
                    "description": "Specifies the base DNs that should be used when performing searches to map the client certificate to a user entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Certificate Mapper. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "certificate-mapper-response": {
            "id": "certificate-mapper-response",
            "description": "A Certificate Mapper resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-equals-dn"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-dn-to-user-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-attribute-to-user-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:fingerprint"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:third-party"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Certificate Mapper"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Certificate Mapper.",
                    "type": "string"
                }
                ,
                "fingerprintAttribute": {
                    "description": "Specifies the attribute in which to look for the fingerprint.",
                    "type": "string"
                }
                ,
                "fingerprintAlgorithm": {
                    "description": "Specifies the name of the digest algorithm to compute the fingerprint of client certificates.",
                    "type": "string"
                    , "enum": [
                        "md5"
                        ,
                        "sha1"
                        ,
                        "sha256"
                    ]
                }
                ,
                "description": {
                    "description": "A description for this Certificate Mapper",
                    "type": "string"
                }
                ,
                "subjectAttributeMapping": {
                    "description": "Specifies a mapping between certificate attributes and user attributes.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Certificate Mapper.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Certificate Mapper. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Certificate Mapper is enabled.",
                    "type": "boolean"
                }
                ,
                "subjectAttribute": {
                    "description": "Specifies the name or OID of the attribute whose value should exactly match the certificate subject DN.",
                    "type": "string"
                }
                ,
                "userBaseDN": {
                    "description": "Specifies the base DNs that should be used when performing searches to map the client certificate to a user entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Certificate Mapper. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "certificate-mapper-properties": {
            "id": "certificate-mapper-properties",
            "description": "Certificate Mapper properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-equals-dn"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-dn-to-user-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-attribute-to-user-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:fingerprint"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:third-party"
                        ]
                    }
                },
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Certificate Mapper.",
                    "type": "string"
                }
                ,
                "fingerprintAttribute": {
                    "description": "Specifies the attribute in which to look for the fingerprint.",
                    "type": "string"
                }
                ,
                "fingerprintAlgorithm": {
                    "description": "Specifies the name of the digest algorithm to compute the fingerprint of client certificates.",
                    "type": "string"
                    , "enum": [
                        "md5"
                        ,
                        "sha1"
                        ,
                        "sha256"
                    ]
                }
                ,
                "description": {
                    "description": "A description for this Certificate Mapper",
                    "type": "string"
                }
                ,
                "subjectAttributeMapping": {
                    "description": "Specifies a mapping between certificate attributes and user attributes.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Certificate Mapper.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Certificate Mapper. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Certificate Mapper is enabled.",
                    "type": "boolean"
                }
                ,
                "subjectAttribute": {
                    "description": "Specifies the name or OID of the attribute whose value should exactly match the certificate subject DN.",
                    "type": "string"
                }
                ,
                "userBaseDN": {
                    "description": "Specifies the base DNs that should be used when performing searches to map the client certificate to a user entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Certificate Mapper. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
