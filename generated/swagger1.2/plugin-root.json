{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/plugin-root",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns the Plugin Root",
                    "type": "plugin-root-response",
                    "nickname": "get-plugin-root",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update the Plugin Root, replacing any attributes specified in the request body",
                    "type": "plugin-root-response",
                    "nickname": "put-plugin-root",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Plugin Root attributes to update",
                            "name": "plugin-root-properties",
                            "type": "plugin-root-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Plugin Root by name, using a SCIM patch request",
                    "type": "plugin-root-response",
                    "nickname": "patch-plugin-root",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Plugin Root",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/plugin-root/plugins",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Plugin objects",
                    "type": "plugin-list-response",
                    "nickname": "list-plugins",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Plugin to the config",
                    "nickname": "add-plugin",
                    "type": "plugin-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Plugin to add",
                            "name": "add-plugin-request",
                            "type": "add-plugin-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/plugin-root/plugins/{plugin-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Plugin",
                    "type": "plugin-response",
                    "nickname": "get-plugin",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "plugin-name",
                          "description": "Name of the Plugin",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Plugin by name, replacing any attributes specified in the request body",
                    "type": "plugin-response",
                    "nickname": "put-plugin",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "plugin-name",
                          "description": "Name of the Plugin",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Plugin attributes to update",
                            "name": "plugin-properties",
                            "type": "plugin-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Plugin by name, using a SCIM patch request",
                    "type": "plugin-response",
                    "nickname": "patch-plugin",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "plugin-name",
                          "description": "Name of the Plugin",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Plugin",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Plugin",
                    "nickname": "delete-plugin",
                    "parameters": [
                        {
                          "name": "plugin-name",
                          "description": "Name of the Plugin",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/plugin-root/plugins/{plugin-name}/custom-logged-stats",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Custom Logged Stats objects",
                    "type": "custom-logged-stats-list-response",
                    "nickname": "list-custom-logged-stats",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "plugin-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Custom Logged Stats to the config",
                    "nickname": "add-custom-logged-stats",
                    "type": "custom-logged-stats-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "plugin-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Custom Logged Stats to add",
                            "name": "add-custom-logged-stats-request",
                            "type": "add-custom-logged-stats-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/plugin-root/plugins/{plugin-name}/custom-logged-stats/{custom-logged-stats-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Custom Logged Stats",
                    "type": "custom-logged-stats-response",
                    "nickname": "get-custom-logged-stats",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "plugin-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "custom-logged-stats-name",
                          "description": "Name of the Custom Logged Stats",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Custom Logged Stats by name, replacing any attributes specified in the request body",
                    "type": "custom-logged-stats-response",
                    "nickname": "put-custom-logged-stats",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "plugin-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "custom-logged-stats-name",
                          "description": "Name of the Custom Logged Stats",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Custom Logged Stats attributes to update",
                            "name": "custom-logged-stats-properties",
                            "type": "custom-logged-stats-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Custom Logged Stats by name, using a SCIM patch request",
                    "type": "custom-logged-stats-response",
                    "nickname": "patch-custom-logged-stats",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "plugin-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "custom-logged-stats-name",
                          "description": "Name of the Custom Logged Stats",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Custom Logged Stats",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Custom Logged Stats",
                    "nickname": "delete-custom-logged-stats",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "plugin-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "custom-logged-stats-name",
                          "description": "Name of the Custom Logged Stats",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "plugin-root-response": {
            "id": "plugin-root-response",
            "description": "A Plugin Root resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:plugin-root"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Plugin Root"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "pluginOrderPreParseAbandon": {
                    "description": "Specifies the order in which pre-parse abandon plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseModify": {
                    "description": "Specifies the order in which pre-parse modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationExtended": {
                    "description": "Specifies the order in which pre-operation extended operation plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderSearchResultEntry": {
                    "description": "Specifies the order in which search result entry plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationDelete": {
                    "description": "Specifies the order in which post-operation delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationExtended": {
                    "description": "Specifies the order in which post-operation extended operation plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseAdd": {
                    "description": "Specifies the order in which pre-parse add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseModifyDN": {
                    "description": "Specifies the order in which post-response modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationCompare": {
                    "description": "Specifies the order in which pre-operation compare plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseModifyDN": {
                    "description": "Specifies the order in which pre-parse modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationDelete": {
                    "description": "Specifies the order in which pre-operation delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseSearch": {
                    "description": "Specifies the order in which post-response search plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationAbandon": {
                    "description": "Specifies the order in which post-operation abandon plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationModify": {
                    "description": "Specifies the order in which pre-operation modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderShutdown": {
                    "description": "Specifies the order in which shutdown plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseAdd": {
                    "description": "Specifies the order in which post-response add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderLDIFExport": {
                    "description": "Specifies the order in which LDIF export plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderLDIFImport": {
                    "description": "Specifies the order in which LDIF import plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostSynchronizationModifyDN": {
                    "description": "Specifies the order in which post-synchronization modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseDelete": {
                    "description": "Specifies the order in which pre-parse delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseBind": {
                    "description": "Specifies the order in which post-response bind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationAdd": {
                    "description": "Specifies the order in which post-operation add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationSearch": {
                    "description": "Specifies the order in which post-operation search plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostSynchronizationModify": {
                    "description": "Specifies the order in which post-synchronization modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationSearch": {
                    "description": "Specifies the order in which pre-operation search plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseBind": {
                    "description": "Specifies the order in which pre-parse bind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationModifyDN": {
                    "description": "Specifies the order in which post-operation modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostDisconnect": {
                    "description": "Specifies the order in which post-disconnect plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseCompare": {
                    "description": "Specifies the order in which post-response compare plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostConnect": {
                    "description": "Specifies the order in which post-connect plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseSearch": {
                    "description": "Specifies the order in which pre-parse search plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseExtended": {
                    "description": "Specifies the order in which post-response extended operation plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseExtended": {
                    "description": "Specifies the order in which pre-parse extended operation plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderSearchResultReference": {
                    "description": "Specifies the order in which search result reference plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseCompare": {
                    "description": "Specifies the order in which pre-parse compare plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationCompare": {
                    "description": "Specifies the order in which post-operation compare plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationUnbind": {
                    "description": "Specifies the order in which post-operation unbind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationBind": {
                    "description": "Specifies the order in which pre-operation bind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationAdd": {
                    "description": "Specifies the order in which pre-operation add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationModify": {
                    "description": "Specifies the order in which post-operation modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderStartup": {
                    "description": "Specifies the order in which startup plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationModifyDN": {
                    "description": "Specifies the order in which pre-operation modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostSynchronizationAdd": {
                    "description": "Specifies the order in which post-synchronization add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostSynchronizationDelete": {
                    "description": "Specifies the order in which post-synchronization delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderSubordinateModifyDN": {
                    "description": "Specifies the order in which subordinate modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderIntermediateResponse": {
                    "description": "Specifies the order in which intermediate response plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationBind": {
                    "description": "Specifies the order in which post-operation bind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseModify": {
                    "description": "Specifies the order in which post-response modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseUnbind": {
                    "description": "Specifies the order in which pre-parse unbind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseDelete": {
                    "description": "Specifies the order in which post-response delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
            }
        },
        "plugin-root-properties": {
            "id": "plugin-root-properties",
            "description": "Plugin Root properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:plugin-root"
                        ]
                    }
                },
                "pluginOrderPreParseAbandon": {
                    "description": "Specifies the order in which pre-parse abandon plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseModify": {
                    "description": "Specifies the order in which pre-parse modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationExtended": {
                    "description": "Specifies the order in which pre-operation extended operation plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderSearchResultEntry": {
                    "description": "Specifies the order in which search result entry plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationDelete": {
                    "description": "Specifies the order in which post-operation delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationExtended": {
                    "description": "Specifies the order in which post-operation extended operation plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseAdd": {
                    "description": "Specifies the order in which pre-parse add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseModifyDN": {
                    "description": "Specifies the order in which post-response modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationCompare": {
                    "description": "Specifies the order in which pre-operation compare plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseModifyDN": {
                    "description": "Specifies the order in which pre-parse modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationDelete": {
                    "description": "Specifies the order in which pre-operation delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseSearch": {
                    "description": "Specifies the order in which post-response search plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationAbandon": {
                    "description": "Specifies the order in which post-operation abandon plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationModify": {
                    "description": "Specifies the order in which pre-operation modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderShutdown": {
                    "description": "Specifies the order in which shutdown plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseAdd": {
                    "description": "Specifies the order in which post-response add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderLDIFExport": {
                    "description": "Specifies the order in which LDIF export plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderLDIFImport": {
                    "description": "Specifies the order in which LDIF import plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostSynchronizationModifyDN": {
                    "description": "Specifies the order in which post-synchronization modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseDelete": {
                    "description": "Specifies the order in which pre-parse delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseBind": {
                    "description": "Specifies the order in which post-response bind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationAdd": {
                    "description": "Specifies the order in which post-operation add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationSearch": {
                    "description": "Specifies the order in which post-operation search plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostSynchronizationModify": {
                    "description": "Specifies the order in which post-synchronization modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationSearch": {
                    "description": "Specifies the order in which pre-operation search plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseBind": {
                    "description": "Specifies the order in which pre-parse bind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationModifyDN": {
                    "description": "Specifies the order in which post-operation modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostDisconnect": {
                    "description": "Specifies the order in which post-disconnect plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseCompare": {
                    "description": "Specifies the order in which post-response compare plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostConnect": {
                    "description": "Specifies the order in which post-connect plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseSearch": {
                    "description": "Specifies the order in which pre-parse search plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseExtended": {
                    "description": "Specifies the order in which post-response extended operation plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseExtended": {
                    "description": "Specifies the order in which pre-parse extended operation plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderSearchResultReference": {
                    "description": "Specifies the order in which search result reference plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseCompare": {
                    "description": "Specifies the order in which pre-parse compare plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationCompare": {
                    "description": "Specifies the order in which post-operation compare plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationUnbind": {
                    "description": "Specifies the order in which post-operation unbind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationBind": {
                    "description": "Specifies the order in which pre-operation bind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationAdd": {
                    "description": "Specifies the order in which pre-operation add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationModify": {
                    "description": "Specifies the order in which post-operation modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderStartup": {
                    "description": "Specifies the order in which startup plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreOperationModifyDN": {
                    "description": "Specifies the order in which pre-operation modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostSynchronizationAdd": {
                    "description": "Specifies the order in which post-synchronization add plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostSynchronizationDelete": {
                    "description": "Specifies the order in which post-synchronization delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderSubordinateModifyDN": {
                    "description": "Specifies the order in which subordinate modify DN plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderIntermediateResponse": {
                    "description": "Specifies the order in which intermediate response plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostOperationBind": {
                    "description": "Specifies the order in which post-operation bind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseModify": {
                    "description": "Specifies the order in which post-response modify plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPreParseUnbind": {
                    "description": "Specifies the order in which pre-parse unbind plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
                ,
                "pluginOrderPostResponseDelete": {
                    "description": "Specifies the order in which post-response delete plug-ins are to be loaded and invoked.",
                    "type": "string"
                }
            }
        }
        ,
        "plugin-list-response": {
            "id": "plugin-list-response",
            "description": "Plugin list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "plugin-response"
                    }
                }
            }
        },
        "add-plugin-request": {
            "id": "add-plugin-request",
            "description": "A Plugin resource request",
            "required": [
                "pluginName"
            ],
            "properties": {
                "pluginName": {
                    "type": "string",
                    "description": "Name of the new Plugin"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:plugin:last-access-time"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:stats-collector"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:internal-search-rate"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:modifiable-password-policy-state"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:seven-bit-clean"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-access-grants"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-gc"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:ping-one-pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:changelog-password-encryption"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:processing-time-histogram"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:search-shutdown"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-stats-logger"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:change-subscription-notification"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:sub-operation-timing"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:third-party"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:encrypt-attribute-values"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:dn-mapper"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:monitor-history"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:referral-on-update"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:simple-to-external-bind"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:snmp-subagent"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:password-policy-import"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:profiler"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-inactive-pingfederate-persistent-sessions"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:composed-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:ldap-result-code-tracker"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:attribute-mapper"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:delay"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-sessions"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:last-mod"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:pluggable-pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:referential-integrity"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:unique-attribute"
                        ]
                    }
                },
                "contextName": {
                    "description": "The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a topology must have a unique SNMP context name.",
                    "type": "string"
                }
                ,
                "numMostExpensivePhasesShown": {
                    "description": "This controls how many of the most expensive phases are included per operation type in the monitor entry.",
                    "type": "integer"
                }
                ,
                "mapAttribute": {
                    "description": "Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the enable-attribute-mapping property has a value of \"true\". Any attributes listed must be defined in the server schema with either the distinguished name syntax or the name and optional UID syntax.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "targetAttribute": {
                    "description": "Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute type must be defined in the server schema and must not be equal to the source attribute type.",
                    "type": "string"
                }
                ,
                "type": {
                    "description": "Specifies the type of attributes to check for value uniqueness.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "localDBBackendInfo": {
                    "description": "Specifies the level of detail to include about the Local DB Backends.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "allowLaxPassThroughAuthenticationPasswords": {
                    "description": "Indicates whether to overwrite the user's local password even if the password used to authenticate to the PingOne service would have failed validation if the user attempted to set it directly.",
                    "type": "boolean"
                }
                ,
                "outputFile": {
                    "description": "The path of an LDIF file that should be created with the results of the search.",
                    "type": "string"
                }
                ,
                "excludeFilter": {
                    "description": "The set of search filters that identify entries for which composed values will not be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "apiURL": {
                    "description": "Specifies the API endpoint for the PingOne web service.",
                    "type": "string"
                }
                ,
                "includedLDAPApplication": {
                    "description": "If statistics should not be included for all applications, this property names the subset of applications that should be included.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "searchFilterPattern": {
                    "description": "A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, \"(mail={uid:ldapFilterEscape}@example.com)\" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before \"@example.com\" in the mail attribute in the external server. Note that the \"ldapFilterEscape\" modifier should almost always be used with attributes specified in the pattern.",
                    "type": "string"
                }
                ,
                "histogramOpType": {
                    "description": "Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control this.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "all"
                            ,
                            "add"
                            ,
                            "bind"
                            ,
                            "compare"
                            ,
                            "delete"
                            ,
                            "extended"
                            ,
                            "modify"
                            ,
                            "modify-dn"
                            ,
                            "search"
                        ]
                    }
                }
                ,
                "pingInterval": {
                    "description": "The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of zero disables the sending of pings by the sub-agent.",
                    "type": "string"
                }
                ,
                "serverAccessMode": {
                    "description": "Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.",
                    "type": "string"
                    , "enum": [
                        "round-robin"
                        ,
                        "failover-on-unavailable"
                        ,
                        "failover-on-any-failure"
                    ]
                }
                ,
                "ignoredPasswordPolicyStateErrorCondition": {
                    "description": "A set of password policy state error conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option can only be used if try-local-bind is true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "temporarily-locked-due-to-failures"
                            ,
                            "permanently-locked-due-to-failures"
                            ,
                            "locked-due-to-idle-interval"
                            ,
                            "locked-due-to-maximum-reset-age"
                            ,
                            "locked-due-to-validation-failure"
                            ,
                            "password-is-expired"
                        ]
                    }
                }
                ,
                "rotationPolicy": {
                    "description": "The rotation policy to use for the Periodic Stats Logger Plugin .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "statusSummaryInfo": {
                    "description": "Specifies the level of detail to include about the status summary monitor entry.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "verbose"
                    ]
                }
                ,
                "peerServerPriorityIndex": {
                    "description": "In a replicated environment, this determines the order in which peer servers should attempt to purge data.",
                    "type": "integer"
                }
                ,
                "agentxAddress": {
                    "description": "The hostname or IP address of the SNMP master agent.",
                    "type": "string"
                }
                ,
                "previousFileExtension": {
                    "description": "An extension that should be appended to the name of an existing output file rather than deleting it. If a file already exists with the full previous file name, then it will be deleted before the current file is renamed to become the previous file.",
                    "type": "string"
                }
                ,
                "environmentID": {
                    "description": "Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.",
                    "type": "string"
                }
                ,
                "delay": {
                    "description": "The delay to inject for operations matching the associated criteria.",
                    "type": "string"
                }
                ,
                "ldapInfo": {
                    "description": "Specifies the level of detail to include about the LDAP connection handlers.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "replicationInfo": {
                    "description": "Specifies the level of detail to include about replication.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "emptyInsteadOfZero": {
                    "description": "This property controls whether a value in the output is shown as empty if the value is zero.",
                    "type": "boolean"
                }
                ,
                "maxUpdatesPerSecond": {
                    "description": "This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.",
                    "type": "integer"
                }
                ,
                "includeAttribute": {
                    "description": "The name of an attribute that should be included in the results. This may include any token which is allowed as a requested attribute in search requests, including the name of an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an object class name preceded with an at symbol (to indicate all attributes associated with that object class), an attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "excludeBaseDN": {
                    "description": "The set of base DNs below which composed values will not be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "delayAfterAlert": {
                    "description": "Specifies the length of time that the Directory Server should wait after sending the \"force-gc-starting\" administrative alert before actually invoking the garbage collection processing.",
                    "type": "string"
                }
                ,
                "operationType": {
                    "description": "Specifies the types of operations that should result in access time updates.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "add"
                            ,
                            "bind"
                            ,
                            "compare"
                            ,
                            "modify"
                            ,
                            "modify-dn"
                            ,
                            "search"
                        ]
                    }
                }
                ,
                "datetimeAttribute": {
                    "description": "The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.",
                    "type": "string"
                }
                ,
                "collectionInterval": {
                    "description": "Some of the calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered, and setting this value too small can have an adverse impact on performance.",
                    "type": "string"
                }
                ,
                "changelogPasswordEncryptionKey": {
                    "description": "A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the \"changelog-password-decryption-key\" property or the \"changelog-password-decryption-key-passphrase-provider\" property) in the Global Sync Configuration in the Data Sync Server.",
                    "type": "string"
                }
                ,
                "invokeGCDayOfWeek": {
                    "description": "Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will run every day at the specified time.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "sunday"
                            ,
                            "monday"
                            ,
                            "tuesday"
                            ,
                            "wednesday"
                            ,
                            "thursday"
                            ,
                            "friday"
                            ,
                            "saturday"
                        ]
                    }
                }
                ,
                "sampleInterval": {
                    "description": "The duration between statistics collections. Setting this value too small can have an impact on performance. This value should be a multiple of collection-interval.",
                    "type": "string"
                }
                ,
                "server": {
                    "description": "Specifies the LDAP external server(s) to which authentication attempts should be forwarded.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "profileSampleInterval": {
                    "description": "Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.",
                    "type": "string"
                }
                ,
                "suppressIfIdle": {
                    "description": "If the server is idle during the specified interval, then do not log any output if this property is set to true. The server is idle if during the interval, no new connections were established, no operations were processed, and no operations are pending.",
                    "type": "boolean"
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.",
                    "type": "string"
                }
                ,
                "updatedEntryNewlyMatchesCriteriaBehavior": {
                    "description": "The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either the base DN or filter criteria, but now do satisfy that criteria.",
                    "type": "string"
                    , "enum": [
                        "preserve-existing-values-without-composing-new-values"
                        ,
                        "preserve-existing-values-or-compose-new-values"
                        ,
                        "preserve-existing-values-and-compose-new-values"
                        ,
                        "compose-new-values-without-preserving-existing-values"
                    ]
                }
                ,
                "enabled": {
                    "description": "Indicates whether the plug-in is enabled for use.",
                    "type": "boolean"
                }
                ,
                "attributeType": {
                    "description": "Specifies the name or OID of an attribute type for which values should be checked to ensure that they are 7-bit clean.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "expirationOffset": {
                    "description": "The duration to wait after the value specified in datetime-attribute (and optionally datetime-json-field) before purging the data.",
                    "type": "string"
                }
                ,
                "retentionPolicy": {
                    "description": "The retention policy to use for the Periodic Stats Logger Plugin .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "loggingErrorBehavior": {
                    "description": "Specifies the behavior that the server should exhibit if an error occurs during logging processing.",
                    "type": "string"
                    , "enum": [
                        "standard-error"
                        ,
                        "lockdown-mode"
                    ]
                }
                ,
                "includeBaseDN": {
                    "description": "The set of base DNs below which composed values may be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "separateMonitorEntryPerTrackedApplication": {
                    "description": "When enabled, separate monitor entries will be included for each application defined in the Global Configuration's tracked-application property.",
                    "type": "boolean"
                }
                ,
                "numWorkerThreads": {
                    "description": "The number of worker threads to use to handle SNMP requests.",
                    "type": "integer"
                }
                ,
                "alwaysMapResponses": {
                    "description": "Indicates whether DNs in response messages containing the target DN should always be remapped back to the source DN. If this is \"false\", then mapping will be performed for a response message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.",
                    "type": "boolean"
                }
                ,
                "retainFilesSparselyByAge": {
                    "description": "Retain some older files to give greater perspective on how monitoring information has changed over time.",
                    "type": "boolean"
                }
                ,
                "preventConflictsWithSoftDeletedEntries": {
                    "description": "Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even if those conflicts only exist in soft-deleted entries.",
                    "type": "boolean"
                }
                ,
                "connectRetryMaxWait": {
                    "description": "The maximum amount of time to wait between attempts to establish a connection to the master agent.",
                    "type": "string"
                }
                ,
                "hostInfo": {
                    "description": "Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and network activity.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "cpu"
                            ,
                            "disk"
                            ,
                            "network"
                        ]
                    }
                }
                ,
                "profileAction": {
                    "description": "Specifies the action that should be taken by the profiler.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "start"
                        ,
                        "stop"
                        ,
                        "cancel"
                    ]
                }
                ,
                "valuePattern": {
                    "description": "Specifies a pattern for constructing the values to use for the target attribute type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numThreads": {
                    "description": "Specifies the number of concurrent threads that should be used to process the search operations.",
                    "type": "integer"
                }
                ,
                "tryLocalBind": {
                    "description": "Indicates whether to attempt the bind in the local server first, or to only send it to the PingOne service.",
                    "type": "boolean"
                }
                ,
                "updateLocalPassword": {
                    "description": "Indicates whether to overwrite the user's local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service.",
                    "type": "boolean"
                }
                ,
                "filter": {
                    "description": "A filter that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "targetDN": {
                    "description": "Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.",
                    "type": "string"
                }
                ,
                "updateInterval": {
                    "description": "Specifies the interval in seconds when referential integrity updates are made.",
                    "type": "string"
                }
                ,
                "includedLocalEntryBaseDN": {
                    "description": "The base DNs for the local users whose authentication attempts may be passed through to the PingOne service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "lowerBound": {
                    "description": "Specifies the lower bound for the numeric value which will be inserted into the search filter.",
                    "type": "integer"
                }
                ,
                "multipleAttributeBehavior": {
                    "description": "The behavior to exhibit if multiple attribute types are specified.",
                    "type": "string"
                    , "enum": [
                        "unique-within-each-attribute"
                        ,
                        "unique-across-all-attributes-including-in-same-entry"
                        ,
                        "unique-across-all-attributes-except-in-same-entry"
                    ]
                }
                ,
                "sanitize": {
                    "description": "Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and search filters. Setting this property to true will redact this information from the monitor files. This should only be used when necessary, as it reduces the information available in the archive and can increase the time to find the source of support issues.",
                    "type": "boolean"
                }
                ,
                "maxSearchResultEntriesToUpdate": {
                    "description": "Specifies the maximum number of entries that should be updated in a search operation. Only search result entries actually returned to the client may have their last access time updated, but because a single search operation may return a very large number of entries, the plugin will only update entries if no more than a specified number of entries are updated.",
                    "type": "integer"
                }
                ,
                "overrideLocalPassword": {
                    "description": "Indicates whether to attempt the authentication in the PingOne service if the local user entry includes a password. This property will only be used if try-local-bind is true.",
                    "type": "boolean"
                }
                ,
                "invokeForInternalOperations": {
                    "description": "Indicates whether the plug-in should be invoked for internal operations.",
                    "type": "boolean"
                }
                ,
                "datetimeFormat": {
                    "description": "Specifies the format of the datetime stored within the entry that determines when data should be purged.",
                    "type": "string"
                    , "enum": [
                        "generalized-time"
                        ,
                        "java-system-time-millis"
                        ,
                        "custom"
                    ]
                }
                ,
                "enableProfilingOnStartup": {
                    "description": "Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.",
                    "type": "boolean"
                }
                ,
                "pollingInterval": {
                    "description": "This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).",
                    "type": "string"
                }
                ,
                "includedLDAPStat": {
                    "description": "Specifies the types of statistics related to LDAP connections and operation processing that should be included in the output.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "active-operations"
                            ,
                            "num-connections"
                            ,
                            "op-count-and-latency"
                            ,
                            "work-queue"
                            ,
                            "ldap-protocol"
                        ]
                    }
                }
                ,
                "updateLocalPasswordDN": {
                    "description": "This is the DN of the user that will be used to overwrite the user's local password if update-local-password is set. The DN put here should be added to 'ignore-changes-by-dn' in the appropriate Sync Source.",
                    "type": "string"
                }
                ,
                "rotationListener": {
                    "description": "A listener that should be notified whenever a log file is rotated out of service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "profileDirectory": {
                    "description": "Specifies the path to the directory where profile information is to be written. This path may be either an absolute path or a path that is relative to the root of the Directory Server instance.",
                    "type": "string"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "OAuthClientSecret": {
                    "description": "Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "OAuthClientSecretPassphraseProvider": {
                    "description": "Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "maxUpdateFrequency": {
                    "description": "Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit the rate of internal write operations processed in the server.",
                    "type": "string"
                }
                ,
                "numDeleteThreads": {
                    "description": "The number of threads used to delete expired entries.",
                    "type": "integer"
                }
                ,
                "passThroughAuthenticationHandler": {
                    "description": "The component used to manage authentication with the external authentication service.",
                    "type": "string"
                }
                ,
                "multipleValuePatternBehavior": {
                    "description": "The behavior to exhibit if the plugin is configured with multiple value patterns.",
                    "type": "string"
                    , "enum": [
                        "use-first-non-rejected-value-pattern-with-non-empty-values-but-may-reject"
                        ,
                        "use-first-non-rejected-value-pattern-with-non-empty-values-and-never-reject"
                        ,
                        "use-first-rejection-or-first-value-pattern-with-non-empty-values"
                        ,
                        "use-all-non-rejected-value-patterns-with-non-empty-values-but-may-reject"
                        ,
                        "use-all-non-rejected-value-patterns-with-non-empty-values-and-never-reject"
                        ,
                        "use-first-rejection-or-all-value-patterns-with-non-empty-values"
                    ]
                }
                ,
                "perApplicationLDAPStats": {
                    "description": "Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.",
                    "type": "string"
                    , "enum": [
                        "aggregate-only"
                        ,
                        "per-application-only"
                    ]
                }
                ,
                "userMappingRemoteJSONField": {
                    "description": "The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the local user entry, as specified in the user-mapping-local-attribute property.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sourceAttribute": {
                    "description": "Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute. Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute type.",
                    "type": "string"
                }
                ,
                "logInterval": {
                    "description": "The duration between statistics collection and logging. A new line is logged to the output for each interval. Setting this value too small can have an impact on performance.",
                    "type": "string"
                }
                ,
                "customDatetimeFormat": {
                    "description": "When the datetime-format property is configured with a value of \"custom\", this specifies the format (using a string compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.",
                    "type": "string"
                }
                ,
                "customTimezone": {
                    "description": "Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The provided value must be accepted by java.util.TimeZone.getTimeZone.",
                    "type": "string"
                }
                ,
                "requestCriteria": {
                    "description": "Specifies a set of request criteria that may be used to indicate whether to apply access time updates for the associated operation.",
                    "type": "string"
                }
                ,
                "initialConnections": {
                    "description": "Specifies the initial number of connections to establish to each external server against which authentication may be attempted.",
                    "type": "integer"
                }
                ,
                "changelogPasswordEncryptionKeyPassphraseProvider": {
                    "description": "A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the \"changelog-password-decryption-key\" property or the \"changelog-password-decryption-key-passphrase-provider\" property) in the Global Sync Configuration in the Data Sync Server.",
                    "type": "string"
                }
                ,
                "targetAttributeExistsDuringInitialPopulationBehavior": {
                    "description": "The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).",
                    "type": "string"
                    , "enum": [
                        "preserve-existing-values"
                        ,
                        "overwrite-existing-values"
                        ,
                        "merge-existing-and-composed-values"
                        ,
                        "reject-existing-values-in-add-but-preserve-in-ldif-import"
                        ,
                        "reject-existing-values-in-add-but-overwrite-in-ldif-import"
                        ,
                        "reject-existing-values-in-add-but-merge-in-ldif-import"
                    ]
                }
                ,
                "updateTargetAttributeBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target attribute.",
                    "type": "string"
                    , "enum": [
                        "always-allow"
                        ,
                        "allow-only-for-non-composed-values"
                        ,
                        "never-allow"
                    ]
                }
                ,
                "sourceAttributeRemovalBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a way that this plugin would no longer generate any composed values for that entry.",
                    "type": "string"
                    , "enum": [
                        "preserve-non-composed-values"
                        ,
                        "preserve-all-values"
                        ,
                        "remove-all-values-but-preserve-all-if-required"
                        ,
                        "remove-all-values-but-preserve-non-composed-if-required"
                    ]
                }
                ,
                "connectionCriteria": {
                    "description": "A reference to connection criteria that will be used to indicate which bind requests should be passed through to the PingOne service.",
                    "type": "string"
                }
                ,
                "generateCollectorFiles": {
                    "description": "Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set to false to prevent unnecessary I/O.",
                    "type": "boolean"
                }
                ,
                "serverInfo": {
                    "description": "Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "entryCacheInfo": {
                    "description": "Specifies the level of detail to include for each entry cache.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "logFile": {
                    "description": "The file name to use for the log files generated by the Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an absolute path.",
                    "type": "string"
                }
                ,
                "logFilePermissions": {
                    "description": "The UNIX permissions of the log files created by this Periodic Stats Logger Plugin.",
                    "type": "string"
                }
                ,
                "histogramFormat": {
                    "description": "The format of the data in the processing time histogram.",
                    "type": "string"
                    , "enum": [
                        "count"
                        ,
                        "aggregate-percentage"
                    ]
                }
                ,
                "sessionTimeout": {
                    "description": "Specifies the maximum amount of time to wait for a session to the master agent to be established.",
                    "type": "string"
                }
                ,
                "invokeGCTimeUtc": {
                    "description": "Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in \"HH:MM\" format, with \"HH\" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC time zone.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "userMappingLocalAttribute": {
                    "description": "The names of the attributes in the local user entry whose values must match the values of the corresponding fields in the PingOne service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeFilter": {
                    "description": "The set of search filters that identify entries for which composed values may be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Plugin.",
                    "type": "string"
                }
                ,
                "filterPrefix": {
                    "description": "Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should contain the entire filter string.",
                    "type": "string"
                }
                ,
                "upperBound": {
                    "description": "Specifies the upper bound for the numeric value which will be inserted into the search filter.",
                    "type": "integer"
                }
                ,
                "includedResourceStat": {
                    "description": "Specifies whether statistics related to resource utilization such as JVM memory.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "memory-utilization"
                        ]
                    }
                }
                ,
                "dnMap": {
                    "description": "Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Plugin",
                    "type": "string"
                }
                ,
                "excludeAttribute": {
                    "description": "Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing the modifiersName and modifyTimestamp values to be updated for that entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "datetimeJSONField": {
                    "description": "The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.",
                    "type": "string"
                }
                ,
                "purgeBehavior": {
                    "description": "Specifies whether to delete expired entries or attribute values. By default entries are deleted.",
                    "type": "string"
                    , "enum": [
                        "delete-entries"
                        ,
                        "subtree-delete-entries"
                        ,
                        "delete-json-attribute-values"
                    ]
                }
                ,
                "gaugeInfo": {
                    "description": "Specifies the level of detail to include for Gauges.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "ldapChangelogInfo": {
                    "description": "Specifies the level of detail to include for the LDAP changelog.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "histogramCategoryBoundary": {
                    "description": "Specifies the boundary values that will be used to separate the processing times into categories. Values should be specified as durations, and all values must be greater than zero.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "authURL": {
                    "description": "Specifies the API endpoint for the PingOne authentication service.",
                    "type": "string"
                }
                ,
                "defaultUserPasswordStorageScheme": {
                    "description": "Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy is to be used to govern them.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scope": {
                    "description": "The scope to use for the search.",
                    "type": "string"
                    , "enum": [
                        "base"
                        ,
                        "one"
                        ,
                        "sub"
                        ,
                        "subordinate-subtree"
                    ]
                }
                ,
                "enableControlMapping": {
                    "description": "Indicates whether DN mapping should be applied to DNs that may be present in specific controls. DN mapping will only be applied for control types which are specifically supported by the DN mapper plugin.",
                    "type": "boolean"
                }
                ,
                "filterSuffix": {
                    "description": "Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should be omitted.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "baseDN": {
                    "description": "Specifies the base DN to use for the searches to perform.",
                    "type": "string"
                }
                ,
                "includeQueueTime": {
                    "description": "Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be available if the work queue is configured to monitor the queue time.",
                    "type": "boolean"
                }
                ,
                "bindDNPattern": {
                    "description": "A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value \"cn={cn},ou=People,dc=example,dc=com\" indicates that the remote bind DN should be constructed from the text \"cn=\" followed by the value of the local entry's cn attribute followed by the text \"ou=People,dc=example,dc=com\". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of \"{seeAlso}\" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.",
                    "type": "string"
                }
                ,
                "maxConnections": {
                    "description": "Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.",
                    "type": "integer"
                }
                ,
                "referralBaseURL": {
                    "description": "Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address, and port to use to communicate with the target server (e.g., \"ldap://server.example.com:389/\").",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "linesBetweenHeader": {
                    "description": "The number of lines to log between logging the header line that summarizes the columns in the table.",
                    "type": "integer"
                }
                ,
                "pluginType": {
                    "description": "Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "startup"
                            ,
                            "shutdown"
                            ,
                            "postconnect"
                            ,
                            "postdisconnect"
                            ,
                            "ldifimport"
                            ,
                            "ldifexport"
                            ,
                            "preparseabandon"
                            ,
                            "preparseadd"
                            ,
                            "preparsebind"
                            ,
                            "preparsecompare"
                            ,
                            "preparsedelete"
                            ,
                            "preparseextended"
                            ,
                            "preparsemodify"
                            ,
                            "preparsemodifydn"
                            ,
                            "preparsesearch"
                            ,
                            "preparseunbind"
                            ,
                            "preoperationadd"
                            ,
                            "preoperationbind"
                            ,
                            "preoperationcompare"
                            ,
                            "preoperationdelete"
                            ,
                            "preoperationextended"
                            ,
                            "preoperationmodify"
                            ,
                            "preoperationmodifydn"
                            ,
                            "preoperationsearch"
                            ,
                            "postoperationabandon"
                            ,
                            "postoperationadd"
                            ,
                            "postoperationbind"
                            ,
                            "postoperationcompare"
                            ,
                            "postoperationdelete"
                            ,
                            "postoperationextended"
                            ,
                            "postoperationmodify"
                            ,
                            "postoperationmodifydn"
                            ,
                            "postoperationsearch"
                            ,
                            "postoperationunbind"
                            ,
                            "preresponseadd"
                            ,
                            "preresponsebind"
                            ,
                            "preresponsecompare"
                            ,
                            "preresponsedelete"
                            ,
                            "preresponseextended"
                            ,
                            "preresponsemodify"
                            ,
                            "preresponsemodifydn"
                            ,
                            "preresponsesearch"
                            ,
                            "postresponseadd"
                            ,
                            "postresponsebind"
                            ,
                            "postresponsecompare"
                            ,
                            "postresponsedelete"
                            ,
                            "postresponseextended"
                            ,
                            "postresponsemodify"
                            ,
                            "postresponsemodifydn"
                            ,
                            "postresponsesearch"
                            ,
                            "postsynchronizationadd"
                            ,
                            "postsynchronizationdelete"
                            ,
                            "postsynchronizationmodify"
                            ,
                            "postsynchronizationmodifydn"
                            ,
                            "searchresultentry"
                            ,
                            "searchresultreference"
                            ,
                            "subordinatemodifydn"
                            ,
                            "intermediateresponse"
                        ]
                    }
                }
                ,
                "additionalUserMappingSCIMFilter": {
                    "description": "An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that corresponds to the local entry. Only the \"eq\", \"sw\", \"and\", and \"or\" filter types may be used.",
                    "type": "string"
                }
                ,
                "logFileFormat": {
                    "description": "Specifies the format to use when logging server statistics.",
                    "type": "string"
                    , "enum": [
                        "csv"
                        ,
                        "json"
                    ]
                }
                ,
                "agentxPort": {
                    "description": "The port number on which the SNMP master agent will be contacted.",
                    "type": "integer"
                }
                ,
                "enableAttributeMapping": {
                    "description": "Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.",
                    "type": "boolean"
                }
                ,
                "defaultAuthPasswordStorageScheme": {
                    "description": "Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy should be used to govern them.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "multiValuedAttributeBehavior": {
                    "description": "The behavior to exhibit for source attributes that have multiple values.",
                    "type": "string"
                    , "enum": [
                        "use-first-value"
                        ,
                        "reject-entries-with-any-multivalued-source-attribute"
                        ,
                        "use-all-values-if-possible-but-reject-if-not"
                        ,
                        "use-all-values-if-possible-but-only-first-value-if-not"
                    ]
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.",
                    "type": "string"
                }
                ,
                "sourceDN": {
                    "description": "Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the source DN must not be equal to the target DN.",
                    "type": "string"
                }
                ,
                "delayPostGC": {
                    "description": "Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection processing, before removing the \"force-gc-starting\" administrative alert, which marks the server as unavailable.",
                    "type": "string"
                }
                ,
                "invokeForFailedBinds": {
                    "description": "Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.",
                    "type": "boolean"
                }
                ,
                "headerPrefixPerColumn": {
                    "description": "This property controls whether the header prefix, which applies to a group of columns, appears at the start of each column header or only the first column in a group.",
                    "type": "boolean"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the PingOne service.",
                    "type": "string"
                }
                ,
                "updatedEntryNoLongerMatchesCriteriaBehavior": {
                    "description": "The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN and filter criteria, but now no longer satisfies that criteria.",
                    "type": "string"
                    , "enum": [
                        "preserve-all-values"
                        ,
                        "preserve-non-composed-values"
                        ,
                        "remove-all-values-but-preserve-all-if-required"
                        ,
                        "remove-all-values-but-preserve-non-composed-if-required"
                    ]
                }
                ,
                "searchBaseDN": {
                    "description": "The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.",
                    "type": "string"
                }
                ,
                "OAuthClientID": {
                    "description": "Specifies the OAuth Client ID used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "append": {
                    "description": "Specifies whether to append to existing log files.",
                    "type": "boolean"
                }
                ,
                "updateSourceAttributeBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any of the value patterns.",
                    "type": "string"
                    , "enum": [
                        "replace-composed-values"
                        ,
                        "replace-all-values"
                        ,
                        "preserve-existing-values"
                    ]
                }
            }
        },
        "plugin-response": {
            "id": "plugin-response",
            "description": "A Plugin resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:plugin:last-access-time"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:stats-collector"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:internal-search-rate"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:modifiable-password-policy-state"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:seven-bit-clean"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-access-grants"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-gc"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:ping-one-pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:changelog-password-encryption"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:processing-time-histogram"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:search-shutdown"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-stats-logger"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:change-subscription-notification"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:sub-operation-timing"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:third-party"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:encrypt-attribute-values"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:dn-mapper"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:monitor-history"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:referral-on-update"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:simple-to-external-bind"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:snmp-subagent"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:password-policy-import"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:profiler"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-inactive-pingfederate-persistent-sessions"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:composed-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:ldap-result-code-tracker"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:attribute-mapper"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:delay"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-sessions"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:last-mod"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:pluggable-pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:referential-integrity"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:unique-attribute"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Plugin"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "contextName": {
                    "description": "The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a topology must have a unique SNMP context name.",
                    "type": "string"
                }
                ,
                "numMostExpensivePhasesShown": {
                    "description": "This controls how many of the most expensive phases are included per operation type in the monitor entry.",
                    "type": "integer"
                }
                ,
                "mapAttribute": {
                    "description": "Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the enable-attribute-mapping property has a value of \"true\". Any attributes listed must be defined in the server schema with either the distinguished name syntax or the name and optional UID syntax.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "targetAttribute": {
                    "description": "Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute type must be defined in the server schema and must not be equal to the source attribute type.",
                    "type": "string"
                }
                ,
                "type": {
                    "description": "Specifies the type of attributes to check for value uniqueness.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "localDBBackendInfo": {
                    "description": "Specifies the level of detail to include about the Local DB Backends.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "allowLaxPassThroughAuthenticationPasswords": {
                    "description": "Indicates whether to overwrite the user's local password even if the password used to authenticate to the PingOne service would have failed validation if the user attempted to set it directly.",
                    "type": "boolean"
                }
                ,
                "outputFile": {
                    "description": "The path of an LDIF file that should be created with the results of the search.",
                    "type": "string"
                }
                ,
                "excludeFilter": {
                    "description": "The set of search filters that identify entries for which composed values will not be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "apiURL": {
                    "description": "Specifies the API endpoint for the PingOne web service.",
                    "type": "string"
                }
                ,
                "includedLDAPApplication": {
                    "description": "If statistics should not be included for all applications, this property names the subset of applications that should be included.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "searchFilterPattern": {
                    "description": "A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, \"(mail={uid:ldapFilterEscape}@example.com)\" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before \"@example.com\" in the mail attribute in the external server. Note that the \"ldapFilterEscape\" modifier should almost always be used with attributes specified in the pattern.",
                    "type": "string"
                }
                ,
                "histogramOpType": {
                    "description": "Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control this.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "all"
                            ,
                            "add"
                            ,
                            "bind"
                            ,
                            "compare"
                            ,
                            "delete"
                            ,
                            "extended"
                            ,
                            "modify"
                            ,
                            "modify-dn"
                            ,
                            "search"
                        ]
                    }
                }
                ,
                "pingInterval": {
                    "description": "The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of zero disables the sending of pings by the sub-agent.",
                    "type": "string"
                }
                ,
                "serverAccessMode": {
                    "description": "Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.",
                    "type": "string"
                    , "enum": [
                        "round-robin"
                        ,
                        "failover-on-unavailable"
                        ,
                        "failover-on-any-failure"
                    ]
                }
                ,
                "ignoredPasswordPolicyStateErrorCondition": {
                    "description": "A set of password policy state error conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option can only be used if try-local-bind is true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "temporarily-locked-due-to-failures"
                            ,
                            "permanently-locked-due-to-failures"
                            ,
                            "locked-due-to-idle-interval"
                            ,
                            "locked-due-to-maximum-reset-age"
                            ,
                            "locked-due-to-validation-failure"
                            ,
                            "password-is-expired"
                        ]
                    }
                }
                ,
                "rotationPolicy": {
                    "description": "The rotation policy to use for the Periodic Stats Logger Plugin .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "statusSummaryInfo": {
                    "description": "Specifies the level of detail to include about the status summary monitor entry.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "verbose"
                    ]
                }
                ,
                "peerServerPriorityIndex": {
                    "description": "In a replicated environment, this determines the order in which peer servers should attempt to purge data.",
                    "type": "integer"
                }
                ,
                "agentxAddress": {
                    "description": "The hostname or IP address of the SNMP master agent.",
                    "type": "string"
                }
                ,
                "previousFileExtension": {
                    "description": "An extension that should be appended to the name of an existing output file rather than deleting it. If a file already exists with the full previous file name, then it will be deleted before the current file is renamed to become the previous file.",
                    "type": "string"
                }
                ,
                "environmentID": {
                    "description": "Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.",
                    "type": "string"
                }
                ,
                "delay": {
                    "description": "The delay to inject for operations matching the associated criteria.",
                    "type": "string"
                }
                ,
                "ldapInfo": {
                    "description": "Specifies the level of detail to include about the LDAP connection handlers.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "replicationInfo": {
                    "description": "Specifies the level of detail to include about replication.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "emptyInsteadOfZero": {
                    "description": "This property controls whether a value in the output is shown as empty if the value is zero.",
                    "type": "boolean"
                }
                ,
                "maxUpdatesPerSecond": {
                    "description": "This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.",
                    "type": "integer"
                }
                ,
                "includeAttribute": {
                    "description": "The name of an attribute that should be included in the results. This may include any token which is allowed as a requested attribute in search requests, including the name of an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an object class name preceded with an at symbol (to indicate all attributes associated with that object class), an attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "excludeBaseDN": {
                    "description": "The set of base DNs below which composed values will not be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "delayAfterAlert": {
                    "description": "Specifies the length of time that the Directory Server should wait after sending the \"force-gc-starting\" administrative alert before actually invoking the garbage collection processing.",
                    "type": "string"
                }
                ,
                "operationType": {
                    "description": "Specifies the types of operations that should result in access time updates.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "add"
                            ,
                            "bind"
                            ,
                            "compare"
                            ,
                            "modify"
                            ,
                            "modify-dn"
                            ,
                            "search"
                        ]
                    }
                }
                ,
                "datetimeAttribute": {
                    "description": "The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.",
                    "type": "string"
                }
                ,
                "collectionInterval": {
                    "description": "Some of the calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered, and setting this value too small can have an adverse impact on performance.",
                    "type": "string"
                }
                ,
                "changelogPasswordEncryptionKey": {
                    "description": "A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the \"changelog-password-decryption-key\" property or the \"changelog-password-decryption-key-passphrase-provider\" property) in the Global Sync Configuration in the Data Sync Server.",
                    "type": "string"
                }
                ,
                "invokeGCDayOfWeek": {
                    "description": "Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will run every day at the specified time.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "sunday"
                            ,
                            "monday"
                            ,
                            "tuesday"
                            ,
                            "wednesday"
                            ,
                            "thursday"
                            ,
                            "friday"
                            ,
                            "saturday"
                        ]
                    }
                }
                ,
                "sampleInterval": {
                    "description": "The duration between statistics collections. Setting this value too small can have an impact on performance. This value should be a multiple of collection-interval.",
                    "type": "string"
                }
                ,
                "server": {
                    "description": "Specifies the LDAP external server(s) to which authentication attempts should be forwarded.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "profileSampleInterval": {
                    "description": "Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.",
                    "type": "string"
                }
                ,
                "suppressIfIdle": {
                    "description": "If the server is idle during the specified interval, then do not log any output if this property is set to true. The server is idle if during the interval, no new connections were established, no operations were processed, and no operations are pending.",
                    "type": "boolean"
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.",
                    "type": "string"
                }
                ,
                "updatedEntryNewlyMatchesCriteriaBehavior": {
                    "description": "The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either the base DN or filter criteria, but now do satisfy that criteria.",
                    "type": "string"
                    , "enum": [
                        "preserve-existing-values-without-composing-new-values"
                        ,
                        "preserve-existing-values-or-compose-new-values"
                        ,
                        "preserve-existing-values-and-compose-new-values"
                        ,
                        "compose-new-values-without-preserving-existing-values"
                    ]
                }
                ,
                "enabled": {
                    "description": "Indicates whether the plug-in is enabled for use.",
                    "type": "boolean"
                }
                ,
                "attributeType": {
                    "description": "Specifies the name or OID of an attribute type for which values should be checked to ensure that they are 7-bit clean.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "expirationOffset": {
                    "description": "The duration to wait after the value specified in datetime-attribute (and optionally datetime-json-field) before purging the data.",
                    "type": "string"
                }
                ,
                "retentionPolicy": {
                    "description": "The retention policy to use for the Periodic Stats Logger Plugin .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "loggingErrorBehavior": {
                    "description": "Specifies the behavior that the server should exhibit if an error occurs during logging processing.",
                    "type": "string"
                    , "enum": [
                        "standard-error"
                        ,
                        "lockdown-mode"
                    ]
                }
                ,
                "includeBaseDN": {
                    "description": "The set of base DNs below which composed values may be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "separateMonitorEntryPerTrackedApplication": {
                    "description": "When enabled, separate monitor entries will be included for each application defined in the Global Configuration's tracked-application property.",
                    "type": "boolean"
                }
                ,
                "numWorkerThreads": {
                    "description": "The number of worker threads to use to handle SNMP requests.",
                    "type": "integer"
                }
                ,
                "alwaysMapResponses": {
                    "description": "Indicates whether DNs in response messages containing the target DN should always be remapped back to the source DN. If this is \"false\", then mapping will be performed for a response message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.",
                    "type": "boolean"
                }
                ,
                "retainFilesSparselyByAge": {
                    "description": "Retain some older files to give greater perspective on how monitoring information has changed over time.",
                    "type": "boolean"
                }
                ,
                "preventConflictsWithSoftDeletedEntries": {
                    "description": "Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even if those conflicts only exist in soft-deleted entries.",
                    "type": "boolean"
                }
                ,
                "connectRetryMaxWait": {
                    "description": "The maximum amount of time to wait between attempts to establish a connection to the master agent.",
                    "type": "string"
                }
                ,
                "hostInfo": {
                    "description": "Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and network activity.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "cpu"
                            ,
                            "disk"
                            ,
                            "network"
                        ]
                    }
                }
                ,
                "profileAction": {
                    "description": "Specifies the action that should be taken by the profiler.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "start"
                        ,
                        "stop"
                        ,
                        "cancel"
                    ]
                }
                ,
                "valuePattern": {
                    "description": "Specifies a pattern for constructing the values to use for the target attribute type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numThreads": {
                    "description": "Specifies the number of concurrent threads that should be used to process the search operations.",
                    "type": "integer"
                }
                ,
                "tryLocalBind": {
                    "description": "Indicates whether to attempt the bind in the local server first, or to only send it to the PingOne service.",
                    "type": "boolean"
                }
                ,
                "updateLocalPassword": {
                    "description": "Indicates whether to overwrite the user's local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service.",
                    "type": "boolean"
                }
                ,
                "filter": {
                    "description": "A filter that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "targetDN": {
                    "description": "Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.",
                    "type": "string"
                }
                ,
                "updateInterval": {
                    "description": "Specifies the interval in seconds when referential integrity updates are made.",
                    "type": "string"
                }
                ,
                "includedLocalEntryBaseDN": {
                    "description": "The base DNs for the local users whose authentication attempts may be passed through to the PingOne service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "lowerBound": {
                    "description": "Specifies the lower bound for the numeric value which will be inserted into the search filter.",
                    "type": "integer"
                }
                ,
                "multipleAttributeBehavior": {
                    "description": "The behavior to exhibit if multiple attribute types are specified.",
                    "type": "string"
                    , "enum": [
                        "unique-within-each-attribute"
                        ,
                        "unique-across-all-attributes-including-in-same-entry"
                        ,
                        "unique-across-all-attributes-except-in-same-entry"
                    ]
                }
                ,
                "sanitize": {
                    "description": "Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and search filters. Setting this property to true will redact this information from the monitor files. This should only be used when necessary, as it reduces the information available in the archive and can increase the time to find the source of support issues.",
                    "type": "boolean"
                }
                ,
                "maxSearchResultEntriesToUpdate": {
                    "description": "Specifies the maximum number of entries that should be updated in a search operation. Only search result entries actually returned to the client may have their last access time updated, but because a single search operation may return a very large number of entries, the plugin will only update entries if no more than a specified number of entries are updated.",
                    "type": "integer"
                }
                ,
                "overrideLocalPassword": {
                    "description": "Indicates whether to attempt the authentication in the PingOne service if the local user entry includes a password. This property will only be used if try-local-bind is true.",
                    "type": "boolean"
                }
                ,
                "invokeForInternalOperations": {
                    "description": "Indicates whether the plug-in should be invoked for internal operations.",
                    "type": "boolean"
                }
                ,
                "datetimeFormat": {
                    "description": "Specifies the format of the datetime stored within the entry that determines when data should be purged.",
                    "type": "string"
                    , "enum": [
                        "generalized-time"
                        ,
                        "java-system-time-millis"
                        ,
                        "custom"
                    ]
                }
                ,
                "enableProfilingOnStartup": {
                    "description": "Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.",
                    "type": "boolean"
                }
                ,
                "pollingInterval": {
                    "description": "This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).",
                    "type": "string"
                }
                ,
                "includedLDAPStat": {
                    "description": "Specifies the types of statistics related to LDAP connections and operation processing that should be included in the output.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "active-operations"
                            ,
                            "num-connections"
                            ,
                            "op-count-and-latency"
                            ,
                            "work-queue"
                            ,
                            "ldap-protocol"
                        ]
                    }
                }
                ,
                "updateLocalPasswordDN": {
                    "description": "This is the DN of the user that will be used to overwrite the user's local password if update-local-password is set. The DN put here should be added to 'ignore-changes-by-dn' in the appropriate Sync Source.",
                    "type": "string"
                }
                ,
                "rotationListener": {
                    "description": "A listener that should be notified whenever a log file is rotated out of service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "profileDirectory": {
                    "description": "Specifies the path to the directory where profile information is to be written. This path may be either an absolute path or a path that is relative to the root of the Directory Server instance.",
                    "type": "string"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "OAuthClientSecret": {
                    "description": "Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "OAuthClientSecretPassphraseProvider": {
                    "description": "Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "maxUpdateFrequency": {
                    "description": "Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit the rate of internal write operations processed in the server.",
                    "type": "string"
                }
                ,
                "numDeleteThreads": {
                    "description": "The number of threads used to delete expired entries.",
                    "type": "integer"
                }
                ,
                "passThroughAuthenticationHandler": {
                    "description": "The component used to manage authentication with the external authentication service.",
                    "type": "string"
                }
                ,
                "multipleValuePatternBehavior": {
                    "description": "The behavior to exhibit if the plugin is configured with multiple value patterns.",
                    "type": "string"
                    , "enum": [
                        "use-first-non-rejected-value-pattern-with-non-empty-values-but-may-reject"
                        ,
                        "use-first-non-rejected-value-pattern-with-non-empty-values-and-never-reject"
                        ,
                        "use-first-rejection-or-first-value-pattern-with-non-empty-values"
                        ,
                        "use-all-non-rejected-value-patterns-with-non-empty-values-but-may-reject"
                        ,
                        "use-all-non-rejected-value-patterns-with-non-empty-values-and-never-reject"
                        ,
                        "use-first-rejection-or-all-value-patterns-with-non-empty-values"
                    ]
                }
                ,
                "perApplicationLDAPStats": {
                    "description": "Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.",
                    "type": "string"
                    , "enum": [
                        "aggregate-only"
                        ,
                        "per-application-only"
                    ]
                }
                ,
                "userMappingRemoteJSONField": {
                    "description": "The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the local user entry, as specified in the user-mapping-local-attribute property.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sourceAttribute": {
                    "description": "Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute. Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute type.",
                    "type": "string"
                }
                ,
                "logInterval": {
                    "description": "The duration between statistics collection and logging. A new line is logged to the output for each interval. Setting this value too small can have an impact on performance.",
                    "type": "string"
                }
                ,
                "customDatetimeFormat": {
                    "description": "When the datetime-format property is configured with a value of \"custom\", this specifies the format (using a string compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.",
                    "type": "string"
                }
                ,
                "customTimezone": {
                    "description": "Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The provided value must be accepted by java.util.TimeZone.getTimeZone.",
                    "type": "string"
                }
                ,
                "requestCriteria": {
                    "description": "Specifies a set of request criteria that may be used to indicate whether to apply access time updates for the associated operation.",
                    "type": "string"
                }
                ,
                "initialConnections": {
                    "description": "Specifies the initial number of connections to establish to each external server against which authentication may be attempted.",
                    "type": "integer"
                }
                ,
                "changelogPasswordEncryptionKeyPassphraseProvider": {
                    "description": "A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the \"changelog-password-decryption-key\" property or the \"changelog-password-decryption-key-passphrase-provider\" property) in the Global Sync Configuration in the Data Sync Server.",
                    "type": "string"
                }
                ,
                "targetAttributeExistsDuringInitialPopulationBehavior": {
                    "description": "The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).",
                    "type": "string"
                    , "enum": [
                        "preserve-existing-values"
                        ,
                        "overwrite-existing-values"
                        ,
                        "merge-existing-and-composed-values"
                        ,
                        "reject-existing-values-in-add-but-preserve-in-ldif-import"
                        ,
                        "reject-existing-values-in-add-but-overwrite-in-ldif-import"
                        ,
                        "reject-existing-values-in-add-but-merge-in-ldif-import"
                    ]
                }
                ,
                "updateTargetAttributeBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target attribute.",
                    "type": "string"
                    , "enum": [
                        "always-allow"
                        ,
                        "allow-only-for-non-composed-values"
                        ,
                        "never-allow"
                    ]
                }
                ,
                "sourceAttributeRemovalBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a way that this plugin would no longer generate any composed values for that entry.",
                    "type": "string"
                    , "enum": [
                        "preserve-non-composed-values"
                        ,
                        "preserve-all-values"
                        ,
                        "remove-all-values-but-preserve-all-if-required"
                        ,
                        "remove-all-values-but-preserve-non-composed-if-required"
                    ]
                }
                ,
                "connectionCriteria": {
                    "description": "A reference to connection criteria that will be used to indicate which bind requests should be passed through to the PingOne service.",
                    "type": "string"
                }
                ,
                "generateCollectorFiles": {
                    "description": "Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set to false to prevent unnecessary I/O.",
                    "type": "boolean"
                }
                ,
                "serverInfo": {
                    "description": "Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "entryCacheInfo": {
                    "description": "Specifies the level of detail to include for each entry cache.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "logFile": {
                    "description": "The file name to use for the log files generated by the Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an absolute path.",
                    "type": "string"
                }
                ,
                "logFilePermissions": {
                    "description": "The UNIX permissions of the log files created by this Periodic Stats Logger Plugin.",
                    "type": "string"
                }
                ,
                "histogramFormat": {
                    "description": "The format of the data in the processing time histogram.",
                    "type": "string"
                    , "enum": [
                        "count"
                        ,
                        "aggregate-percentage"
                    ]
                }
                ,
                "sessionTimeout": {
                    "description": "Specifies the maximum amount of time to wait for a session to the master agent to be established.",
                    "type": "string"
                }
                ,
                "invokeGCTimeUtc": {
                    "description": "Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in \"HH:MM\" format, with \"HH\" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC time zone.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "userMappingLocalAttribute": {
                    "description": "The names of the attributes in the local user entry whose values must match the values of the corresponding fields in the PingOne service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeFilter": {
                    "description": "The set of search filters that identify entries for which composed values may be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Plugin.",
                    "type": "string"
                }
                ,
                "filterPrefix": {
                    "description": "Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should contain the entire filter string.",
                    "type": "string"
                }
                ,
                "upperBound": {
                    "description": "Specifies the upper bound for the numeric value which will be inserted into the search filter.",
                    "type": "integer"
                }
                ,
                "includedResourceStat": {
                    "description": "Specifies whether statistics related to resource utilization such as JVM memory.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "memory-utilization"
                        ]
                    }
                }
                ,
                "dnMap": {
                    "description": "Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Plugin",
                    "type": "string"
                }
                ,
                "excludeAttribute": {
                    "description": "Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing the modifiersName and modifyTimestamp values to be updated for that entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "datetimeJSONField": {
                    "description": "The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.",
                    "type": "string"
                }
                ,
                "purgeBehavior": {
                    "description": "Specifies whether to delete expired entries or attribute values. By default entries are deleted.",
                    "type": "string"
                    , "enum": [
                        "delete-entries"
                        ,
                        "subtree-delete-entries"
                        ,
                        "delete-json-attribute-values"
                    ]
                }
                ,
                "gaugeInfo": {
                    "description": "Specifies the level of detail to include for Gauges.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "ldapChangelogInfo": {
                    "description": "Specifies the level of detail to include for the LDAP changelog.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "histogramCategoryBoundary": {
                    "description": "Specifies the boundary values that will be used to separate the processing times into categories. Values should be specified as durations, and all values must be greater than zero.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "authURL": {
                    "description": "Specifies the API endpoint for the PingOne authentication service.",
                    "type": "string"
                }
                ,
                "defaultUserPasswordStorageScheme": {
                    "description": "Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy is to be used to govern them.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scope": {
                    "description": "The scope to use for the search.",
                    "type": "string"
                    , "enum": [
                        "base"
                        ,
                        "one"
                        ,
                        "sub"
                        ,
                        "subordinate-subtree"
                    ]
                }
                ,
                "enableControlMapping": {
                    "description": "Indicates whether DN mapping should be applied to DNs that may be present in specific controls. DN mapping will only be applied for control types which are specifically supported by the DN mapper plugin.",
                    "type": "boolean"
                }
                ,
                "filterSuffix": {
                    "description": "Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should be omitted.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "baseDN": {
                    "description": "Specifies the base DN to use for the searches to perform.",
                    "type": "string"
                }
                ,
                "includeQueueTime": {
                    "description": "Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be available if the work queue is configured to monitor the queue time.",
                    "type": "boolean"
                }
                ,
                "bindDNPattern": {
                    "description": "A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value \"cn={cn},ou=People,dc=example,dc=com\" indicates that the remote bind DN should be constructed from the text \"cn=\" followed by the value of the local entry's cn attribute followed by the text \"ou=People,dc=example,dc=com\". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of \"{seeAlso}\" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.",
                    "type": "string"
                }
                ,
                "maxConnections": {
                    "description": "Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.",
                    "type": "integer"
                }
                ,
                "referralBaseURL": {
                    "description": "Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address, and port to use to communicate with the target server (e.g., \"ldap://server.example.com:389/\").",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "linesBetweenHeader": {
                    "description": "The number of lines to log between logging the header line that summarizes the columns in the table.",
                    "type": "integer"
                }
                ,
                "pluginType": {
                    "description": "Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "startup"
                            ,
                            "shutdown"
                            ,
                            "postconnect"
                            ,
                            "postdisconnect"
                            ,
                            "ldifimport"
                            ,
                            "ldifexport"
                            ,
                            "preparseabandon"
                            ,
                            "preparseadd"
                            ,
                            "preparsebind"
                            ,
                            "preparsecompare"
                            ,
                            "preparsedelete"
                            ,
                            "preparseextended"
                            ,
                            "preparsemodify"
                            ,
                            "preparsemodifydn"
                            ,
                            "preparsesearch"
                            ,
                            "preparseunbind"
                            ,
                            "preoperationadd"
                            ,
                            "preoperationbind"
                            ,
                            "preoperationcompare"
                            ,
                            "preoperationdelete"
                            ,
                            "preoperationextended"
                            ,
                            "preoperationmodify"
                            ,
                            "preoperationmodifydn"
                            ,
                            "preoperationsearch"
                            ,
                            "postoperationabandon"
                            ,
                            "postoperationadd"
                            ,
                            "postoperationbind"
                            ,
                            "postoperationcompare"
                            ,
                            "postoperationdelete"
                            ,
                            "postoperationextended"
                            ,
                            "postoperationmodify"
                            ,
                            "postoperationmodifydn"
                            ,
                            "postoperationsearch"
                            ,
                            "postoperationunbind"
                            ,
                            "preresponseadd"
                            ,
                            "preresponsebind"
                            ,
                            "preresponsecompare"
                            ,
                            "preresponsedelete"
                            ,
                            "preresponseextended"
                            ,
                            "preresponsemodify"
                            ,
                            "preresponsemodifydn"
                            ,
                            "preresponsesearch"
                            ,
                            "postresponseadd"
                            ,
                            "postresponsebind"
                            ,
                            "postresponsecompare"
                            ,
                            "postresponsedelete"
                            ,
                            "postresponseextended"
                            ,
                            "postresponsemodify"
                            ,
                            "postresponsemodifydn"
                            ,
                            "postresponsesearch"
                            ,
                            "postsynchronizationadd"
                            ,
                            "postsynchronizationdelete"
                            ,
                            "postsynchronizationmodify"
                            ,
                            "postsynchronizationmodifydn"
                            ,
                            "searchresultentry"
                            ,
                            "searchresultreference"
                            ,
                            "subordinatemodifydn"
                            ,
                            "intermediateresponse"
                        ]
                    }
                }
                ,
                "additionalUserMappingSCIMFilter": {
                    "description": "An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that corresponds to the local entry. Only the \"eq\", \"sw\", \"and\", and \"or\" filter types may be used.",
                    "type": "string"
                }
                ,
                "logFileFormat": {
                    "description": "Specifies the format to use when logging server statistics.",
                    "type": "string"
                    , "enum": [
                        "csv"
                        ,
                        "json"
                    ]
                }
                ,
                "agentxPort": {
                    "description": "The port number on which the SNMP master agent will be contacted.",
                    "type": "integer"
                }
                ,
                "enableAttributeMapping": {
                    "description": "Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.",
                    "type": "boolean"
                }
                ,
                "defaultAuthPasswordStorageScheme": {
                    "description": "Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy should be used to govern them.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "multiValuedAttributeBehavior": {
                    "description": "The behavior to exhibit for source attributes that have multiple values.",
                    "type": "string"
                    , "enum": [
                        "use-first-value"
                        ,
                        "reject-entries-with-any-multivalued-source-attribute"
                        ,
                        "use-all-values-if-possible-but-reject-if-not"
                        ,
                        "use-all-values-if-possible-but-only-first-value-if-not"
                    ]
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.",
                    "type": "string"
                }
                ,
                "sourceDN": {
                    "description": "Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the source DN must not be equal to the target DN.",
                    "type": "string"
                }
                ,
                "delayPostGC": {
                    "description": "Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection processing, before removing the \"force-gc-starting\" administrative alert, which marks the server as unavailable.",
                    "type": "string"
                }
                ,
                "invokeForFailedBinds": {
                    "description": "Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.",
                    "type": "boolean"
                }
                ,
                "headerPrefixPerColumn": {
                    "description": "This property controls whether the header prefix, which applies to a group of columns, appears at the start of each column header or only the first column in a group.",
                    "type": "boolean"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the PingOne service.",
                    "type": "string"
                }
                ,
                "updatedEntryNoLongerMatchesCriteriaBehavior": {
                    "description": "The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN and filter criteria, but now no longer satisfies that criteria.",
                    "type": "string"
                    , "enum": [
                        "preserve-all-values"
                        ,
                        "preserve-non-composed-values"
                        ,
                        "remove-all-values-but-preserve-all-if-required"
                        ,
                        "remove-all-values-but-preserve-non-composed-if-required"
                    ]
                }
                ,
                "searchBaseDN": {
                    "description": "The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.",
                    "type": "string"
                }
                ,
                "OAuthClientID": {
                    "description": "Specifies the OAuth Client ID used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "append": {
                    "description": "Specifies whether to append to existing log files.",
                    "type": "boolean"
                }
                ,
                "updateSourceAttributeBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any of the value patterns.",
                    "type": "string"
                    , "enum": [
                        "replace-composed-values"
                        ,
                        "replace-all-values"
                        ,
                        "preserve-existing-values"
                    ]
                }
            }
        },
        "plugin-properties": {
            "id": "plugin-properties",
            "description": "Plugin properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:plugin:last-access-time"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:stats-collector"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:internal-search-rate"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:modifiable-password-policy-state"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:seven-bit-clean"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-access-grants"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-gc"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:ping-one-pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:changelog-password-encryption"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:processing-time-histogram"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:search-shutdown"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-stats-logger"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:change-subscription-notification"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:sub-operation-timing"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:third-party"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:encrypt-attribute-values"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:dn-mapper"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:monitor-history"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:referral-on-update"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:simple-to-external-bind"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:snmp-subagent"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:password-policy-import"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:profiler"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-inactive-pingfederate-persistent-sessions"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:composed-attribute"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:ldap-result-code-tracker"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:attribute-mapper"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:delay"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-sessions"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:last-mod"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:pluggable-pass-through-authentication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:referential-integrity"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:plugin:unique-attribute"
                        ]
                    }
                },
                "contextName": {
                    "description": "The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a topology must have a unique SNMP context name.",
                    "type": "string"
                }
                ,
                "numMostExpensivePhasesShown": {
                    "description": "This controls how many of the most expensive phases are included per operation type in the monitor entry.",
                    "type": "integer"
                }
                ,
                "mapAttribute": {
                    "description": "Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the enable-attribute-mapping property has a value of \"true\". Any attributes listed must be defined in the server schema with either the distinguished name syntax or the name and optional UID syntax.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "targetAttribute": {
                    "description": "Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute type must be defined in the server schema and must not be equal to the source attribute type.",
                    "type": "string"
                }
                ,
                "type": {
                    "description": "Specifies the type of attributes to check for value uniqueness.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "localDBBackendInfo": {
                    "description": "Specifies the level of detail to include about the Local DB Backends.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "allowLaxPassThroughAuthenticationPasswords": {
                    "description": "Indicates whether to overwrite the user's local password even if the password used to authenticate to the PingOne service would have failed validation if the user attempted to set it directly.",
                    "type": "boolean"
                }
                ,
                "outputFile": {
                    "description": "The path of an LDIF file that should be created with the results of the search.",
                    "type": "string"
                }
                ,
                "excludeFilter": {
                    "description": "The set of search filters that identify entries for which composed values will not be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "apiURL": {
                    "description": "Specifies the API endpoint for the PingOne web service.",
                    "type": "string"
                }
                ,
                "includedLDAPApplication": {
                    "description": "If statistics should not be included for all applications, this property names the subset of applications that should be included.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "searchFilterPattern": {
                    "description": "A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, \"(mail={uid:ldapFilterEscape}@example.com)\" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before \"@example.com\" in the mail attribute in the external server. Note that the \"ldapFilterEscape\" modifier should almost always be used with attributes specified in the pattern.",
                    "type": "string"
                }
                ,
                "histogramOpType": {
                    "description": "Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control this.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "all"
                            ,
                            "add"
                            ,
                            "bind"
                            ,
                            "compare"
                            ,
                            "delete"
                            ,
                            "extended"
                            ,
                            "modify"
                            ,
                            "modify-dn"
                            ,
                            "search"
                        ]
                    }
                }
                ,
                "pingInterval": {
                    "description": "The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of zero disables the sending of pings by the sub-agent.",
                    "type": "string"
                }
                ,
                "serverAccessMode": {
                    "description": "Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.",
                    "type": "string"
                    , "enum": [
                        "round-robin"
                        ,
                        "failover-on-unavailable"
                        ,
                        "failover-on-any-failure"
                    ]
                }
                ,
                "ignoredPasswordPolicyStateErrorCondition": {
                    "description": "A set of password policy state error conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option can only be used if try-local-bind is true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "temporarily-locked-due-to-failures"
                            ,
                            "permanently-locked-due-to-failures"
                            ,
                            "locked-due-to-idle-interval"
                            ,
                            "locked-due-to-maximum-reset-age"
                            ,
                            "locked-due-to-validation-failure"
                            ,
                            "password-is-expired"
                        ]
                    }
                }
                ,
                "rotationPolicy": {
                    "description": "The rotation policy to use for the Periodic Stats Logger Plugin .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "statusSummaryInfo": {
                    "description": "Specifies the level of detail to include about the status summary monitor entry.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "verbose"
                    ]
                }
                ,
                "peerServerPriorityIndex": {
                    "description": "In a replicated environment, this determines the order in which peer servers should attempt to purge data.",
                    "type": "integer"
                }
                ,
                "agentxAddress": {
                    "description": "The hostname or IP address of the SNMP master agent.",
                    "type": "string"
                }
                ,
                "previousFileExtension": {
                    "description": "An extension that should be appended to the name of an existing output file rather than deleting it. If a file already exists with the full previous file name, then it will be deleted before the current file is renamed to become the previous file.",
                    "type": "string"
                }
                ,
                "environmentID": {
                    "description": "Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.",
                    "type": "string"
                }
                ,
                "delay": {
                    "description": "The delay to inject for operations matching the associated criteria.",
                    "type": "string"
                }
                ,
                "ldapInfo": {
                    "description": "Specifies the level of detail to include about the LDAP connection handlers.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "replicationInfo": {
                    "description": "Specifies the level of detail to include about replication.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "emptyInsteadOfZero": {
                    "description": "This property controls whether a value in the output is shown as empty if the value is zero.",
                    "type": "boolean"
                }
                ,
                "maxUpdatesPerSecond": {
                    "description": "This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.",
                    "type": "integer"
                }
                ,
                "includeAttribute": {
                    "description": "The name of an attribute that should be included in the results. This may include any token which is allowed as a requested attribute in search requests, including the name of an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an object class name preceded with an at symbol (to indicate all attributes associated with that object class), an attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "excludeBaseDN": {
                    "description": "The set of base DNs below which composed values will not be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "delayAfterAlert": {
                    "description": "Specifies the length of time that the Directory Server should wait after sending the \"force-gc-starting\" administrative alert before actually invoking the garbage collection processing.",
                    "type": "string"
                }
                ,
                "operationType": {
                    "description": "Specifies the types of operations that should result in access time updates.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "add"
                            ,
                            "bind"
                            ,
                            "compare"
                            ,
                            "modify"
                            ,
                            "modify-dn"
                            ,
                            "search"
                        ]
                    }
                }
                ,
                "datetimeAttribute": {
                    "description": "The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.",
                    "type": "string"
                }
                ,
                "collectionInterval": {
                    "description": "Some of the calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered, and setting this value too small can have an adverse impact on performance.",
                    "type": "string"
                }
                ,
                "changelogPasswordEncryptionKey": {
                    "description": "A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the \"changelog-password-decryption-key\" property or the \"changelog-password-decryption-key-passphrase-provider\" property) in the Global Sync Configuration in the Data Sync Server.",
                    "type": "string"
                }
                ,
                "invokeGCDayOfWeek": {
                    "description": "Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will run every day at the specified time.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "sunday"
                            ,
                            "monday"
                            ,
                            "tuesday"
                            ,
                            "wednesday"
                            ,
                            "thursday"
                            ,
                            "friday"
                            ,
                            "saturday"
                        ]
                    }
                }
                ,
                "sampleInterval": {
                    "description": "The duration between statistics collections. Setting this value too small can have an impact on performance. This value should be a multiple of collection-interval.",
                    "type": "string"
                }
                ,
                "server": {
                    "description": "Specifies the LDAP external server(s) to which authentication attempts should be forwarded.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "profileSampleInterval": {
                    "description": "Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.",
                    "type": "string"
                }
                ,
                "suppressIfIdle": {
                    "description": "If the server is idle during the specified interval, then do not log any output if this property is set to true. The server is idle if during the interval, no new connections were established, no operations were processed, and no operations are pending.",
                    "type": "boolean"
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.",
                    "type": "string"
                }
                ,
                "updatedEntryNewlyMatchesCriteriaBehavior": {
                    "description": "The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either the base DN or filter criteria, but now do satisfy that criteria.",
                    "type": "string"
                    , "enum": [
                        "preserve-existing-values-without-composing-new-values"
                        ,
                        "preserve-existing-values-or-compose-new-values"
                        ,
                        "preserve-existing-values-and-compose-new-values"
                        ,
                        "compose-new-values-without-preserving-existing-values"
                    ]
                }
                ,
                "enabled": {
                    "description": "Indicates whether the plug-in is enabled for use.",
                    "type": "boolean"
                }
                ,
                "attributeType": {
                    "description": "Specifies the name or OID of an attribute type for which values should be checked to ensure that they are 7-bit clean.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "expirationOffset": {
                    "description": "The duration to wait after the value specified in datetime-attribute (and optionally datetime-json-field) before purging the data.",
                    "type": "string"
                }
                ,
                "retentionPolicy": {
                    "description": "The retention policy to use for the Periodic Stats Logger Plugin .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "loggingErrorBehavior": {
                    "description": "Specifies the behavior that the server should exhibit if an error occurs during logging processing.",
                    "type": "string"
                    , "enum": [
                        "standard-error"
                        ,
                        "lockdown-mode"
                    ]
                }
                ,
                "includeBaseDN": {
                    "description": "The set of base DNs below which composed values may be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "separateMonitorEntryPerTrackedApplication": {
                    "description": "When enabled, separate monitor entries will be included for each application defined in the Global Configuration's tracked-application property.",
                    "type": "boolean"
                }
                ,
                "numWorkerThreads": {
                    "description": "The number of worker threads to use to handle SNMP requests.",
                    "type": "integer"
                }
                ,
                "alwaysMapResponses": {
                    "description": "Indicates whether DNs in response messages containing the target DN should always be remapped back to the source DN. If this is \"false\", then mapping will be performed for a response message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.",
                    "type": "boolean"
                }
                ,
                "retainFilesSparselyByAge": {
                    "description": "Retain some older files to give greater perspective on how monitoring information has changed over time.",
                    "type": "boolean"
                }
                ,
                "preventConflictsWithSoftDeletedEntries": {
                    "description": "Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even if those conflicts only exist in soft-deleted entries.",
                    "type": "boolean"
                }
                ,
                "connectRetryMaxWait": {
                    "description": "The maximum amount of time to wait between attempts to establish a connection to the master agent.",
                    "type": "string"
                }
                ,
                "hostInfo": {
                    "description": "Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and network activity.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "cpu"
                            ,
                            "disk"
                            ,
                            "network"
                        ]
                    }
                }
                ,
                "profileAction": {
                    "description": "Specifies the action that should be taken by the profiler.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "start"
                        ,
                        "stop"
                        ,
                        "cancel"
                    ]
                }
                ,
                "valuePattern": {
                    "description": "Specifies a pattern for constructing the values to use for the target attribute type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "numThreads": {
                    "description": "Specifies the number of concurrent threads that should be used to process the search operations.",
                    "type": "integer"
                }
                ,
                "tryLocalBind": {
                    "description": "Indicates whether to attempt the bind in the local server first, or to only send it to the PingOne service.",
                    "type": "boolean"
                }
                ,
                "updateLocalPassword": {
                    "description": "Indicates whether to overwrite the user's local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service.",
                    "type": "boolean"
                }
                ,
                "filter": {
                    "description": "A filter that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "targetDN": {
                    "description": "Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.",
                    "type": "string"
                }
                ,
                "updateInterval": {
                    "description": "Specifies the interval in seconds when referential integrity updates are made.",
                    "type": "string"
                }
                ,
                "includedLocalEntryBaseDN": {
                    "description": "The base DNs for the local users whose authentication attempts may be passed through to the PingOne service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "lowerBound": {
                    "description": "Specifies the lower bound for the numeric value which will be inserted into the search filter.",
                    "type": "integer"
                }
                ,
                "multipleAttributeBehavior": {
                    "description": "The behavior to exhibit if multiple attribute types are specified.",
                    "type": "string"
                    , "enum": [
                        "unique-within-each-attribute"
                        ,
                        "unique-across-all-attributes-including-in-same-entry"
                        ,
                        "unique-across-all-attributes-except-in-same-entry"
                    ]
                }
                ,
                "sanitize": {
                    "description": "Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and search filters. Setting this property to true will redact this information from the monitor files. This should only be used when necessary, as it reduces the information available in the archive and can increase the time to find the source of support issues.",
                    "type": "boolean"
                }
                ,
                "maxSearchResultEntriesToUpdate": {
                    "description": "Specifies the maximum number of entries that should be updated in a search operation. Only search result entries actually returned to the client may have their last access time updated, but because a single search operation may return a very large number of entries, the plugin will only update entries if no more than a specified number of entries are updated.",
                    "type": "integer"
                }
                ,
                "overrideLocalPassword": {
                    "description": "Indicates whether to attempt the authentication in the PingOne service if the local user entry includes a password. This property will only be used if try-local-bind is true.",
                    "type": "boolean"
                }
                ,
                "invokeForInternalOperations": {
                    "description": "Indicates whether the plug-in should be invoked for internal operations.",
                    "type": "boolean"
                }
                ,
                "datetimeFormat": {
                    "description": "Specifies the format of the datetime stored within the entry that determines when data should be purged.",
                    "type": "string"
                    , "enum": [
                        "generalized-time"
                        ,
                        "java-system-time-millis"
                        ,
                        "custom"
                    ]
                }
                ,
                "enableProfilingOnStartup": {
                    "description": "Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.",
                    "type": "boolean"
                }
                ,
                "pollingInterval": {
                    "description": "This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).",
                    "type": "string"
                }
                ,
                "includedLDAPStat": {
                    "description": "Specifies the types of statistics related to LDAP connections and operation processing that should be included in the output.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "active-operations"
                            ,
                            "num-connections"
                            ,
                            "op-count-and-latency"
                            ,
                            "work-queue"
                            ,
                            "ldap-protocol"
                        ]
                    }
                }
                ,
                "updateLocalPasswordDN": {
                    "description": "This is the DN of the user that will be used to overwrite the user's local password if update-local-password is set. The DN put here should be added to 'ignore-changes-by-dn' in the appropriate Sync Source.",
                    "type": "string"
                }
                ,
                "rotationListener": {
                    "description": "A listener that should be notified whenever a log file is rotated out of service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "profileDirectory": {
                    "description": "Specifies the path to the directory where profile information is to be written. This path may be either an absolute path or a path that is relative to the root of the Directory Server instance.",
                    "type": "string"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "OAuthClientSecret": {
                    "description": "Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "OAuthClientSecretPassphraseProvider": {
                    "description": "Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "maxUpdateFrequency": {
                    "description": "Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit the rate of internal write operations processed in the server.",
                    "type": "string"
                }
                ,
                "numDeleteThreads": {
                    "description": "The number of threads used to delete expired entries.",
                    "type": "integer"
                }
                ,
                "passThroughAuthenticationHandler": {
                    "description": "The component used to manage authentication with the external authentication service.",
                    "type": "string"
                }
                ,
                "multipleValuePatternBehavior": {
                    "description": "The behavior to exhibit if the plugin is configured with multiple value patterns.",
                    "type": "string"
                    , "enum": [
                        "use-first-non-rejected-value-pattern-with-non-empty-values-but-may-reject"
                        ,
                        "use-first-non-rejected-value-pattern-with-non-empty-values-and-never-reject"
                        ,
                        "use-first-rejection-or-first-value-pattern-with-non-empty-values"
                        ,
                        "use-all-non-rejected-value-patterns-with-non-empty-values-but-may-reject"
                        ,
                        "use-all-non-rejected-value-patterns-with-non-empty-values-and-never-reject"
                        ,
                        "use-first-rejection-or-all-value-patterns-with-non-empty-values"
                    ]
                }
                ,
                "perApplicationLDAPStats": {
                    "description": "Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.",
                    "type": "string"
                    , "enum": [
                        "aggregate-only"
                        ,
                        "per-application-only"
                    ]
                }
                ,
                "userMappingRemoteJSONField": {
                    "description": "The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the local user entry, as specified in the user-mapping-local-attribute property.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sourceAttribute": {
                    "description": "Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute. Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute type.",
                    "type": "string"
                }
                ,
                "logInterval": {
                    "description": "The duration between statistics collection and logging. A new line is logged to the output for each interval. Setting this value too small can have an impact on performance.",
                    "type": "string"
                }
                ,
                "customDatetimeFormat": {
                    "description": "When the datetime-format property is configured with a value of \"custom\", this specifies the format (using a string compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.",
                    "type": "string"
                }
                ,
                "customTimezone": {
                    "description": "Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The provided value must be accepted by java.util.TimeZone.getTimeZone.",
                    "type": "string"
                }
                ,
                "requestCriteria": {
                    "description": "Specifies a set of request criteria that may be used to indicate whether to apply access time updates for the associated operation.",
                    "type": "string"
                }
                ,
                "initialConnections": {
                    "description": "Specifies the initial number of connections to establish to each external server against which authentication may be attempted.",
                    "type": "integer"
                }
                ,
                "changelogPasswordEncryptionKeyPassphraseProvider": {
                    "description": "A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the \"changelog-password-decryption-key\" property or the \"changelog-password-decryption-key-passphrase-provider\" property) in the Global Sync Configuration in the Data Sync Server.",
                    "type": "string"
                }
                ,
                "targetAttributeExistsDuringInitialPopulationBehavior": {
                    "description": "The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).",
                    "type": "string"
                    , "enum": [
                        "preserve-existing-values"
                        ,
                        "overwrite-existing-values"
                        ,
                        "merge-existing-and-composed-values"
                        ,
                        "reject-existing-values-in-add-but-preserve-in-ldif-import"
                        ,
                        "reject-existing-values-in-add-but-overwrite-in-ldif-import"
                        ,
                        "reject-existing-values-in-add-but-merge-in-ldif-import"
                    ]
                }
                ,
                "updateTargetAttributeBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target attribute.",
                    "type": "string"
                    , "enum": [
                        "always-allow"
                        ,
                        "allow-only-for-non-composed-values"
                        ,
                        "never-allow"
                    ]
                }
                ,
                "sourceAttributeRemovalBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a way that this plugin would no longer generate any composed values for that entry.",
                    "type": "string"
                    , "enum": [
                        "preserve-non-composed-values"
                        ,
                        "preserve-all-values"
                        ,
                        "remove-all-values-but-preserve-all-if-required"
                        ,
                        "remove-all-values-but-preserve-non-composed-if-required"
                    ]
                }
                ,
                "connectionCriteria": {
                    "description": "A reference to connection criteria that will be used to indicate which bind requests should be passed through to the PingOne service.",
                    "type": "string"
                }
                ,
                "generateCollectorFiles": {
                    "description": "Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set to false to prevent unnecessary I/O.",
                    "type": "boolean"
                }
                ,
                "serverInfo": {
                    "description": "Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "entryCacheInfo": {
                    "description": "Specifies the level of detail to include for each entry cache.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "logFile": {
                    "description": "The file name to use for the log files generated by the Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an absolute path.",
                    "type": "string"
                }
                ,
                "logFilePermissions": {
                    "description": "The UNIX permissions of the log files created by this Periodic Stats Logger Plugin.",
                    "type": "string"
                }
                ,
                "histogramFormat": {
                    "description": "The format of the data in the processing time histogram.",
                    "type": "string"
                    , "enum": [
                        "count"
                        ,
                        "aggregate-percentage"
                    ]
                }
                ,
                "sessionTimeout": {
                    "description": "Specifies the maximum amount of time to wait for a session to the master agent to be established.",
                    "type": "string"
                }
                ,
                "invokeGCTimeUtc": {
                    "description": "Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in \"HH:MM\" format, with \"HH\" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC time zone.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "userMappingLocalAttribute": {
                    "description": "The names of the attributes in the local user entry whose values must match the values of the corresponding fields in the PingOne service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeFilter": {
                    "description": "The set of search filters that identify entries for which composed values may be generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Plugin.",
                    "type": "string"
                }
                ,
                "filterPrefix": {
                    "description": "Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should contain the entire filter string.",
                    "type": "string"
                }
                ,
                "upperBound": {
                    "description": "Specifies the upper bound for the numeric value which will be inserted into the search filter.",
                    "type": "integer"
                }
                ,
                "includedResourceStat": {
                    "description": "Specifies whether statistics related to resource utilization such as JVM memory.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "memory-utilization"
                        ]
                    }
                }
                ,
                "dnMap": {
                    "description": "Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Plugin",
                    "type": "string"
                }
                ,
                "excludeAttribute": {
                    "description": "Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing the modifiersName and modifyTimestamp values to be updated for that entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "datetimeJSONField": {
                    "description": "The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.",
                    "type": "string"
                }
                ,
                "purgeBehavior": {
                    "description": "Specifies whether to delete expired entries or attribute values. By default entries are deleted.",
                    "type": "string"
                    , "enum": [
                        "delete-entries"
                        ,
                        "subtree-delete-entries"
                        ,
                        "delete-json-attribute-values"
                    ]
                }
                ,
                "gaugeInfo": {
                    "description": "Specifies the level of detail to include for Gauges.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                    ]
                }
                ,
                "ldapChangelogInfo": {
                    "description": "Specifies the level of detail to include for the LDAP changelog.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "basic"
                        ,
                        "extended"
                        ,
                        "verbose"
                    ]
                }
                ,
                "histogramCategoryBoundary": {
                    "description": "Specifies the boundary values that will be used to separate the processing times into categories. Values should be specified as durations, and all values must be greater than zero.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "authURL": {
                    "description": "Specifies the API endpoint for the PingOne authentication service.",
                    "type": "string"
                }
                ,
                "defaultUserPasswordStorageScheme": {
                    "description": "Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy is to be used to govern them.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scope": {
                    "description": "The scope to use for the search.",
                    "type": "string"
                    , "enum": [
                        "base"
                        ,
                        "one"
                        ,
                        "sub"
                        ,
                        "subordinate-subtree"
                    ]
                }
                ,
                "enableControlMapping": {
                    "description": "Indicates whether DN mapping should be applied to DNs that may be present in specific controls. DN mapping will only be applied for control types which are specifically supported by the DN mapper plugin.",
                    "type": "boolean"
                }
                ,
                "filterSuffix": {
                    "description": "Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should be omitted.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "baseDN": {
                    "description": "Specifies the base DN to use for the searches to perform.",
                    "type": "string"
                }
                ,
                "includeQueueTime": {
                    "description": "Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be available if the work queue is configured to monitor the queue time.",
                    "type": "boolean"
                }
                ,
                "bindDNPattern": {
                    "description": "A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value \"cn={cn},ou=People,dc=example,dc=com\" indicates that the remote bind DN should be constructed from the text \"cn=\" followed by the value of the local entry's cn attribute followed by the text \"ou=People,dc=example,dc=com\". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of \"{seeAlso}\" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.",
                    "type": "string"
                }
                ,
                "maxConnections": {
                    "description": "Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.",
                    "type": "integer"
                }
                ,
                "referralBaseURL": {
                    "description": "Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address, and port to use to communicate with the target server (e.g., \"ldap://server.example.com:389/\").",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "linesBetweenHeader": {
                    "description": "The number of lines to log between logging the header line that summarizes the columns in the table.",
                    "type": "integer"
                }
                ,
                "pluginType": {
                    "description": "Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "startup"
                            ,
                            "shutdown"
                            ,
                            "postconnect"
                            ,
                            "postdisconnect"
                            ,
                            "ldifimport"
                            ,
                            "ldifexport"
                            ,
                            "preparseabandon"
                            ,
                            "preparseadd"
                            ,
                            "preparsebind"
                            ,
                            "preparsecompare"
                            ,
                            "preparsedelete"
                            ,
                            "preparseextended"
                            ,
                            "preparsemodify"
                            ,
                            "preparsemodifydn"
                            ,
                            "preparsesearch"
                            ,
                            "preparseunbind"
                            ,
                            "preoperationadd"
                            ,
                            "preoperationbind"
                            ,
                            "preoperationcompare"
                            ,
                            "preoperationdelete"
                            ,
                            "preoperationextended"
                            ,
                            "preoperationmodify"
                            ,
                            "preoperationmodifydn"
                            ,
                            "preoperationsearch"
                            ,
                            "postoperationabandon"
                            ,
                            "postoperationadd"
                            ,
                            "postoperationbind"
                            ,
                            "postoperationcompare"
                            ,
                            "postoperationdelete"
                            ,
                            "postoperationextended"
                            ,
                            "postoperationmodify"
                            ,
                            "postoperationmodifydn"
                            ,
                            "postoperationsearch"
                            ,
                            "postoperationunbind"
                            ,
                            "preresponseadd"
                            ,
                            "preresponsebind"
                            ,
                            "preresponsecompare"
                            ,
                            "preresponsedelete"
                            ,
                            "preresponseextended"
                            ,
                            "preresponsemodify"
                            ,
                            "preresponsemodifydn"
                            ,
                            "preresponsesearch"
                            ,
                            "postresponseadd"
                            ,
                            "postresponsebind"
                            ,
                            "postresponsecompare"
                            ,
                            "postresponsedelete"
                            ,
                            "postresponseextended"
                            ,
                            "postresponsemodify"
                            ,
                            "postresponsemodifydn"
                            ,
                            "postresponsesearch"
                            ,
                            "postsynchronizationadd"
                            ,
                            "postsynchronizationdelete"
                            ,
                            "postsynchronizationmodify"
                            ,
                            "postsynchronizationmodifydn"
                            ,
                            "searchresultentry"
                            ,
                            "searchresultreference"
                            ,
                            "subordinatemodifydn"
                            ,
                            "intermediateresponse"
                        ]
                    }
                }
                ,
                "additionalUserMappingSCIMFilter": {
                    "description": "An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that corresponds to the local entry. Only the \"eq\", \"sw\", \"and\", and \"or\" filter types may be used.",
                    "type": "string"
                }
                ,
                "logFileFormat": {
                    "description": "Specifies the format to use when logging server statistics.",
                    "type": "string"
                    , "enum": [
                        "csv"
                        ,
                        "json"
                    ]
                }
                ,
                "agentxPort": {
                    "description": "The port number on which the SNMP master agent will be contacted.",
                    "type": "integer"
                }
                ,
                "enableAttributeMapping": {
                    "description": "Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.",
                    "type": "boolean"
                }
                ,
                "defaultAuthPasswordStorageScheme": {
                    "description": "Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy should be used to govern them.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "multiValuedAttributeBehavior": {
                    "description": "The behavior to exhibit for source attributes that have multiple values.",
                    "type": "string"
                    , "enum": [
                        "use-first-value"
                        ,
                        "reject-entries-with-any-multivalued-source-attribute"
                        ,
                        "use-all-values-if-possible-but-reject-if-not"
                        ,
                        "use-all-values-if-possible-but-only-first-value-if-not"
                    ]
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.",
                    "type": "string"
                }
                ,
                "sourceDN": {
                    "description": "Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the source DN must not be equal to the target DN.",
                    "type": "string"
                }
                ,
                "delayPostGC": {
                    "description": "Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection processing, before removing the \"force-gc-starting\" administrative alert, which marks the server as unavailable.",
                    "type": "string"
                }
                ,
                "invokeForFailedBinds": {
                    "description": "Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.",
                    "type": "boolean"
                }
                ,
                "headerPrefixPerColumn": {
                    "description": "This property controls whether the header prefix, which applies to a group of columns, appears at the start of each column header or only the first column in a group.",
                    "type": "boolean"
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the PingOne service.",
                    "type": "string"
                }
                ,
                "updatedEntryNoLongerMatchesCriteriaBehavior": {
                    "description": "The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN and filter criteria, but now no longer satisfies that criteria.",
                    "type": "string"
                    , "enum": [
                        "preserve-all-values"
                        ,
                        "preserve-non-composed-values"
                        ,
                        "remove-all-values-but-preserve-all-if-required"
                        ,
                        "remove-all-values-but-preserve-non-composed-if-required"
                    ]
                }
                ,
                "searchBaseDN": {
                    "description": "The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.",
                    "type": "string"
                }
                ,
                "OAuthClientID": {
                    "description": "Specifies the OAuth Client ID used to authenticate connections to the PingOne API.",
                    "type": "string"
                }
                ,
                "append": {
                    "description": "Specifies whether to append to existing log files.",
                    "type": "boolean"
                }
                ,
                "updateSourceAttributeBehavior": {
                    "description": "The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any of the value patterns.",
                    "type": "string"
                    , "enum": [
                        "replace-composed-values"
                        ,
                        "replace-all-values"
                        ,
                        "preserve-existing-values"
                    ]
                }
            }
        }
        ,
        "custom-logged-stats-list-response": {
            "id": "custom-logged-stats-list-response",
            "description": "Custom Logged Stats list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "custom-logged-stats-response"
                    }
                }
            }
        },
        "add-custom-logged-stats-request": {
            "id": "add-custom-logged-stats-request",
            "description": "A Custom Logged Stats resource request",
            "required": [
                "statsName"
            ],
            "properties": {
                "statsName": {
                    "type": "string",
                    "description": "Name of the new Custom Logged Stats"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:custom-logged-stats"
                        ]
                    }
                },
                "divideValueBy": {
                    "description": "An optional floating point value that can be used to scale the resulting value.",
                    "type": "string"
                }
                ,
                "divideValueByAttribute": {
                    "description": "An optional property that can scale the resulting value by another attribute in the monitored entry.",
                    "type": "string"
                }
                ,
                "monitorObjectclass": {
                    "description": "The objectclass name of the monitor entries to examine for generating these statistics.",
                    "type": "string"
                }
                ,
                "regexPattern": {
                    "description": "An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the attribute being monitored.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Custom Logged Stats",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Custom Logged Stats object is enabled.",
                    "type": "boolean"
                }
                ,
                "attributeToLog": {
                    "description": "Specifies the attributes on the monitor entries that should be included in the output.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "headerPrefix": {
                    "description": "An optional prefix that is included in the header before the column name.",
                    "type": "string"
                }
                ,
                "statisticType": {
                    "description": "Specifies the type of statistic to include in the output for each monitored attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "raw"
                            ,
                            "counter"
                            ,
                            "average"
                            ,
                            "minimum"
                            ,
                            "maximum"
                        ]
                    }
                }
                ,
                "decimalFormat": {
                    "description": "This provides a way to format the monitored attribute value in the output to control the precision for instance.",
                    "type": "string"
                }
                ,
                "headerPrefixAttribute": {
                    "description": "An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.",
                    "type": "string"
                }
                ,
                "regexReplacement": {
                    "description": "An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value of the attribute being monitored.",
                    "type": "string"
                }
                ,
                "nonZeroImpliesNotIdle": {
                    "description": "If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an interval is considered \"idle\" by the Periodic Stats Logger.",
                    "type": "boolean"
                }
                ,
                "includeFilter": {
                    "description": "An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.",
                    "type": "string"
                }
                ,
                "columnName": {
                    "description": "Optionally, specifies an explicit name for each column header instead of having these names automatically generated from the monitored attribute name.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "custom-logged-stats-response": {
            "id": "custom-logged-stats-response",
            "description": "A Custom Logged Stats resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:custom-logged-stats"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Custom Logged Stats"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "divideValueBy": {
                    "description": "An optional floating point value that can be used to scale the resulting value.",
                    "type": "string"
                }
                ,
                "divideValueByAttribute": {
                    "description": "An optional property that can scale the resulting value by another attribute in the monitored entry.",
                    "type": "string"
                }
                ,
                "monitorObjectclass": {
                    "description": "The objectclass name of the monitor entries to examine for generating these statistics.",
                    "type": "string"
                }
                ,
                "regexPattern": {
                    "description": "An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the attribute being monitored.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Custom Logged Stats",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Custom Logged Stats object is enabled.",
                    "type": "boolean"
                }
                ,
                "attributeToLog": {
                    "description": "Specifies the attributes on the monitor entries that should be included in the output.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "headerPrefix": {
                    "description": "An optional prefix that is included in the header before the column name.",
                    "type": "string"
                }
                ,
                "statisticType": {
                    "description": "Specifies the type of statistic to include in the output for each monitored attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "raw"
                            ,
                            "counter"
                            ,
                            "average"
                            ,
                            "minimum"
                            ,
                            "maximum"
                        ]
                    }
                }
                ,
                "decimalFormat": {
                    "description": "This provides a way to format the monitored attribute value in the output to control the precision for instance.",
                    "type": "string"
                }
                ,
                "headerPrefixAttribute": {
                    "description": "An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.",
                    "type": "string"
                }
                ,
                "regexReplacement": {
                    "description": "An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value of the attribute being monitored.",
                    "type": "string"
                }
                ,
                "nonZeroImpliesNotIdle": {
                    "description": "If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an interval is considered \"idle\" by the Periodic Stats Logger.",
                    "type": "boolean"
                }
                ,
                "includeFilter": {
                    "description": "An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.",
                    "type": "string"
                }
                ,
                "columnName": {
                    "description": "Optionally, specifies an explicit name for each column header instead of having these names automatically generated from the monitored attribute name.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "custom-logged-stats-properties": {
            "id": "custom-logged-stats-properties",
            "description": "Custom Logged Stats properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:custom-logged-stats"
                        ]
                    }
                },
                "divideValueBy": {
                    "description": "An optional floating point value that can be used to scale the resulting value.",
                    "type": "string"
                }
                ,
                "divideValueByAttribute": {
                    "description": "An optional property that can scale the resulting value by another attribute in the monitored entry.",
                    "type": "string"
                }
                ,
                "monitorObjectclass": {
                    "description": "The objectclass name of the monitor entries to examine for generating these statistics.",
                    "type": "string"
                }
                ,
                "regexPattern": {
                    "description": "An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the attribute being monitored.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Custom Logged Stats",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Custom Logged Stats object is enabled.",
                    "type": "boolean"
                }
                ,
                "attributeToLog": {
                    "description": "Specifies the attributes on the monitor entries that should be included in the output.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "headerPrefix": {
                    "description": "An optional prefix that is included in the header before the column name.",
                    "type": "string"
                }
                ,
                "statisticType": {
                    "description": "Specifies the type of statistic to include in the output for each monitored attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "raw"
                            ,
                            "counter"
                            ,
                            "average"
                            ,
                            "minimum"
                            ,
                            "maximum"
                        ]
                    }
                }
                ,
                "decimalFormat": {
                    "description": "This provides a way to format the monitored attribute value in the output to control the precision for instance.",
                    "type": "string"
                }
                ,
                "headerPrefixAttribute": {
                    "description": "An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.",
                    "type": "string"
                }
                ,
                "regexReplacement": {
                    "description": "An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value of the attribute being monitored.",
                    "type": "string"
                }
                ,
                "nonZeroImpliesNotIdle": {
                    "description": "If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an interval is considered \"idle\" by the Periodic Stats Logger.",
                    "type": "boolean"
                }
                ,
                "includeFilter": {
                    "description": "An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.",
                    "type": "string"
                }
                ,
                "columnName": {
                    "description": "Optionally, specifies an explicit name for each column header instead of having these names automatically generated from the monitored attribute name.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
