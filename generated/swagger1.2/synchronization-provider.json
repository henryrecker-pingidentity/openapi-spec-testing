{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/synchronization-providers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Synchronization Provider objects",
                    "type": "synchronization-provider-list-response",
                    "nickname": "list-synchronization-providers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                }
            ]
        },
        {
            "path": "/synchronization-providers/{synchronization-provider-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Synchronization Provider",
                    "type": "synchronization-provider-response",
                    "nickname": "get-synchronization-provider",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "synchronization-provider-name",
                          "description": "Name of the Synchronization Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Synchronization Provider by name, replacing any attributes specified in the request body",
                    "type": "synchronization-provider-response",
                    "nickname": "put-synchronization-provider",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "synchronization-provider-name",
                          "description": "Name of the Synchronization Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Synchronization Provider attributes to update",
                            "name": "synchronization-provider-properties",
                            "type": "synchronization-provider-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Synchronization Provider by name, using a SCIM patch request",
                    "type": "synchronization-provider-response",
                    "nickname": "patch-synchronization-provider",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "synchronization-provider-name",
                          "description": "Name of the Synchronization Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Synchronization Provider",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/synchronization-providers/{synchronization-provider-name}/replication-server",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns the Replication Server",
                    "type": "replication-server-response",
                    "nickname": "get-replication-server",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "synchronization-provider-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update the Replication Server, replacing any attributes specified in the request body",
                    "type": "replication-server-response",
                    "nickname": "put-replication-server",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "synchronization-provider-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Replication Server attributes to update",
                            "name": "replication-server-properties",
                            "type": "replication-server-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Replication Server by name, using a SCIM patch request",
                    "type": "replication-server-response",
                    "nickname": "patch-replication-server",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "synchronization-provider-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Replication Server",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/synchronization-providers/{synchronization-provider-name}/replication-domains",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Replication Domain objects",
                    "type": "replication-domain-list-response",
                    "nickname": "list-replication-domains",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "synchronization-provider-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                }
            ]
        },
        {
            "path": "/synchronization-providers/{synchronization-provider-name}/replication-domains/{replication-domain-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Replication Domain",
                    "type": "replication-domain-response",
                    "nickname": "get-replication-domain",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "synchronization-provider-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "replication-domain-name",
                          "description": "Name of the Replication Domain",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Replication Domain by name, replacing any attributes specified in the request body",
                    "type": "replication-domain-response",
                    "nickname": "put-replication-domain",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "synchronization-provider-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "replication-domain-name",
                          "description": "Name of the Replication Domain",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Replication Domain attributes to update",
                            "name": "replication-domain-properties",
                            "type": "replication-domain-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Replication Domain by name, using a SCIM patch request",
                    "type": "replication-domain-response",
                    "nickname": "patch-replication-domain",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "synchronization-provider-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "replication-domain-name",
                          "description": "Name of the Replication Domain",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Replication Domain",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "synchronization-provider-list-response": {
            "id": "synchronization-provider-list-response",
            "description": "Synchronization Provider list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "synchronization-provider-response"
                    }
                }
            }
        },
        "add-synchronization-provider-request": {
            "id": "add-synchronization-provider-request",
            "description": "A Synchronization Provider resource request",
            "required": [
                "providerName"
            ],
            "properties": {
                "providerName": {
                    "type": "string",
                    "description": "Name of the new Synchronization Provider"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:replication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:custom"
                        ]
                    }
                },
                "numUpdateReplayThreads": {
                    "description": "Specifies the number of update replay threads.",
                    "type": "integer"
                }
                ,
                "description": {
                    "description": "A description for this Synchronization Provider",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Synchronization Provider is enabled for use.",
                    "type": "boolean"
                }
            }
        },
        "synchronization-provider-response": {
            "id": "synchronization-provider-response",
            "description": "A Synchronization Provider resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:replication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:custom"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Synchronization Provider"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "numUpdateReplayThreads": {
                    "description": "Specifies the number of update replay threads.",
                    "type": "integer"
                }
                ,
                "description": {
                    "description": "A description for this Synchronization Provider",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Synchronization Provider is enabled for use.",
                    "type": "boolean"
                }
            }
        },
        "synchronization-provider-properties": {
            "id": "synchronization-provider-properties",
            "description": "Synchronization Provider properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:replication"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:custom"
                        ]
                    }
                },
                "numUpdateReplayThreads": {
                    "description": "Specifies the number of update replay threads.",
                    "type": "integer"
                }
                ,
                "description": {
                    "description": "A description for this Synchronization Provider",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Synchronization Provider is enabled for use.",
                    "type": "boolean"
                }
            }
        }
        ,
        "replication-server-response": {
            "id": "replication-server-response",
            "description": "A Replication Server resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:replication-server"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Replication Server"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "jeProperty": {
                    "description": "Specifies the database and environment properties for the Berkeley DB Java Edition database for the replication changelog.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "replicationServerID": {
                    "description": "Specifies a unique identifier for the Replication Server.",
                    "type": "integer"
                }
                ,
                "heartbeatInterval": {
                    "description": "Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.",
                    "type": "string"
                }
                ,
                "replicationPurgeDelay": {
                    "description": "Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting target-database-size can allow additional changes to be maintained up to the configured size on disk.",
                    "type": "string"
                }
                ,
                "listenOnAllAddresses": {
                    "description": "Indicates whether the Replication Server should listen on all addresses for this host. If set to FALSE, then the Replication Server will listen only to the address resolved from the hostname provided.",
                    "type": "boolean"
                }
                ,
                "replicationDBDirectory": {
                    "description": "The path where the Replication Server stores all persistent information.",
                    "type": "string"
                }
                ,
                "targetDatabaseSize": {
                    "description": "The replication changelog database is allowed to grow up to this size even if changes are older than the configured replication-purge-delay.",
                    "type": "string"
                }
                ,
                "restrictedDomain": {
                    "description": "Specifies the base DN of domains that are only replicated between server instances that belong to the same replication set.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "replicationPort": {
                    "description": "The port on which this Replication Server waits for connections from other Replication Servers or Directory Server instances.",
                    "type": "integer"
                }
                ,
                "compressionCriteria": {
                    "description": "Specifies when the replication traffic should be compressed.",
                    "type": "string"
                    , "enum": [
                        "always"
                        ,
                        "remote"
                        ,
                        "never"
                    ]
                }
                ,
                "gatewayPriority": {
                    "description": "Specifies the gateway priority of the Replication Server in the current location.",
                    "type": "integer"
                }
                ,
                "remoteMonitorUpdateInterval": {
                    "description": "Specifies the duration that topology monitor data will be cached before it is requested again from a remote server.",
                    "type": "string"
                }
            }
        },
        "replication-server-properties": {
            "id": "replication-server-properties",
            "description": "Replication Server properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:replication-server"
                        ]
                    }
                },
                "jeProperty": {
                    "description": "Specifies the database and environment properties for the Berkeley DB Java Edition database for the replication changelog.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "replicationServerID": {
                    "description": "Specifies a unique identifier for the Replication Server.",
                    "type": "integer"
                }
                ,
                "heartbeatInterval": {
                    "description": "Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.",
                    "type": "string"
                }
                ,
                "replicationPurgeDelay": {
                    "description": "Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting target-database-size can allow additional changes to be maintained up to the configured size on disk.",
                    "type": "string"
                }
                ,
                "listenOnAllAddresses": {
                    "description": "Indicates whether the Replication Server should listen on all addresses for this host. If set to FALSE, then the Replication Server will listen only to the address resolved from the hostname provided.",
                    "type": "boolean"
                }
                ,
                "replicationDBDirectory": {
                    "description": "The path where the Replication Server stores all persistent information.",
                    "type": "string"
                }
                ,
                "targetDatabaseSize": {
                    "description": "The replication changelog database is allowed to grow up to this size even if changes are older than the configured replication-purge-delay.",
                    "type": "string"
                }
                ,
                "restrictedDomain": {
                    "description": "Specifies the base DN of domains that are only replicated between server instances that belong to the same replication set.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "replicationPort": {
                    "description": "The port on which this Replication Server waits for connections from other Replication Servers or Directory Server instances.",
                    "type": "integer"
                }
                ,
                "compressionCriteria": {
                    "description": "Specifies when the replication traffic should be compressed.",
                    "type": "string"
                    , "enum": [
                        "always"
                        ,
                        "remote"
                        ,
                        "never"
                    ]
                }
                ,
                "gatewayPriority": {
                    "description": "Specifies the gateway priority of the Replication Server in the current location.",
                    "type": "integer"
                }
                ,
                "remoteMonitorUpdateInterval": {
                    "description": "Specifies the duration that topology monitor data will be cached before it is requested again from a remote server.",
                    "type": "string"
                }
            }
        }
        ,
        "replication-domain-list-response": {
            "id": "replication-domain-list-response",
            "description": "Replication Domain list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "replication-domain-response"
                    }
                }
            }
        },
        "add-replication-domain-request": {
            "id": "add-replication-domain-request",
            "description": "A Replication Domain resource request",
            "required": [
                "domainName"
            ],
            "properties": {
                "domainName": {
                    "type": "string",
                    "description": "Name of the new Replication Domain"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:replication-domain"
                        ]
                    }
                },
                "heartbeatInterval": {
                    "description": "Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.",
                    "type": "string"
                }
                ,
                "windowSize": {
                    "description": "Specifies the maximum number of replication updates the Directory Server can have outstanding from the Replication Server.",
                    "type": "integer"
                }
                ,
                "restricted": {
                    "description": "When set to true, changes are only replicated with server instances that belong to the same replication set.",
                    "type": "boolean"
                }
                ,
                "dependentOpsReplayFailureWaitTime": {
                    "description": "Defines how long to wait before retrying certain operations, specifically operations that might have failed because they depend on an operation from a different server that has not yet replicated to this instance.",
                    "type": "string"
                }
                ,
                "syncHistPurgeDelay": {
                    "description": "The time in seconds after which historical information used in replication conflict resolution is purged. The information is removed from entries when they are modified after the purge delay has elapsed.",
                    "type": "string"
                }
                ,
                "onReplayFailureWaitForDependentOpsTimeout": {
                    "description": "Defines the maximum time to retry a failed operation. An operation will be retried only if it appears that the failure might be dependent on an earlier operation from a different server that hasn't replicated yet. The frequency of the retry is determined by the dependent-ops-replay-failure-wait-time property.",
                    "type": "string"
                }
                ,
                "baseDN": {
                    "description": "Specifies the base DN of the replicated data.",
                    "type": "string"
                }
                ,
                "serverID": {
                    "description": "Specifies a unique identifier for the Directory Server within the Replication Domain.",
                    "type": "integer"
                }
            }
        },
        "replication-domain-response": {
            "id": "replication-domain-response",
            "description": "A Replication Domain resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:replication-domain"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Replication Domain"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "heartbeatInterval": {
                    "description": "Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.",
                    "type": "string"
                }
                ,
                "windowSize": {
                    "description": "Specifies the maximum number of replication updates the Directory Server can have outstanding from the Replication Server.",
                    "type": "integer"
                }
                ,
                "restricted": {
                    "description": "When set to true, changes are only replicated with server instances that belong to the same replication set.",
                    "type": "boolean"
                }
                ,
                "dependentOpsReplayFailureWaitTime": {
                    "description": "Defines how long to wait before retrying certain operations, specifically operations that might have failed because they depend on an operation from a different server that has not yet replicated to this instance.",
                    "type": "string"
                }
                ,
                "syncHistPurgeDelay": {
                    "description": "The time in seconds after which historical information used in replication conflict resolution is purged. The information is removed from entries when they are modified after the purge delay has elapsed.",
                    "type": "string"
                }
                ,
                "onReplayFailureWaitForDependentOpsTimeout": {
                    "description": "Defines the maximum time to retry a failed operation. An operation will be retried only if it appears that the failure might be dependent on an earlier operation from a different server that hasn't replicated yet. The frequency of the retry is determined by the dependent-ops-replay-failure-wait-time property.",
                    "type": "string"
                }
                ,
                "baseDN": {
                    "description": "Specifies the base DN of the replicated data.",
                    "type": "string"
                }
                ,
                "serverID": {
                    "description": "Specifies a unique identifier for the Directory Server within the Replication Domain.",
                    "type": "integer"
                }
            }
        },
        "replication-domain-properties": {
            "id": "replication-domain-properties",
            "description": "Replication Domain properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:replication-domain"
                        ]
                    }
                },
                "heartbeatInterval": {
                    "description": "Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.",
                    "type": "string"
                }
                ,
                "windowSize": {
                    "description": "Specifies the maximum number of replication updates the Directory Server can have outstanding from the Replication Server.",
                    "type": "integer"
                }
                ,
                "restricted": {
                    "description": "When set to true, changes are only replicated with server instances that belong to the same replication set.",
                    "type": "boolean"
                }
                ,
                "dependentOpsReplayFailureWaitTime": {
                    "description": "Defines how long to wait before retrying certain operations, specifically operations that might have failed because they depend on an operation from a different server that has not yet replicated to this instance.",
                    "type": "string"
                }
                ,
                "syncHistPurgeDelay": {
                    "description": "The time in seconds after which historical information used in replication conflict resolution is purged. The information is removed from entries when they are modified after the purge delay has elapsed.",
                    "type": "string"
                }
                ,
                "onReplayFailureWaitForDependentOpsTimeout": {
                    "description": "Defines the maximum time to retry a failed operation. An operation will be retried only if it appears that the failure might be dependent on an earlier operation from a different server that hasn't replicated yet. The frequency of the retry is determined by the dependent-ops-replay-failure-wait-time property.",
                    "type": "string"
                }
                ,
                "baseDN": {
                    "description": "Specifies the base DN of the replicated data.",
                    "type": "string"
                }
                ,
                "serverID": {
                    "description": "Specifies a unique identifier for the Directory Server within the Replication Domain.",
                    "type": "integer"
                }
            }
        }
    }
}
