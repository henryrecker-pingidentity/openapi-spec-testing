{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/sasl-mechanism-handlers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all SASL Mechanism Handler objects",
                    "type": "sasl-mechanism-handler-list-response",
                    "nickname": "list-sasl-mechanism-handlers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new SASL Mechanism Handler to the config",
                    "nickname": "add-sasl-mechanism-handler",
                    "type": "sasl-mechanism-handler-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SASL Mechanism Handler to add",
                            "name": "add-sasl-mechanism-handler-request",
                            "type": "add-sasl-mechanism-handler-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/sasl-mechanism-handlers/{sasl-mechanism-handler-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single SASL Mechanism Handler",
                    "type": "sasl-mechanism-handler-response",
                    "nickname": "get-sasl-mechanism-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "sasl-mechanism-handler-name",
                          "description": "Name of the SASL Mechanism Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing SASL Mechanism Handler by name, replacing any attributes specified in the request body",
                    "type": "sasl-mechanism-handler-response",
                    "nickname": "put-sasl-mechanism-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "sasl-mechanism-handler-name",
                          "description": "Name of the SASL Mechanism Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SASL Mechanism Handler attributes to update",
                            "name": "sasl-mechanism-handler-properties",
                            "type": "sasl-mechanism-handler-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing SASL Mechanism Handler by name, using a SCIM patch request",
                    "type": "sasl-mechanism-handler-response",
                    "nickname": "patch-sasl-mechanism-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "sasl-mechanism-handler-name",
                          "description": "Name of the SASL Mechanism Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the SASL Mechanism Handler",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a SASL Mechanism Handler",
                    "nickname": "delete-sasl-mechanism-handler",
                    "parameters": [
                        {
                          "name": "sasl-mechanism-handler-name",
                          "description": "Name of the SASL Mechanism Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "sasl-mechanism-handler-list-response": {
            "id": "sasl-mechanism-handler-list-response",
            "description": "SASL Mechanism Handler list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "sasl-mechanism-handler-response"
                    }
                }
            }
        },
        "add-sasl-mechanism-handler-request": {
            "id": "add-sasl-mechanism-handler-request",
            "description": "A SASL Mechanism Handler resource request",
            "required": [
                "handlerName"
            ],
            "properties": {
                "handlerName": {
                    "type": "string",
                    "description": "Name of the new SASL Mechanism Handler"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-ms-chap-v2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-totp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-yubikey-otp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:external"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:digest-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:plain"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-delivered-otp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-external-auth"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:anonymous"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:cram-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:oauth-bearer"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-certificate-plus-password"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:gssapi"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:third-party"
                        ]
                    }
                },
                "certificateAttribute": {
                    "description": "Specifies the name of the attribute to hold user certificates.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.",
                    "type": "string"
                }
                ,
                "enableDebug": {
                    "description": "Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard output, which should be captured in the server.out log file.",
                    "type": "boolean"
                }
                ,
                "requireBothAccessTokenAndIDToken": {
                    "description": "Indicates whether bind requests will be required to have both an OAuth access token (in the \"auth\" element of the bind request) and an OpenID Connect ID token (in the \"pingidentityidtoken\" element of the bind request).",
                    "type": "boolean"
                }
                ,
                "jaasConfigFile": {
                    "description": "Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the information that the JVM should use for Kerberos processing.",
                    "type": "string"
                }
                ,
                "keytab": {
                    "description": "Specifies the keytab file that should be used for Kerberos processing.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this SASL Mechanism Handler",
                    "type": "string"
                }
                ,
                "adjacentIntervalsToCheck": {
                    "description": "The number of adjacent time intervals (both before and after the current time) that should be checked when performing authentication.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the SASL mechanism handler is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "certificateMapper": {
                    "description": "Specifies the name of the certificate mapper that should be used to match client certificates to user entries.",
                    "type": "string"
                }
                ,
                "requireStaticPassword": {
                    "description": "Indicates whether to require a static password (as might be held in the userPassword attribute, or whatever password attribute is defined in the password policy governing the user) in addition to the one-time password.",
                    "type": "boolean"
                }
                ,
                "allowNullServerFqdn": {
                    "description": "Specifies whether or not to allow a null value for the server-fqdn.",
                    "type": "boolean"
                }
                ,
                "keyManagerProvider": {
                    "description": "Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.",
                    "type": "string"
                }
                ,
                "serverFqdn": {
                    "description": "Specifies the DNS-resolvable fully-qualified domain name for the server that is used when validating the digest-uri parameter during the authentication process.",
                    "type": "string"
                }
                ,
                "allRequiredScope": {
                    "description": "The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "otpValidityDuration": {
                    "description": "The maximum length of time that a one-time password value should be considered valid.",
                    "type": "string"
                }
                ,
                "idTokenValidator": {
                    "description": "An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and that will map the token to a local entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "yubikeyAPIKeyPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "yubikeyClientID": {
                    "description": "The client ID to include in requests to the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "yubikeyAPIKey": {
                    "description": "The API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "preventTOTPReuse": {
                    "description": "Indicates whether to prevent clients from re-using TOTP passwords.",
                    "type": "boolean"
                }
                ,
                "yubikeyValidationServerBaseURL": {
                    "description": "The base URL of the validation server to use to verify one-time passwords. You should only need to change the value if you wish to use your own validation server instead of using one of the Yubico servers. The server must use the YubiKey Validation Protocol version 2.0.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "trustManagerProvider": {
                    "description": "Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the validation servers that Yubico provides, but may not be the case if an alternate validation server is configured).",
                    "type": "string"
                }
                ,
                "timeIntervalDuration": {
                    "description": "The duration of the time interval used for TOTP processing.",
                    "type": "string"
                }
                ,
                "certificateValidationPolicy": {
                    "description": "Indicates whether to attempt to validate the peer certificate against a certificate held in the user's entry.",
                    "type": "string"
                    , "enum": [
                        "always"
                        ,
                        "ifpresent"
                        ,
                        "never"
                    ]
                }
                ,
                "kerberosServicePrincipal": {
                    "description": "Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.",
                    "type": "string"
                }
                ,
                "anyRequiredScope": {
                    "description": "The set of OAuth scopes that a token may have to be allowed for authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "gssapiRole": {
                    "description": "Specifies the role that should be declared for the server in the generated JAAS configuration file.",
                    "type": "string"
                    , "enum": [
                        "acceptor"
                        ,
                        "initiator"
                    ]
                }
                ,
                "validateAccessTokenWhenIDTokenIsAlsoProvided": {
                    "description": "Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind requests that contain both types of tokens.",
                    "type": "string"
                    , "enum": [
                        "validate-only-the-id-token"
                        ,
                        "validate-both-tokens-but-only-map-the-id-token"
                        ,
                        "validate-and-map-both-tokens"
                    ]
                }
                ,
                "kdcAddress": {
                    "description": "Specifies the address of the KDC that is to be used for Kerberos processing.",
                    "type": "string"
                }
                ,
                "identityMapper": {
                    "description": "The identity mapper that should be used to identify the entry associated with the username provided in the bind request.",
                    "type": "string"
                }
                ,
                "realm": {
                    "description": "Specifies the realm that is to be used by the server for DIGEST-MD5 authentication.",
                    "type": "string"
                }
                ,
                "accessTokenValidator": {
                    "description": "An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must be configured with an identity mapper that will be used to map the access token to a local entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the YubiKey validation service.",
                    "type": "string"
                }
                ,
                "allowedQualityOfProtection": {
                    "description": "Specifies the supported quality of protection (QoP) levels that clients will be permitted to request when performing GSSAPI authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "auth"
                            ,
                            "auth-int"
                            ,
                            "auth-conf"
                        ]
                    }
                }
                ,
                "alternateAuthorizationIdentityMapper": {
                    "description": "The identity mapper that will be used to map an alternate authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the corresponding local entry.",
                    "type": "string"
                }
                ,
                "sharedSecretAttributeType": {
                    "description": "The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.",
                    "type": "string"
                }
            }
        },
        "sasl-mechanism-handler-response": {
            "id": "sasl-mechanism-handler-response",
            "description": "A SASL Mechanism Handler resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-ms-chap-v2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-totp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-yubikey-otp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:external"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:digest-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:plain"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-delivered-otp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-external-auth"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:anonymous"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:cram-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:oauth-bearer"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-certificate-plus-password"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:gssapi"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:third-party"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the SASL Mechanism Handler"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "certificateAttribute": {
                    "description": "Specifies the name of the attribute to hold user certificates.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.",
                    "type": "string"
                }
                ,
                "enableDebug": {
                    "description": "Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard output, which should be captured in the server.out log file.",
                    "type": "boolean"
                }
                ,
                "requireBothAccessTokenAndIDToken": {
                    "description": "Indicates whether bind requests will be required to have both an OAuth access token (in the \"auth\" element of the bind request) and an OpenID Connect ID token (in the \"pingidentityidtoken\" element of the bind request).",
                    "type": "boolean"
                }
                ,
                "jaasConfigFile": {
                    "description": "Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the information that the JVM should use for Kerberos processing.",
                    "type": "string"
                }
                ,
                "keytab": {
                    "description": "Specifies the keytab file that should be used for Kerberos processing.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this SASL Mechanism Handler",
                    "type": "string"
                }
                ,
                "adjacentIntervalsToCheck": {
                    "description": "The number of adjacent time intervals (both before and after the current time) that should be checked when performing authentication.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the SASL mechanism handler is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "certificateMapper": {
                    "description": "Specifies the name of the certificate mapper that should be used to match client certificates to user entries.",
                    "type": "string"
                }
                ,
                "requireStaticPassword": {
                    "description": "Indicates whether to require a static password (as might be held in the userPassword attribute, or whatever password attribute is defined in the password policy governing the user) in addition to the one-time password.",
                    "type": "boolean"
                }
                ,
                "allowNullServerFqdn": {
                    "description": "Specifies whether or not to allow a null value for the server-fqdn.",
                    "type": "boolean"
                }
                ,
                "keyManagerProvider": {
                    "description": "Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.",
                    "type": "string"
                }
                ,
                "serverFqdn": {
                    "description": "Specifies the DNS-resolvable fully-qualified domain name for the server that is used when validating the digest-uri parameter during the authentication process.",
                    "type": "string"
                }
                ,
                "allRequiredScope": {
                    "description": "The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "otpValidityDuration": {
                    "description": "The maximum length of time that a one-time password value should be considered valid.",
                    "type": "string"
                }
                ,
                "idTokenValidator": {
                    "description": "An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and that will map the token to a local entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "yubikeyAPIKeyPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "yubikeyClientID": {
                    "description": "The client ID to include in requests to the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "yubikeyAPIKey": {
                    "description": "The API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "preventTOTPReuse": {
                    "description": "Indicates whether to prevent clients from re-using TOTP passwords.",
                    "type": "boolean"
                }
                ,
                "yubikeyValidationServerBaseURL": {
                    "description": "The base URL of the validation server to use to verify one-time passwords. You should only need to change the value if you wish to use your own validation server instead of using one of the Yubico servers. The server must use the YubiKey Validation Protocol version 2.0.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "trustManagerProvider": {
                    "description": "Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the validation servers that Yubico provides, but may not be the case if an alternate validation server is configured).",
                    "type": "string"
                }
                ,
                "timeIntervalDuration": {
                    "description": "The duration of the time interval used for TOTP processing.",
                    "type": "string"
                }
                ,
                "certificateValidationPolicy": {
                    "description": "Indicates whether to attempt to validate the peer certificate against a certificate held in the user's entry.",
                    "type": "string"
                    , "enum": [
                        "always"
                        ,
                        "ifpresent"
                        ,
                        "never"
                    ]
                }
                ,
                "kerberosServicePrincipal": {
                    "description": "Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.",
                    "type": "string"
                }
                ,
                "anyRequiredScope": {
                    "description": "The set of OAuth scopes that a token may have to be allowed for authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "gssapiRole": {
                    "description": "Specifies the role that should be declared for the server in the generated JAAS configuration file.",
                    "type": "string"
                    , "enum": [
                        "acceptor"
                        ,
                        "initiator"
                    ]
                }
                ,
                "validateAccessTokenWhenIDTokenIsAlsoProvided": {
                    "description": "Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind requests that contain both types of tokens.",
                    "type": "string"
                    , "enum": [
                        "validate-only-the-id-token"
                        ,
                        "validate-both-tokens-but-only-map-the-id-token"
                        ,
                        "validate-and-map-both-tokens"
                    ]
                }
                ,
                "kdcAddress": {
                    "description": "Specifies the address of the KDC that is to be used for Kerberos processing.",
                    "type": "string"
                }
                ,
                "identityMapper": {
                    "description": "The identity mapper that should be used to identify the entry associated with the username provided in the bind request.",
                    "type": "string"
                }
                ,
                "realm": {
                    "description": "Specifies the realm that is to be used by the server for DIGEST-MD5 authentication.",
                    "type": "string"
                }
                ,
                "accessTokenValidator": {
                    "description": "An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must be configured with an identity mapper that will be used to map the access token to a local entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the YubiKey validation service.",
                    "type": "string"
                }
                ,
                "allowedQualityOfProtection": {
                    "description": "Specifies the supported quality of protection (QoP) levels that clients will be permitted to request when performing GSSAPI authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "auth"
                            ,
                            "auth-int"
                            ,
                            "auth-conf"
                        ]
                    }
                }
                ,
                "alternateAuthorizationIdentityMapper": {
                    "description": "The identity mapper that will be used to map an alternate authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the corresponding local entry.",
                    "type": "string"
                }
                ,
                "sharedSecretAttributeType": {
                    "description": "The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.",
                    "type": "string"
                }
            }
        },
        "sasl-mechanism-handler-properties": {
            "id": "sasl-mechanism-handler-properties",
            "description": "SASL Mechanism Handler properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-ms-chap-v2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-totp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-yubikey-otp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:external"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:digest-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:plain"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-delivered-otp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-external-auth"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:anonymous"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:cram-md5"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:oauth-bearer"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-certificate-plus-password"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:gssapi"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:third-party"
                        ]
                    }
                },
                "certificateAttribute": {
                    "description": "Specifies the name of the attribute to hold user certificates.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.",
                    "type": "string"
                }
                ,
                "enableDebug": {
                    "description": "Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard output, which should be captured in the server.out log file.",
                    "type": "boolean"
                }
                ,
                "requireBothAccessTokenAndIDToken": {
                    "description": "Indicates whether bind requests will be required to have both an OAuth access token (in the \"auth\" element of the bind request) and an OpenID Connect ID token (in the \"pingidentityidtoken\" element of the bind request).",
                    "type": "boolean"
                }
                ,
                "jaasConfigFile": {
                    "description": "Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the information that the JVM should use for Kerberos processing.",
                    "type": "string"
                }
                ,
                "keytab": {
                    "description": "Specifies the keytab file that should be used for Kerberos processing.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this SASL Mechanism Handler",
                    "type": "string"
                }
                ,
                "adjacentIntervalsToCheck": {
                    "description": "The number of adjacent time intervals (both before and after the current time) that should be checked when performing authentication.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the SASL mechanism handler is enabled for use.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "certificateMapper": {
                    "description": "Specifies the name of the certificate mapper that should be used to match client certificates to user entries.",
                    "type": "string"
                }
                ,
                "requireStaticPassword": {
                    "description": "Indicates whether to require a static password (as might be held in the userPassword attribute, or whatever password attribute is defined in the password policy governing the user) in addition to the one-time password.",
                    "type": "boolean"
                }
                ,
                "allowNullServerFqdn": {
                    "description": "Specifies whether or not to allow a null value for the server-fqdn.",
                    "type": "boolean"
                }
                ,
                "keyManagerProvider": {
                    "description": "Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.",
                    "type": "string"
                }
                ,
                "serverFqdn": {
                    "description": "Specifies the DNS-resolvable fully-qualified domain name for the server that is used when validating the digest-uri parameter during the authentication process.",
                    "type": "string"
                }
                ,
                "allRequiredScope": {
                    "description": "The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "otpValidityDuration": {
                    "description": "The maximum length of time that a one-time password value should be considered valid.",
                    "type": "string"
                }
                ,
                "idTokenValidator": {
                    "description": "An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and that will map the token to a local entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "yubikeyAPIKeyPassphraseProvider": {
                    "description": "The passphrase provider to use to obtain the API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "yubikeyClientID": {
                    "description": "The client ID to include in requests to the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "yubikeyAPIKey": {
                    "description": "The API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.",
                    "type": "string"
                }
                ,
                "preventTOTPReuse": {
                    "description": "Indicates whether to prevent clients from re-using TOTP passwords.",
                    "type": "boolean"
                }
                ,
                "yubikeyValidationServerBaseURL": {
                    "description": "The base URL of the validation server to use to verify one-time passwords. You should only need to change the value if you wish to use your own validation server instead of using one of the Yubico servers. The server must use the YubiKey Validation Protocol version 2.0.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "trustManagerProvider": {
                    "description": "Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the validation servers that Yubico provides, but may not be the case if an alternate validation server is configured).",
                    "type": "string"
                }
                ,
                "timeIntervalDuration": {
                    "description": "The duration of the time interval used for TOTP processing.",
                    "type": "string"
                }
                ,
                "certificateValidationPolicy": {
                    "description": "Indicates whether to attempt to validate the peer certificate against a certificate held in the user's entry.",
                    "type": "string"
                    , "enum": [
                        "always"
                        ,
                        "ifpresent"
                        ,
                        "never"
                    ]
                }
                ,
                "kerberosServicePrincipal": {
                    "description": "Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.",
                    "type": "string"
                }
                ,
                "anyRequiredScope": {
                    "description": "The set of OAuth scopes that a token may have to be allowed for authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "gssapiRole": {
                    "description": "Specifies the role that should be declared for the server in the generated JAAS configuration file.",
                    "type": "string"
                    , "enum": [
                        "acceptor"
                        ,
                        "initiator"
                    ]
                }
                ,
                "validateAccessTokenWhenIDTokenIsAlsoProvided": {
                    "description": "Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind requests that contain both types of tokens.",
                    "type": "string"
                    , "enum": [
                        "validate-only-the-id-token"
                        ,
                        "validate-both-tokens-but-only-map-the-id-token"
                        ,
                        "validate-and-map-both-tokens"
                    ]
                }
                ,
                "kdcAddress": {
                    "description": "Specifies the address of the KDC that is to be used for Kerberos processing.",
                    "type": "string"
                }
                ,
                "identityMapper": {
                    "description": "The identity mapper that should be used to identify the entry associated with the username provided in the bind request.",
                    "type": "string"
                }
                ,
                "realm": {
                    "description": "Specifies the realm that is to be used by the server for DIGEST-MD5 authentication.",
                    "type": "string"
                }
                ,
                "accessTokenValidator": {
                    "description": "An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must be configured with an identity mapper that will be used to map the access token to a local entry.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "httpProxyExternalServer": {
                    "description": "A reference to an HTTP proxy server that should be used for requests sent to the YubiKey validation service.",
                    "type": "string"
                }
                ,
                "allowedQualityOfProtection": {
                    "description": "Specifies the supported quality of protection (QoP) levels that clients will be permitted to request when performing GSSAPI authentication.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "auth"
                            ,
                            "auth-int"
                            ,
                            "auth-conf"
                        ]
                    }
                }
                ,
                "alternateAuthorizationIdentityMapper": {
                    "description": "The identity mapper that will be used to map an alternate authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the corresponding local entry.",
                    "type": "string"
                }
                ,
                "sharedSecretAttributeType": {
                    "description": "The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.",
                    "type": "string"
                }
            }
        }
    }
}
