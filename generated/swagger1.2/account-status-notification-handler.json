{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/account-status-notification-handlers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Account Status Notification Handler objects",
                    "type": "account-status-notification-handler-list-response",
                    "nickname": "list-account-status-notification-handlers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Account Status Notification Handler to the config",
                    "nickname": "add-account-status-notification-handler",
                    "type": "account-status-notification-handler-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Account Status Notification Handler to add",
                            "name": "add-account-status-notification-handler-request",
                            "type": "add-account-status-notification-handler-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/account-status-notification-handlers/{account-status-notification-handler-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Account Status Notification Handler",
                    "type": "account-status-notification-handler-response",
                    "nickname": "get-account-status-notification-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "account-status-notification-handler-name",
                          "description": "Name of the Account Status Notification Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Account Status Notification Handler by name, replacing any attributes specified in the request body",
                    "type": "account-status-notification-handler-response",
                    "nickname": "put-account-status-notification-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "account-status-notification-handler-name",
                          "description": "Name of the Account Status Notification Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Account Status Notification Handler attributes to update",
                            "name": "account-status-notification-handler-properties",
                            "type": "account-status-notification-handler-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Account Status Notification Handler by name, using a SCIM patch request",
                    "type": "account-status-notification-handler-response",
                    "nickname": "patch-account-status-notification-handler",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "account-status-notification-handler-name",
                          "description": "Name of the Account Status Notification Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Account Status Notification Handler",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Account Status Notification Handler",
                    "nickname": "delete-account-status-notification-handler",
                    "parameters": [
                        {
                          "name": "account-status-notification-handler-name",
                          "description": "Name of the Account Status Notification Handler",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "account-status-notification-handler-list-response": {
            "id": "account-status-notification-handler-list-response",
            "description": "Account Status Notification Handler list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "account-status-notification-handler-response"
                    }
                }
            }
        },
        "add-account-status-notification-handler-request": {
            "id": "add-account-status-notification-handler-request",
            "description": "A Account Status Notification Handler resource request",
            "required": [
                "handlerName"
            ],
            "properties": {
                "handlerName": {
                    "type": "string",
                    "description": "Name of the new Account Status Notification Handler"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:smtp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:admin-alert"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:error-log"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:multi-part-email"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:third-party"
                        ]
                    }
                },
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.",
                    "type": "string"
                }
                ,
                "senderAddress": {
                    "description": "Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate email address.",
                    "type": "string"
                }
                ,
                "accountStatusNotificationType": {
                    "description": "The types of account status notifications that should result in administrative alerts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "account-temporarily-locked"
                            ,
                            "account-permanently-locked"
                            ,
                            "account-unlocked"
                            ,
                            "account-idle-locked"
                            ,
                            "account-reset-locked"
                            ,
                            "account-disabled"
                            ,
                            "account-enabled"
                            ,
                            "account-not-yet-active"
                            ,
                            "account-expired"
                            ,
                            "password-expired"
                            ,
                            "password-expiring"
                            ,
                            "password-reset"
                            ,
                            "password-changed"
                            ,
                            "account-created"
                            ,
                            "account-updated"
                            ,
                            "bind-password-failed-validation"
                            ,
                            "must-change-password"
                        ]
                    }
                }
                ,
                "accountPermanentlyFailureLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.",
                    "type": "string"
                }
                ,
                "accountDisabledMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account is disabled by an administrator.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Account Status Notification Handler",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "passwordExpiringMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.",
                    "type": "string"
                }
                ,
                "accountIdleLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.",
                    "type": "string"
                }
                ,
                "asynchronous": {
                    "description": "Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.",
                    "type": "boolean"
                }
                ,
                "accountUnlockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account has been unlocked (e.g., by an administrative password reset).",
                    "type": "string"
                }
                ,
                "accountEnabledMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account is enabled by an administrator.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "recipientAddress": {
                    "description": "Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for whom the notification has been generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "emailAddressJSONObjectFilter": {
                    "description": "A JSON object filter that may be used to identify which email address value to use when sending the message.",
                    "type": "string"
                }
                ,
                "accountCreatedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.",
                    "type": "string"
                }
                ,
                "bindPasswordFailedValidationMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.",
                    "type": "string"
                }
                ,
                "passwordResetMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's password has been reset by an administrator.",
                    "type": "string"
                }
                ,
                "mustChangePasswordMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.",
                    "type": "string"
                }
                ,
                "sendMessageWithoutEndUserAddress": {
                    "description": "Indicates whether an email notification message should be generated and sent to the set of notification recipients even if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not possible to notify the end user).",
                    "type": "boolean"
                }
                ,
                "messageSubject": {
                    "description": "Specifies the subject that should be used for email messages generated by this account status notification handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "messageTemplateFile": {
                    "description": "Specifies the path to the file containing the message template to generate the email notification messages.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountUpdateNotificationRequestCriteria": {
                    "description": "A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.",
                    "type": "string"
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification Handler.",
                    "type": "string"
                }
                ,
                "emailAddressJSONField": {
                    "description": "The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.",
                    "type": "string"
                }
                ,
                "accountCreationNotificationRequestCriteria": {
                    "description": "A request criteria object that identifies which add requests should result in account creation notifications for this handler.",
                    "type": "string"
                }
                ,
                "passwordChangedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.",
                    "type": "string"
                }
                ,
                "accountNotYetActiveMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.",
                    "type": "string"
                }
                ,
                "accountResetLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.",
                    "type": "string"
                }
                ,
                "emailAddressAttributeType": {
                    "description": "Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountExpiredMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.",
                    "type": "string"
                }
                ,
                "passwordExpiredMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.",
                    "type": "string"
                }
                ,
                "accountTemporarilyFailureLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.",
                    "type": "string"
                }
                ,
                "accountUpdatedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.",
                    "type": "string"
                }
            }
        },
        "account-status-notification-handler-response": {
            "id": "account-status-notification-handler-response",
            "description": "A Account Status Notification Handler resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:smtp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:admin-alert"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:error-log"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:multi-part-email"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:third-party"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Account Status Notification Handler"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.",
                    "type": "string"
                }
                ,
                "senderAddress": {
                    "description": "Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate email address.",
                    "type": "string"
                }
                ,
                "accountStatusNotificationType": {
                    "description": "The types of account status notifications that should result in administrative alerts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "account-temporarily-locked"
                            ,
                            "account-permanently-locked"
                            ,
                            "account-unlocked"
                            ,
                            "account-idle-locked"
                            ,
                            "account-reset-locked"
                            ,
                            "account-disabled"
                            ,
                            "account-enabled"
                            ,
                            "account-not-yet-active"
                            ,
                            "account-expired"
                            ,
                            "password-expired"
                            ,
                            "password-expiring"
                            ,
                            "password-reset"
                            ,
                            "password-changed"
                            ,
                            "account-created"
                            ,
                            "account-updated"
                            ,
                            "bind-password-failed-validation"
                            ,
                            "must-change-password"
                        ]
                    }
                }
                ,
                "accountPermanentlyFailureLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.",
                    "type": "string"
                }
                ,
                "accountDisabledMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account is disabled by an administrator.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Account Status Notification Handler",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "passwordExpiringMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.",
                    "type": "string"
                }
                ,
                "accountIdleLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.",
                    "type": "string"
                }
                ,
                "asynchronous": {
                    "description": "Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.",
                    "type": "boolean"
                }
                ,
                "accountUnlockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account has been unlocked (e.g., by an administrative password reset).",
                    "type": "string"
                }
                ,
                "accountEnabledMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account is enabled by an administrator.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "recipientAddress": {
                    "description": "Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for whom the notification has been generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "emailAddressJSONObjectFilter": {
                    "description": "A JSON object filter that may be used to identify which email address value to use when sending the message.",
                    "type": "string"
                }
                ,
                "accountCreatedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.",
                    "type": "string"
                }
                ,
                "bindPasswordFailedValidationMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.",
                    "type": "string"
                }
                ,
                "passwordResetMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's password has been reset by an administrator.",
                    "type": "string"
                }
                ,
                "mustChangePasswordMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.",
                    "type": "string"
                }
                ,
                "sendMessageWithoutEndUserAddress": {
                    "description": "Indicates whether an email notification message should be generated and sent to the set of notification recipients even if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not possible to notify the end user).",
                    "type": "boolean"
                }
                ,
                "messageSubject": {
                    "description": "Specifies the subject that should be used for email messages generated by this account status notification handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "messageTemplateFile": {
                    "description": "Specifies the path to the file containing the message template to generate the email notification messages.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountUpdateNotificationRequestCriteria": {
                    "description": "A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.",
                    "type": "string"
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification Handler.",
                    "type": "string"
                }
                ,
                "emailAddressJSONField": {
                    "description": "The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.",
                    "type": "string"
                }
                ,
                "accountCreationNotificationRequestCriteria": {
                    "description": "A request criteria object that identifies which add requests should result in account creation notifications for this handler.",
                    "type": "string"
                }
                ,
                "passwordChangedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.",
                    "type": "string"
                }
                ,
                "accountNotYetActiveMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.",
                    "type": "string"
                }
                ,
                "accountResetLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.",
                    "type": "string"
                }
                ,
                "emailAddressAttributeType": {
                    "description": "Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountExpiredMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.",
                    "type": "string"
                }
                ,
                "passwordExpiredMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.",
                    "type": "string"
                }
                ,
                "accountTemporarilyFailureLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.",
                    "type": "string"
                }
                ,
                "accountUpdatedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.",
                    "type": "string"
                }
            }
        },
        "account-status-notification-handler-properties": {
            "id": "account-status-notification-handler-properties",
            "description": "Account Status Notification Handler properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:smtp"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:admin-alert"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:error-log"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:multi-part-email"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:third-party"
                        ]
                    }
                },
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.",
                    "type": "string"
                }
                ,
                "senderAddress": {
                    "description": "Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate email address.",
                    "type": "string"
                }
                ,
                "accountStatusNotificationType": {
                    "description": "The types of account status notifications that should result in administrative alerts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "account-temporarily-locked"
                            ,
                            "account-permanently-locked"
                            ,
                            "account-unlocked"
                            ,
                            "account-idle-locked"
                            ,
                            "account-reset-locked"
                            ,
                            "account-disabled"
                            ,
                            "account-enabled"
                            ,
                            "account-not-yet-active"
                            ,
                            "account-expired"
                            ,
                            "password-expired"
                            ,
                            "password-expiring"
                            ,
                            "password-reset"
                            ,
                            "password-changed"
                            ,
                            "account-created"
                            ,
                            "account-updated"
                            ,
                            "bind-password-failed-validation"
                            ,
                            "must-change-password"
                        ]
                    }
                }
                ,
                "accountPermanentlyFailureLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.",
                    "type": "string"
                }
                ,
                "accountDisabledMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account is disabled by an administrator.",
                    "type": "string"
                }
                ,
                "description": {
                    "description": "A description for this Account Status Notification Handler",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "passwordExpiringMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.",
                    "type": "string"
                }
                ,
                "accountIdleLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.",
                    "type": "string"
                }
                ,
                "asynchronous": {
                    "description": "Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.",
                    "type": "boolean"
                }
                ,
                "accountUnlockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account has been unlocked (e.g., by an administrative password reset).",
                    "type": "string"
                }
                ,
                "accountEnabledMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's account is enabled by an administrator.",
                    "type": "string"
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "recipientAddress": {
                    "description": "Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for whom the notification has been generated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "emailAddressJSONObjectFilter": {
                    "description": "A JSON object filter that may be used to identify which email address value to use when sending the message.",
                    "type": "string"
                }
                ,
                "accountCreatedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.",
                    "type": "string"
                }
                ,
                "bindPasswordFailedValidationMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.",
                    "type": "string"
                }
                ,
                "passwordResetMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user's password has been reset by an administrator.",
                    "type": "string"
                }
                ,
                "mustChangePasswordMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.",
                    "type": "string"
                }
                ,
                "sendMessageWithoutEndUserAddress": {
                    "description": "Indicates whether an email notification message should be generated and sent to the set of notification recipients even if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not possible to notify the end user).",
                    "type": "boolean"
                }
                ,
                "messageSubject": {
                    "description": "Specifies the subject that should be used for email messages generated by this account status notification handler.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "messageTemplateFile": {
                    "description": "Specifies the path to the file containing the message template to generate the email notification messages.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountUpdateNotificationRequestCriteria": {
                    "description": "A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.",
                    "type": "string"
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification Handler.",
                    "type": "string"
                }
                ,
                "emailAddressJSONField": {
                    "description": "The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.",
                    "type": "string"
                }
                ,
                "accountCreationNotificationRequestCriteria": {
                    "description": "A request criteria object that identifies which add requests should result in account creation notifications for this handler.",
                    "type": "string"
                }
                ,
                "passwordChangedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.",
                    "type": "string"
                }
                ,
                "accountNotYetActiveMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.",
                    "type": "string"
                }
                ,
                "accountResetLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.",
                    "type": "string"
                }
                ,
                "emailAddressAttributeType": {
                    "description": "Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accountExpiredMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.",
                    "type": "string"
                }
                ,
                "passwordExpiredMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.",
                    "type": "string"
                }
                ,
                "accountTemporarilyFailureLockedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.",
                    "type": "string"
                }
                ,
                "accountUpdatedMessageTemplate": {
                    "description": "The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.",
                    "type": "string"
                }
            }
        }
    }
}
