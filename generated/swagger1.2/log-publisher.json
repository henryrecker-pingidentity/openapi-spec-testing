{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/log-publishers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Log Publisher objects",
                    "type": "log-publisher-list-response",
                    "nickname": "list-log-publishers",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Log Publisher to the config",
                    "nickname": "add-log-publisher",
                    "type": "log-publisher-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Log Publisher to add",
                            "name": "add-log-publisher-request",
                            "type": "add-log-publisher-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/log-publishers/{log-publisher-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Log Publisher",
                    "type": "log-publisher-response",
                    "nickname": "get-log-publisher",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "log-publisher-name",
                          "description": "Name of the Log Publisher",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Log Publisher by name, replacing any attributes specified in the request body",
                    "type": "log-publisher-response",
                    "nickname": "put-log-publisher",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "log-publisher-name",
                          "description": "Name of the Log Publisher",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Log Publisher attributes to update",
                            "name": "log-publisher-properties",
                            "type": "log-publisher-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Log Publisher by name, using a SCIM patch request",
                    "type": "log-publisher-response",
                    "nickname": "patch-log-publisher",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "log-publisher-name",
                          "description": "Name of the Log Publisher",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Log Publisher",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Log Publisher",
                    "nickname": "delete-log-publisher",
                    "parameters": [
                        {
                          "name": "log-publisher-name",
                          "description": "Name of the Log Publisher",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/log-publishers/{log-publisher-name}/debug-targets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Debug Target objects",
                    "type": "debug-target-list-response",
                    "nickname": "list-debug-targets",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "log-publisher-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Debug Target to the config",
                    "nickname": "add-debug-target",
                    "type": "debug-target-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "log-publisher-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Debug Target to add",
                            "name": "add-debug-target-request",
                            "type": "add-debug-target-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/log-publishers/{log-publisher-name}/debug-targets/{debug-target-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Debug Target",
                    "type": "debug-target-response",
                    "nickname": "get-debug-target",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "log-publisher-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "debug-target-name",
                          "description": "Name of the Debug Target",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Debug Target by name, replacing any attributes specified in the request body",
                    "type": "debug-target-response",
                    "nickname": "put-debug-target",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "log-publisher-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "debug-target-name",
                          "description": "Name of the Debug Target",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Debug Target attributes to update",
                            "name": "debug-target-properties",
                            "type": "debug-target-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Debug Target by name, using a SCIM patch request",
                    "type": "debug-target-response",
                    "nickname": "patch-debug-target",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "log-publisher-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "debug-target-name",
                          "description": "Name of the Debug Target",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Debug Target",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Debug Target",
                    "nickname": "delete-debug-target",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "log-publisher-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "debug-target-name",
                          "description": "Name of the Debug Target",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "log-publisher-list-response": {
            "id": "log-publisher-list-response",
            "description": "Log Publisher list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "log-publisher-response"
                    }
                }
            }
        },
        "add-log-publisher-request": {
            "id": "add-log-publisher-request",
            "description": "A Log Publisher resource request",
            "required": [
                "publisherName"
            ],
            "properties": {
                "publisherName": {
                    "type": "string",
                    "description": "Name of the new Log Publisher"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:operation-timing-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:admin-alert-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-trace"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:common-log-file-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-debug"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:detailed-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:debug-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-http-operation"
                        ]
                    }
                },
                "suppressedResponseHeaderName": {
                    "description": "Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "idTokenValidatorMessageType": {
                    "description": "Specifies the ID token validator message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "external-server-request"
                            ,
                            "external-server-response"
                            ,
                            "validation"
                            ,
                            "warning"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "logTableName": {
                    "description": "The table name to log entries to the database server.",
                    "type": "string"
                }
                ,
                "logSearchReferences": {
                    "description": "Indicates whether to log information about search result references sent to the client.",
                    "type": "boolean"
                }
                ,
                "suppressedRequestHeaderName": {
                    "description": "Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "logResponseHeaders": {
                    "description": "Indicates whether response log messages should include information about HTTP headers included in the response.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "header-names"
                        ,
                        "header-names-and-values"
                    ]
                }
                ,
                "suppressReplicationOperations": {
                    "description": "Indicates whether access messages that are generated by replication operations should be suppressed.",
                    "type": "boolean"
                }
                ,
                "logFieldMapping": {
                    "description": "The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.",
                    "type": "string"
                }
                ,
                "httpMessageType": {
                    "description": "Specifies the HTTP message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "request"
                            ,
                            "response"
                        ]
                    }
                }
                ,
                "logDisconnects": {
                    "description": "Indicates whether to log information about connections that have been closed by the client or terminated by the server.",
                    "type": "boolean"
                }
                ,
                "overrideSeverity": {
                    "description": "Specifies the override severity levels for the logger based on the category of the messages.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "rotationPolicy": {
                    "description": "The rotation policy to use for the Third Party File Based Access Log Publisher .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "generifyMessageStringsWhenPossible": {
                    "description": "Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.",
                    "type": "boolean"
                }
                ,
                "syslogMessageApplicationName": {
                    "description": "The application name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                }
                ,
                "includeRequestControls": {
                    "description": "Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.",
                    "type": "boolean"
                }
                ,
                "correlateRequestsAndResults": {
                    "description": "Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.",
                    "type": "boolean"
                }
                ,
                "obscureAttribute": {
                    "description": "Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "autoFlush": {
                    "description": "Specifies whether to flush the writer after every log record.",
                    "type": "boolean"
                }
                ,
                "includeAddAttributeNames": {
                    "description": "Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.",
                    "type": "boolean"
                }
                ,
                "directoryRESTAPIMessageType": {
                    "description": "Specifies the Directory REST API message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "error"
                        ]
                    }
                }
                ,
                "signLog": {
                    "description": "Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.",
                    "type": "boolean"
                }
                ,
                "server": {
                    "description": "The JDBC-based Database Server to use for a connection.",
                    "type": "string"
                }
                ,
                "includeRequestDetailsInIntermediateResponseMessages": {
                    "description": "Indicates whether log messages for intermediate responses should include information about the associated operation request.",
                    "type": "boolean"
                }
                ,
                "syslogSeverity": {
                    "description": "The syslog severity to use for the messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                    , "enum": [
                        "emergency"
                        ,
                        "alert"
                        ,
                        "critical"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "notice"
                        ,
                        "informational"
                        ,
                        "debug"
                    ]
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.",
                    "type": "string"
                }
                ,
                "encryptLog": {
                    "description": "Indicates whether log files should be encrypted so that their content is not available to unauthorized users.",
                    "type": "boolean"
                }
                ,
                "serverPort": {
                    "description": "Specifies the port number of the syslogd host to log to.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Log Publisher is enabled for use.",
                    "type": "boolean"
                }
                ,
                "includeRequesterDN": {
                    "description": "Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.",
                    "type": "boolean"
                }
                ,
                "retentionPolicy": {
                    "description": "The retention policy to use for the Third Party File Based Access Log Publisher .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "loggingErrorBehavior": {
                    "description": "Specifies the behavior that the server should exhibit if an error occurs during logging processing.",
                    "type": "string"
                    , "enum": [
                        "standard-error"
                        ,
                        "lockdown-mode"
                    ]
                }
                ,
                "minIncludedPhaseTimeNanos": {
                    "description": "The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.",
                    "type": "integer"
                }
                ,
                "includeRequestDetailsInSearchReferenceMessages": {
                    "description": "Indicates whether log messages for search result references should include information about the associated search request.",
                    "type": "boolean"
                }
                ,
                "defaultOmitMethodEntryArguments": {
                    "description": "Indicates whether to include method arguments in debug messages logged by default.",
                    "type": "boolean"
                }
                ,
                "includeIntermediateClientRequestControl": {
                    "description": "Indicates whether to include information about any intermediate client request control that may have been included in the request.",
                    "type": "boolean"
                }
                ,
                "logResponseCookieNames": {
                    "description": "Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).",
                    "type": "boolean"
                }
                ,
                "resultCriteria": {
                    "description": "Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "logAssuranceCompleted": {
                    "description": "Indicates whether to log information about the result of replication assurance processing.",
                    "type": "boolean"
                }
                ,
                "compressionMechanism": {
                    "description": "Specifies the type of compression (if any) to use for log files that are written.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "gzip"
                    ]
                }
                ,
                "logRequestHeaders": {
                    "description": "Indicates whether request log messages should include information about HTTP headers included in the request.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "header-names"
                        ,
                        "header-names-and-values"
                    ]
                }
                ,
                "defaultSeverity": {
                    "description": "Specifies the default severity levels for the logger.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "all"
                            ,
                            "none"
                            ,
                            "fatal-error"
                            ,
                            "info"
                            ,
                            "mild-error"
                            ,
                            "mild-warning"
                            ,
                            "notice"
                            ,
                            "severe-error"
                            ,
                            "severe-warning"
                            ,
                            "debug"
                        ]
                    }
                }
                ,
                "searchReferenceCriteria": {
                    "description": "Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includeResponseControls": {
                    "description": "Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.",
                    "type": "boolean"
                }
                ,
                "logRequests": {
                    "description": "Indicates whether to log information about requests received from clients.",
                    "type": "boolean"
                }
                ,
                "maxStringLength": {
                    "description": "Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.",
                    "type": "integer"
                }
                ,
                "logIntermediateResponses": {
                    "description": "Indicates whether to log information about intermediate responses sent to the client.",
                    "type": "boolean"
                }
                ,
                "includeResultCodeNames": {
                    "description": "Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.",
                    "type": "boolean"
                }
                ,
                "writeMultiLineMessages": {
                    "description": "Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.",
                    "type": "boolean"
                }
                ,
                "logSecurityNegotiation": {
                    "description": "Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.",
                    "type": "boolean"
                }
                ,
                "defaultIncludeThrowableCause": {
                    "description": "Indicates whether to include the cause of exceptions in exception thrown and caught messages logged by default.",
                    "type": "boolean"
                }
                ,
                "suppressInternalOperations": {
                    "description": "Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.",
                    "type": "boolean"
                }
                ,
                "outputLocation": {
                    "description": "Specifies the output stream to which JSON-formatted error log messages should be written.",
                    "type": "string"
                    , "enum": [
                        "standard-output"
                        ,
                        "standard-error"
                    ]
                }
                ,
                "logRequestAuthorizationType": {
                    "description": "Indicates whether to log the type of credentials given if an \"Authorization\" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the \"Authorization\" header.",
                    "type": "boolean"
                }
                ,
                "obscureSensitiveContent": {
                    "description": "Indicates whether the resulting log file should attempt to obscure content that may be considered sensitive. This primarily includes the credentials for bind requests, the values of password modify extended requests and responses, and the values of any attributes specified in the obscure-attribute property. Note that the use of this option does not guarantee no sensitive information will be exposed, so the log output should still be carefully guarded.",
                    "type": "boolean"
                }
                ,
                "includeModifyAttributeNames": {
                    "description": "Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.",
                    "type": "boolean"
                }
                ,
                "rotationListener": {
                    "description": "A listener that should be notified whenever a log file is rotated out of service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "serverHostName": {
                    "description": "Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.",
                    "type": "string"
                }
                ,
                "defaultThrowableStackFrames": {
                    "description": "Indicates the number of stack frames to include in the stack trace for method entry and exception thrown messages.",
                    "type": "integer"
                }
                ,
                "includeOperationPurposeRequestControl": {
                    "description": "Indicates whether to include information about any operation purpose request control that may have been included in the request.",
                    "type": "boolean"
                }
                ,
                "consentMessageType": {
                    "description": "Specifies the consent message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "consent-created"
                            ,
                            "consent-updated"
                            ,
                            "consent-deleted"
                            ,
                            "consent-retrieved"
                            ,
                            "consent-search"
                            ,
                            "definition-created"
                            ,
                            "definition-updated"
                            ,
                            "definition-deleted"
                            ,
                            "definition-retrieved"
                            ,
                            "definition-search"
                            ,
                            "localization-created"
                            ,
                            "localization-updated"
                            ,
                            "localization-deleted"
                            ,
                            "localization-retrieved"
                            ,
                            "localization-search"
                            ,
                            "error"
                            ,
                            "audit"
                        ]
                    }
                }
                ,
                "includeReplicationChangeID": {
                    "description": "Indicates whether to log information about the replication change ID.",
                    "type": "boolean"
                }
                ,
                "includeThreadID": {
                    "description": "Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.",
                    "type": "boolean"
                }
                ,
                "debugMessageType": {
                    "description": "Specifies the debug message types which can be logged. Note that enabling these may result in sensitive information being logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "http-full-request-and-response"
                            ,
                            "ldap-external-server-request"
                            ,
                            "server-sdk-extension"
                            ,
                            "store-adapter-mapping"
                            ,
                            "store-adapter-processing"
                            ,
                            "access-token-validator-request-and-response"
                            ,
                            "access-token-validator-processing"
                            ,
                            "id-token-validator-request-and-response"
                            ,
                            "id-token-validator-processing"
                            ,
                            "consent-service-request-and-response"
                            ,
                            "gateway-request-and-response"
                            ,
                            "policy-request-and-response"
                        ]
                    }
                }
                ,
                "requestCriteria": {
                    "description": "Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includePathPattern": {
                    "description": "Specifies a set of HTTP request URL paths to determine whether log messages are included for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeStartupID": {
                    "description": "Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.",
                    "type": "boolean"
                }
                ,
                "connectionCriteria": {
                    "description": "Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.",
                    "type": "string"
                }
                ,
                "includeInstanceName": {
                    "description": "Indicates whether log messages should include the instance name for the Directory Server.",
                    "type": "boolean"
                }
                ,
                "extensionMessageType": {
                    "description": "Specifies the Server SDK extension message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "error"
                            ,
                            "warning"
                            ,
                            "notice"
                            ,
                            "info"
                        ]
                    }
                }
                ,
                "logRequestProtocol": {
                    "description": "Indicates whether request log messages should include information about the HTTP version specified in the request.",
                    "type": "boolean"
                }
                ,
                "defaultOmitMethodReturnValue": {
                    "description": "Indicates whether to include the return value in debug messages logged by default.",
                    "type": "boolean"
                }
                ,
                "minIncludedOperationProcessingTime": {
                    "description": "The minimum processing time (i.e., \"etime\") for operations that should be logged by this Operation Timing Access Log Publisher",
                    "type": "string"
                }
                ,
                "logFile": {
                    "description": "The file name to use for the log files generated by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.",
                    "type": "string"
                }
                ,
                "logFilePermissions": {
                    "description": "The UNIX permissions of the log files created by this Third Party File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "timestampPrecision": {
                    "description": "Specifies the smallest time unit to be included in timestamps.",
                    "type": "string"
                    , "enum": [
                        "seconds"
                        ,
                        "milliseconds"
                    ]
                }
                ,
                "logRedirectURI": {
                    "description": "Indicates whether the redirect URI (i.e., the value of the \"Location\" header from responses) should be included in response log messages.",
                    "type": "boolean"
                }
                ,
                "suppressedRequestParameterName": {
                    "description": "Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "logRequestParameters": {
                    "description": "Indicates what (if any) information about request parameters should be included in request log messages. Note that this will only be used for requests with a method other than GET, since GET request parameters will be included in the request URL.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "parameter-names"
                        ,
                        "parameter-names-and-values"
                    ]
                }
                ,
                "logConnects": {
                    "description": "Indicates whether to log information about connections established to the server.",
                    "type": "boolean"
                }
                ,
                "defaultDebugCategory": {
                    "description": "The debug message categories to be logged when none of the defined targets match the message.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "caught"
                            ,
                            "constructor"
                            ,
                            "data"
                            ,
                            "database-access"
                            ,
                            "enter"
                            ,
                            "exit"
                            ,
                            "message"
                            ,
                            "protocol"
                            ,
                            "thrown"
                        ]
                    }
                }
                ,
                "includeProductName": {
                    "description": "Indicates whether log messages should include the product name for the Directory Server.",
                    "type": "boolean"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includeRequestDetailsInSearchEntryMessages": {
                    "description": "Indicates whether log messages for search result entries should include information about the associated search request.",
                    "type": "boolean"
                }
                ,
                "logSearchEntries": {
                    "description": "Indicates whether to log information about search result entries sent to the client.",
                    "type": "boolean"
                }
                ,
                "syslogMessageHostName": {
                    "description": "The local host name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                }
                ,
                "excludeAttribute": {
                    "description": "Specifies the names of any attribute types that should be excluded from the audit log.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Log Publisher",
                    "type": "string"
                }
                ,
                "softDeleteEntryAuditBehavior": {
                    "description": "Specifies the audit behavior for delete and modify operations on soft-deleted entries.",
                    "type": "string"
                    , "enum": [
                        "included"
                        ,
                        "excluded"
                    ]
                }
                ,
                "includeRequesterIPAddress": {
                    "description": "Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.",
                    "type": "boolean"
                }
                ,
                "searchEntryCriteria": {
                    "description": "Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "excludePathPattern": {
                    "description": "Specifies a set of HTTP request URL paths to determine whether log messages are excluded for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "asynchronous": {
                    "description": "Indicates whether the Syslog Based Error Log Publisher will publish records asynchronously.",
                    "type": "boolean"
                }
                ,
                "timeInterval": {
                    "description": "Specifies the interval at which to check whether the log files need to be rotated.",
                    "type": "string"
                }
                ,
                "logRequestCookieNames": {
                    "description": "Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).",
                    "type": "boolean"
                }
                ,
                "scimMessageType": {
                    "description": "Specifies the SCIM message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "request"
                            ,
                            "result"
                            ,
                            "internal-request"
                            ,
                            "internal-result"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeExtendedSearchRequestDetails": {
                    "description": "Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.",
                    "type": "boolean"
                }
                ,
                "queueSize": {
                    "description": "The maximum number of log records that can be stored in the asynchronous queue.",
                    "type": "integer"
                }
                ,
                "accessTokenValidatorMessageType": {
                    "description": "Specifies the access token validator message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "subject-lookup"
                            ,
                            "external-server-request"
                            ,
                            "external-server-response"
                            ,
                            "validation"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "includeSearchEntryAttributeNames": {
                    "description": "Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.",
                    "type": "boolean"
                }
                ,
                "syslogFacility": {
                    "description": "The syslog facility to use for the messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                    , "enum": [
                        "user-level-messages"
                        ,
                        "system-daemons"
                        ,
                        "security-and-authorization"
                        ,
                        "security-and-authorization-alternative"
                        ,
                        "log-audit"
                        ,
                        "log-alert"
                        ,
                        "local-use-0"
                        ,
                        "local-use-1"
                        ,
                        "local-use-2"
                        ,
                        "local-use-3"
                        ,
                        "local-use-4"
                        ,
                        "local-use-5"
                        ,
                        "local-use-6"
                        ,
                        "local-use-7"
                        ,
                        "kernel-messages"
                        ,
                        "mail-system"
                        ,
                        "syslogd-internal-messages"
                        ,
                        "line-printer"
                        ,
                        "network-news"
                        ,
                        "uucp"
                        ,
                        "clock-daemon"
                        ,
                        "ftp-daemon"
                        ,
                        "ntp-daemon"
                        ,
                        "clock-daemon-alternative"
                    ]
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "debugACIEnabled": {
                    "description": "Indicates whether to include debugging information about ACIs being used by the operations being logged.",
                    "type": "boolean"
                }
                ,
                "syslogExternalServer": {
                    "description": "The syslog server to which messages should be sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "defaultDebugLevel": {
                    "description": "The lowest severity level of debug messages to log when none of the defined targets match the message.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "verbose"
                        ,
                        "all"
                    ]
                }
                ,
                "logClientCertificates": {
                    "description": "Indicates whether to log information about any client certificates presented to the server.",
                    "type": "boolean"
                }
                ,
                "logResults": {
                    "description": "Indicates whether to log information about the results of client requests.",
                    "type": "boolean"
                }
                ,
                "includeRequestDetailsInResultMessages": {
                    "description": "Indicates whether log messages for operation results should include information about both the request and the result.",
                    "type": "boolean"
                }
                ,
                "logFieldBehavior": {
                    "description": "The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.",
                    "type": "string"
                }
                ,
                "append": {
                    "description": "Specifies whether to append to existing log files.",
                    "type": "boolean"
                }
                ,
                "useReversibleForm": {
                    "description": "Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.",
                    "type": "boolean"
                }
                ,
                "bufferSize": {
                    "description": "Specifies the log file buffer size.",
                    "type": "string"
                }
            }
        },
        "log-publisher-response": {
            "id": "log-publisher-response",
            "description": "A Log Publisher resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:operation-timing-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:admin-alert-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-trace"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:common-log-file-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-debug"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:detailed-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:debug-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-http-operation"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Log Publisher"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "suppressedResponseHeaderName": {
                    "description": "Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "idTokenValidatorMessageType": {
                    "description": "Specifies the ID token validator message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "external-server-request"
                            ,
                            "external-server-response"
                            ,
                            "validation"
                            ,
                            "warning"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "logTableName": {
                    "description": "The table name to log entries to the database server.",
                    "type": "string"
                }
                ,
                "logSearchReferences": {
                    "description": "Indicates whether to log information about search result references sent to the client.",
                    "type": "boolean"
                }
                ,
                "suppressedRequestHeaderName": {
                    "description": "Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "logResponseHeaders": {
                    "description": "Indicates whether response log messages should include information about HTTP headers included in the response.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "header-names"
                        ,
                        "header-names-and-values"
                    ]
                }
                ,
                "suppressReplicationOperations": {
                    "description": "Indicates whether access messages that are generated by replication operations should be suppressed.",
                    "type": "boolean"
                }
                ,
                "logFieldMapping": {
                    "description": "The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.",
                    "type": "string"
                }
                ,
                "httpMessageType": {
                    "description": "Specifies the HTTP message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "request"
                            ,
                            "response"
                        ]
                    }
                }
                ,
                "logDisconnects": {
                    "description": "Indicates whether to log information about connections that have been closed by the client or terminated by the server.",
                    "type": "boolean"
                }
                ,
                "overrideSeverity": {
                    "description": "Specifies the override severity levels for the logger based on the category of the messages.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "rotationPolicy": {
                    "description": "The rotation policy to use for the Third Party File Based Access Log Publisher .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "generifyMessageStringsWhenPossible": {
                    "description": "Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.",
                    "type": "boolean"
                }
                ,
                "syslogMessageApplicationName": {
                    "description": "The application name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                }
                ,
                "includeRequestControls": {
                    "description": "Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.",
                    "type": "boolean"
                }
                ,
                "correlateRequestsAndResults": {
                    "description": "Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.",
                    "type": "boolean"
                }
                ,
                "obscureAttribute": {
                    "description": "Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "autoFlush": {
                    "description": "Specifies whether to flush the writer after every log record.",
                    "type": "boolean"
                }
                ,
                "includeAddAttributeNames": {
                    "description": "Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.",
                    "type": "boolean"
                }
                ,
                "directoryRESTAPIMessageType": {
                    "description": "Specifies the Directory REST API message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "error"
                        ]
                    }
                }
                ,
                "signLog": {
                    "description": "Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.",
                    "type": "boolean"
                }
                ,
                "server": {
                    "description": "The JDBC-based Database Server to use for a connection.",
                    "type": "string"
                }
                ,
                "includeRequestDetailsInIntermediateResponseMessages": {
                    "description": "Indicates whether log messages for intermediate responses should include information about the associated operation request.",
                    "type": "boolean"
                }
                ,
                "syslogSeverity": {
                    "description": "The syslog severity to use for the messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                    , "enum": [
                        "emergency"
                        ,
                        "alert"
                        ,
                        "critical"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "notice"
                        ,
                        "informational"
                        ,
                        "debug"
                    ]
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.",
                    "type": "string"
                }
                ,
                "encryptLog": {
                    "description": "Indicates whether log files should be encrypted so that their content is not available to unauthorized users.",
                    "type": "boolean"
                }
                ,
                "serverPort": {
                    "description": "Specifies the port number of the syslogd host to log to.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Log Publisher is enabled for use.",
                    "type": "boolean"
                }
                ,
                "includeRequesterDN": {
                    "description": "Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.",
                    "type": "boolean"
                }
                ,
                "retentionPolicy": {
                    "description": "The retention policy to use for the Third Party File Based Access Log Publisher .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "loggingErrorBehavior": {
                    "description": "Specifies the behavior that the server should exhibit if an error occurs during logging processing.",
                    "type": "string"
                    , "enum": [
                        "standard-error"
                        ,
                        "lockdown-mode"
                    ]
                }
                ,
                "minIncludedPhaseTimeNanos": {
                    "description": "The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.",
                    "type": "integer"
                }
                ,
                "includeRequestDetailsInSearchReferenceMessages": {
                    "description": "Indicates whether log messages for search result references should include information about the associated search request.",
                    "type": "boolean"
                }
                ,
                "defaultOmitMethodEntryArguments": {
                    "description": "Indicates whether to include method arguments in debug messages logged by default.",
                    "type": "boolean"
                }
                ,
                "includeIntermediateClientRequestControl": {
                    "description": "Indicates whether to include information about any intermediate client request control that may have been included in the request.",
                    "type": "boolean"
                }
                ,
                "logResponseCookieNames": {
                    "description": "Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).",
                    "type": "boolean"
                }
                ,
                "resultCriteria": {
                    "description": "Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "logAssuranceCompleted": {
                    "description": "Indicates whether to log information about the result of replication assurance processing.",
                    "type": "boolean"
                }
                ,
                "compressionMechanism": {
                    "description": "Specifies the type of compression (if any) to use for log files that are written.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "gzip"
                    ]
                }
                ,
                "logRequestHeaders": {
                    "description": "Indicates whether request log messages should include information about HTTP headers included in the request.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "header-names"
                        ,
                        "header-names-and-values"
                    ]
                }
                ,
                "defaultSeverity": {
                    "description": "Specifies the default severity levels for the logger.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "all"
                            ,
                            "none"
                            ,
                            "fatal-error"
                            ,
                            "info"
                            ,
                            "mild-error"
                            ,
                            "mild-warning"
                            ,
                            "notice"
                            ,
                            "severe-error"
                            ,
                            "severe-warning"
                            ,
                            "debug"
                        ]
                    }
                }
                ,
                "searchReferenceCriteria": {
                    "description": "Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includeResponseControls": {
                    "description": "Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.",
                    "type": "boolean"
                }
                ,
                "logRequests": {
                    "description": "Indicates whether to log information about requests received from clients.",
                    "type": "boolean"
                }
                ,
                "maxStringLength": {
                    "description": "Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.",
                    "type": "integer"
                }
                ,
                "logIntermediateResponses": {
                    "description": "Indicates whether to log information about intermediate responses sent to the client.",
                    "type": "boolean"
                }
                ,
                "includeResultCodeNames": {
                    "description": "Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.",
                    "type": "boolean"
                }
                ,
                "writeMultiLineMessages": {
                    "description": "Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.",
                    "type": "boolean"
                }
                ,
                "logSecurityNegotiation": {
                    "description": "Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.",
                    "type": "boolean"
                }
                ,
                "defaultIncludeThrowableCause": {
                    "description": "Indicates whether to include the cause of exceptions in exception thrown and caught messages logged by default.",
                    "type": "boolean"
                }
                ,
                "suppressInternalOperations": {
                    "description": "Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.",
                    "type": "boolean"
                }
                ,
                "outputLocation": {
                    "description": "Specifies the output stream to which JSON-formatted error log messages should be written.",
                    "type": "string"
                    , "enum": [
                        "standard-output"
                        ,
                        "standard-error"
                    ]
                }
                ,
                "logRequestAuthorizationType": {
                    "description": "Indicates whether to log the type of credentials given if an \"Authorization\" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the \"Authorization\" header.",
                    "type": "boolean"
                }
                ,
                "obscureSensitiveContent": {
                    "description": "Indicates whether the resulting log file should attempt to obscure content that may be considered sensitive. This primarily includes the credentials for bind requests, the values of password modify extended requests and responses, and the values of any attributes specified in the obscure-attribute property. Note that the use of this option does not guarantee no sensitive information will be exposed, so the log output should still be carefully guarded.",
                    "type": "boolean"
                }
                ,
                "includeModifyAttributeNames": {
                    "description": "Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.",
                    "type": "boolean"
                }
                ,
                "rotationListener": {
                    "description": "A listener that should be notified whenever a log file is rotated out of service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "serverHostName": {
                    "description": "Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.",
                    "type": "string"
                }
                ,
                "defaultThrowableStackFrames": {
                    "description": "Indicates the number of stack frames to include in the stack trace for method entry and exception thrown messages.",
                    "type": "integer"
                }
                ,
                "includeOperationPurposeRequestControl": {
                    "description": "Indicates whether to include information about any operation purpose request control that may have been included in the request.",
                    "type": "boolean"
                }
                ,
                "consentMessageType": {
                    "description": "Specifies the consent message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "consent-created"
                            ,
                            "consent-updated"
                            ,
                            "consent-deleted"
                            ,
                            "consent-retrieved"
                            ,
                            "consent-search"
                            ,
                            "definition-created"
                            ,
                            "definition-updated"
                            ,
                            "definition-deleted"
                            ,
                            "definition-retrieved"
                            ,
                            "definition-search"
                            ,
                            "localization-created"
                            ,
                            "localization-updated"
                            ,
                            "localization-deleted"
                            ,
                            "localization-retrieved"
                            ,
                            "localization-search"
                            ,
                            "error"
                            ,
                            "audit"
                        ]
                    }
                }
                ,
                "includeReplicationChangeID": {
                    "description": "Indicates whether to log information about the replication change ID.",
                    "type": "boolean"
                }
                ,
                "includeThreadID": {
                    "description": "Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.",
                    "type": "boolean"
                }
                ,
                "debugMessageType": {
                    "description": "Specifies the debug message types which can be logged. Note that enabling these may result in sensitive information being logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "http-full-request-and-response"
                            ,
                            "ldap-external-server-request"
                            ,
                            "server-sdk-extension"
                            ,
                            "store-adapter-mapping"
                            ,
                            "store-adapter-processing"
                            ,
                            "access-token-validator-request-and-response"
                            ,
                            "access-token-validator-processing"
                            ,
                            "id-token-validator-request-and-response"
                            ,
                            "id-token-validator-processing"
                            ,
                            "consent-service-request-and-response"
                            ,
                            "gateway-request-and-response"
                            ,
                            "policy-request-and-response"
                        ]
                    }
                }
                ,
                "requestCriteria": {
                    "description": "Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includePathPattern": {
                    "description": "Specifies a set of HTTP request URL paths to determine whether log messages are included for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeStartupID": {
                    "description": "Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.",
                    "type": "boolean"
                }
                ,
                "connectionCriteria": {
                    "description": "Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.",
                    "type": "string"
                }
                ,
                "includeInstanceName": {
                    "description": "Indicates whether log messages should include the instance name for the Directory Server.",
                    "type": "boolean"
                }
                ,
                "extensionMessageType": {
                    "description": "Specifies the Server SDK extension message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "error"
                            ,
                            "warning"
                            ,
                            "notice"
                            ,
                            "info"
                        ]
                    }
                }
                ,
                "logRequestProtocol": {
                    "description": "Indicates whether request log messages should include information about the HTTP version specified in the request.",
                    "type": "boolean"
                }
                ,
                "defaultOmitMethodReturnValue": {
                    "description": "Indicates whether to include the return value in debug messages logged by default.",
                    "type": "boolean"
                }
                ,
                "minIncludedOperationProcessingTime": {
                    "description": "The minimum processing time (i.e., \"etime\") for operations that should be logged by this Operation Timing Access Log Publisher",
                    "type": "string"
                }
                ,
                "logFile": {
                    "description": "The file name to use for the log files generated by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.",
                    "type": "string"
                }
                ,
                "logFilePermissions": {
                    "description": "The UNIX permissions of the log files created by this Third Party File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "timestampPrecision": {
                    "description": "Specifies the smallest time unit to be included in timestamps.",
                    "type": "string"
                    , "enum": [
                        "seconds"
                        ,
                        "milliseconds"
                    ]
                }
                ,
                "logRedirectURI": {
                    "description": "Indicates whether the redirect URI (i.e., the value of the \"Location\" header from responses) should be included in response log messages.",
                    "type": "boolean"
                }
                ,
                "suppressedRequestParameterName": {
                    "description": "Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "logRequestParameters": {
                    "description": "Indicates what (if any) information about request parameters should be included in request log messages. Note that this will only be used for requests with a method other than GET, since GET request parameters will be included in the request URL.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "parameter-names"
                        ,
                        "parameter-names-and-values"
                    ]
                }
                ,
                "logConnects": {
                    "description": "Indicates whether to log information about connections established to the server.",
                    "type": "boolean"
                }
                ,
                "defaultDebugCategory": {
                    "description": "The debug message categories to be logged when none of the defined targets match the message.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "caught"
                            ,
                            "constructor"
                            ,
                            "data"
                            ,
                            "database-access"
                            ,
                            "enter"
                            ,
                            "exit"
                            ,
                            "message"
                            ,
                            "protocol"
                            ,
                            "thrown"
                        ]
                    }
                }
                ,
                "includeProductName": {
                    "description": "Indicates whether log messages should include the product name for the Directory Server.",
                    "type": "boolean"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includeRequestDetailsInSearchEntryMessages": {
                    "description": "Indicates whether log messages for search result entries should include information about the associated search request.",
                    "type": "boolean"
                }
                ,
                "logSearchEntries": {
                    "description": "Indicates whether to log information about search result entries sent to the client.",
                    "type": "boolean"
                }
                ,
                "syslogMessageHostName": {
                    "description": "The local host name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                }
                ,
                "excludeAttribute": {
                    "description": "Specifies the names of any attribute types that should be excluded from the audit log.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Log Publisher",
                    "type": "string"
                }
                ,
                "softDeleteEntryAuditBehavior": {
                    "description": "Specifies the audit behavior for delete and modify operations on soft-deleted entries.",
                    "type": "string"
                    , "enum": [
                        "included"
                        ,
                        "excluded"
                    ]
                }
                ,
                "includeRequesterIPAddress": {
                    "description": "Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.",
                    "type": "boolean"
                }
                ,
                "searchEntryCriteria": {
                    "description": "Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "excludePathPattern": {
                    "description": "Specifies a set of HTTP request URL paths to determine whether log messages are excluded for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "asynchronous": {
                    "description": "Indicates whether the Syslog Based Error Log Publisher will publish records asynchronously.",
                    "type": "boolean"
                }
                ,
                "timeInterval": {
                    "description": "Specifies the interval at which to check whether the log files need to be rotated.",
                    "type": "string"
                }
                ,
                "logRequestCookieNames": {
                    "description": "Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).",
                    "type": "boolean"
                }
                ,
                "scimMessageType": {
                    "description": "Specifies the SCIM message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "request"
                            ,
                            "result"
                            ,
                            "internal-request"
                            ,
                            "internal-result"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeExtendedSearchRequestDetails": {
                    "description": "Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.",
                    "type": "boolean"
                }
                ,
                "queueSize": {
                    "description": "The maximum number of log records that can be stored in the asynchronous queue.",
                    "type": "integer"
                }
                ,
                "accessTokenValidatorMessageType": {
                    "description": "Specifies the access token validator message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "subject-lookup"
                            ,
                            "external-server-request"
                            ,
                            "external-server-response"
                            ,
                            "validation"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "includeSearchEntryAttributeNames": {
                    "description": "Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.",
                    "type": "boolean"
                }
                ,
                "syslogFacility": {
                    "description": "The syslog facility to use for the messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                    , "enum": [
                        "user-level-messages"
                        ,
                        "system-daemons"
                        ,
                        "security-and-authorization"
                        ,
                        "security-and-authorization-alternative"
                        ,
                        "log-audit"
                        ,
                        "log-alert"
                        ,
                        "local-use-0"
                        ,
                        "local-use-1"
                        ,
                        "local-use-2"
                        ,
                        "local-use-3"
                        ,
                        "local-use-4"
                        ,
                        "local-use-5"
                        ,
                        "local-use-6"
                        ,
                        "local-use-7"
                        ,
                        "kernel-messages"
                        ,
                        "mail-system"
                        ,
                        "syslogd-internal-messages"
                        ,
                        "line-printer"
                        ,
                        "network-news"
                        ,
                        "uucp"
                        ,
                        "clock-daemon"
                        ,
                        "ftp-daemon"
                        ,
                        "ntp-daemon"
                        ,
                        "clock-daemon-alternative"
                    ]
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "debugACIEnabled": {
                    "description": "Indicates whether to include debugging information about ACIs being used by the operations being logged.",
                    "type": "boolean"
                }
                ,
                "syslogExternalServer": {
                    "description": "The syslog server to which messages should be sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "defaultDebugLevel": {
                    "description": "The lowest severity level of debug messages to log when none of the defined targets match the message.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "verbose"
                        ,
                        "all"
                    ]
                }
                ,
                "logClientCertificates": {
                    "description": "Indicates whether to log information about any client certificates presented to the server.",
                    "type": "boolean"
                }
                ,
                "logResults": {
                    "description": "Indicates whether to log information about the results of client requests.",
                    "type": "boolean"
                }
                ,
                "includeRequestDetailsInResultMessages": {
                    "description": "Indicates whether log messages for operation results should include information about both the request and the result.",
                    "type": "boolean"
                }
                ,
                "logFieldBehavior": {
                    "description": "The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.",
                    "type": "string"
                }
                ,
                "append": {
                    "description": "Specifies whether to append to existing log files.",
                    "type": "boolean"
                }
                ,
                "useReversibleForm": {
                    "description": "Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.",
                    "type": "boolean"
                }
                ,
                "bufferSize": {
                    "description": "Specifies the log file buffer size.",
                    "type": "string"
                }
            }
        },
        "log-publisher-properties": {
            "id": "log-publisher-properties",
            "description": "Log Publisher properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:operation-timing-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:admin-alert-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-trace"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:common-log-file-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-debug"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:detailed-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:debug-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-audit"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-access"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-http-operation"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-error"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-http-operation"
                        ]
                    }
                },
                "suppressedResponseHeaderName": {
                    "description": "Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "idTokenValidatorMessageType": {
                    "description": "Specifies the ID token validator message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "external-server-request"
                            ,
                            "external-server-response"
                            ,
                            "validation"
                            ,
                            "warning"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "logTableName": {
                    "description": "The table name to log entries to the database server.",
                    "type": "string"
                }
                ,
                "logSearchReferences": {
                    "description": "Indicates whether to log information about search result references sent to the client.",
                    "type": "boolean"
                }
                ,
                "suppressedRequestHeaderName": {
                    "description": "Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "logResponseHeaders": {
                    "description": "Indicates whether response log messages should include information about HTTP headers included in the response.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "header-names"
                        ,
                        "header-names-and-values"
                    ]
                }
                ,
                "suppressReplicationOperations": {
                    "description": "Indicates whether access messages that are generated by replication operations should be suppressed.",
                    "type": "boolean"
                }
                ,
                "logFieldMapping": {
                    "description": "The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.",
                    "type": "string"
                }
                ,
                "httpMessageType": {
                    "description": "Specifies the HTTP message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "request"
                            ,
                            "response"
                        ]
                    }
                }
                ,
                "logDisconnects": {
                    "description": "Indicates whether to log information about connections that have been closed by the client or terminated by the server.",
                    "type": "boolean"
                }
                ,
                "overrideSeverity": {
                    "description": "Specifies the override severity levels for the logger based on the category of the messages.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "rotationPolicy": {
                    "description": "The rotation policy to use for the Third Party File Based Access Log Publisher .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "generifyMessageStringsWhenPossible": {
                    "description": "Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.",
                    "type": "boolean"
                }
                ,
                "syslogMessageApplicationName": {
                    "description": "The application name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                }
                ,
                "includeRequestControls": {
                    "description": "Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.",
                    "type": "boolean"
                }
                ,
                "correlateRequestsAndResults": {
                    "description": "Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.",
                    "type": "boolean"
                }
                ,
                "obscureAttribute": {
                    "description": "Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "autoFlush": {
                    "description": "Specifies whether to flush the writer after every log record.",
                    "type": "boolean"
                }
                ,
                "includeAddAttributeNames": {
                    "description": "Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.",
                    "type": "boolean"
                }
                ,
                "directoryRESTAPIMessageType": {
                    "description": "Specifies the Directory REST API message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "error"
                        ]
                    }
                }
                ,
                "signLog": {
                    "description": "Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.",
                    "type": "boolean"
                }
                ,
                "server": {
                    "description": "The JDBC-based Database Server to use for a connection.",
                    "type": "string"
                }
                ,
                "includeRequestDetailsInIntermediateResponseMessages": {
                    "description": "Indicates whether log messages for intermediate responses should include information about the associated operation request.",
                    "type": "boolean"
                }
                ,
                "syslogSeverity": {
                    "description": "The syslog severity to use for the messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                    , "enum": [
                        "emergency"
                        ,
                        "alert"
                        ,
                        "critical"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "notice"
                        ,
                        "informational"
                        ,
                        "debug"
                    ]
                }
                ,
                "encryptionSettingsDefinitionID": {
                    "description": "Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.",
                    "type": "string"
                }
                ,
                "encryptLog": {
                    "description": "Indicates whether log files should be encrypted so that their content is not available to unauthorized users.",
                    "type": "boolean"
                }
                ,
                "serverPort": {
                    "description": "Specifies the port number of the syslogd host to log to.",
                    "type": "integer"
                }
                ,
                "enabled": {
                    "description": "Indicates whether the Log Publisher is enabled for use.",
                    "type": "boolean"
                }
                ,
                "includeRequesterDN": {
                    "description": "Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.",
                    "type": "boolean"
                }
                ,
                "retentionPolicy": {
                    "description": "The retention policy to use for the Third Party File Based Access Log Publisher .",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "loggingErrorBehavior": {
                    "description": "Specifies the behavior that the server should exhibit if an error occurs during logging processing.",
                    "type": "string"
                    , "enum": [
                        "standard-error"
                        ,
                        "lockdown-mode"
                    ]
                }
                ,
                "minIncludedPhaseTimeNanos": {
                    "description": "The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.",
                    "type": "integer"
                }
                ,
                "includeRequestDetailsInSearchReferenceMessages": {
                    "description": "Indicates whether log messages for search result references should include information about the associated search request.",
                    "type": "boolean"
                }
                ,
                "defaultOmitMethodEntryArguments": {
                    "description": "Indicates whether to include method arguments in debug messages logged by default.",
                    "type": "boolean"
                }
                ,
                "includeIntermediateClientRequestControl": {
                    "description": "Indicates whether to include information about any intermediate client request control that may have been included in the request.",
                    "type": "boolean"
                }
                ,
                "logResponseCookieNames": {
                    "description": "Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).",
                    "type": "boolean"
                }
                ,
                "resultCriteria": {
                    "description": "Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "logAssuranceCompleted": {
                    "description": "Indicates whether to log information about the result of replication assurance processing.",
                    "type": "boolean"
                }
                ,
                "compressionMechanism": {
                    "description": "Specifies the type of compression (if any) to use for log files that are written.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "gzip"
                    ]
                }
                ,
                "logRequestHeaders": {
                    "description": "Indicates whether request log messages should include information about HTTP headers included in the request.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "header-names"
                        ,
                        "header-names-and-values"
                    ]
                }
                ,
                "defaultSeverity": {
                    "description": "Specifies the default severity levels for the logger.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "all"
                            ,
                            "none"
                            ,
                            "fatal-error"
                            ,
                            "info"
                            ,
                            "mild-error"
                            ,
                            "mild-warning"
                            ,
                            "notice"
                            ,
                            "severe-error"
                            ,
                            "severe-warning"
                            ,
                            "debug"
                        ]
                    }
                }
                ,
                "searchReferenceCriteria": {
                    "description": "Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includeResponseControls": {
                    "description": "Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.",
                    "type": "boolean"
                }
                ,
                "logRequests": {
                    "description": "Indicates whether to log information about requests received from clients.",
                    "type": "boolean"
                }
                ,
                "maxStringLength": {
                    "description": "Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.",
                    "type": "integer"
                }
                ,
                "logIntermediateResponses": {
                    "description": "Indicates whether to log information about intermediate responses sent to the client.",
                    "type": "boolean"
                }
                ,
                "includeResultCodeNames": {
                    "description": "Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.",
                    "type": "boolean"
                }
                ,
                "writeMultiLineMessages": {
                    "description": "Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.",
                    "type": "boolean"
                }
                ,
                "logSecurityNegotiation": {
                    "description": "Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.",
                    "type": "boolean"
                }
                ,
                "defaultIncludeThrowableCause": {
                    "description": "Indicates whether to include the cause of exceptions in exception thrown and caught messages logged by default.",
                    "type": "boolean"
                }
                ,
                "suppressInternalOperations": {
                    "description": "Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.",
                    "type": "boolean"
                }
                ,
                "outputLocation": {
                    "description": "Specifies the output stream to which JSON-formatted error log messages should be written.",
                    "type": "string"
                    , "enum": [
                        "standard-output"
                        ,
                        "standard-error"
                    ]
                }
                ,
                "logRequestAuthorizationType": {
                    "description": "Indicates whether to log the type of credentials given if an \"Authorization\" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the \"Authorization\" header.",
                    "type": "boolean"
                }
                ,
                "obscureSensitiveContent": {
                    "description": "Indicates whether the resulting log file should attempt to obscure content that may be considered sensitive. This primarily includes the credentials for bind requests, the values of password modify extended requests and responses, and the values of any attributes specified in the obscure-attribute property. Note that the use of this option does not guarantee no sensitive information will be exposed, so the log output should still be carefully guarded.",
                    "type": "boolean"
                }
                ,
                "includeModifyAttributeNames": {
                    "description": "Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.",
                    "type": "boolean"
                }
                ,
                "rotationListener": {
                    "description": "A listener that should be notified whenever a log file is rotated out of service.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "serverHostName": {
                    "description": "Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.",
                    "type": "string"
                }
                ,
                "defaultThrowableStackFrames": {
                    "description": "Indicates the number of stack frames to include in the stack trace for method entry and exception thrown messages.",
                    "type": "integer"
                }
                ,
                "includeOperationPurposeRequestControl": {
                    "description": "Indicates whether to include information about any operation purpose request control that may have been included in the request.",
                    "type": "boolean"
                }
                ,
                "consentMessageType": {
                    "description": "Specifies the consent message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "consent-created"
                            ,
                            "consent-updated"
                            ,
                            "consent-deleted"
                            ,
                            "consent-retrieved"
                            ,
                            "consent-search"
                            ,
                            "definition-created"
                            ,
                            "definition-updated"
                            ,
                            "definition-deleted"
                            ,
                            "definition-retrieved"
                            ,
                            "definition-search"
                            ,
                            "localization-created"
                            ,
                            "localization-updated"
                            ,
                            "localization-deleted"
                            ,
                            "localization-retrieved"
                            ,
                            "localization-search"
                            ,
                            "error"
                            ,
                            "audit"
                        ]
                    }
                }
                ,
                "includeReplicationChangeID": {
                    "description": "Indicates whether to log information about the replication change ID.",
                    "type": "boolean"
                }
                ,
                "includeThreadID": {
                    "description": "Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.",
                    "type": "boolean"
                }
                ,
                "debugMessageType": {
                    "description": "Specifies the debug message types which can be logged. Note that enabling these may result in sensitive information being logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "http-full-request-and-response"
                            ,
                            "ldap-external-server-request"
                            ,
                            "server-sdk-extension"
                            ,
                            "store-adapter-mapping"
                            ,
                            "store-adapter-processing"
                            ,
                            "access-token-validator-request-and-response"
                            ,
                            "access-token-validator-processing"
                            ,
                            "id-token-validator-request-and-response"
                            ,
                            "id-token-validator-processing"
                            ,
                            "consent-service-request-and-response"
                            ,
                            "gateway-request-and-response"
                            ,
                            "policy-request-and-response"
                        ]
                    }
                }
                ,
                "requestCriteria": {
                    "description": "Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includePathPattern": {
                    "description": "Specifies a set of HTTP request URL paths to determine whether log messages are included for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeStartupID": {
                    "description": "Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.",
                    "type": "boolean"
                }
                ,
                "connectionCriteria": {
                    "description": "Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.",
                    "type": "string"
                }
                ,
                "includeInstanceName": {
                    "description": "Indicates whether log messages should include the instance name for the Directory Server.",
                    "type": "boolean"
                }
                ,
                "extensionMessageType": {
                    "description": "Specifies the Server SDK extension message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "error"
                            ,
                            "warning"
                            ,
                            "notice"
                            ,
                            "info"
                        ]
                    }
                }
                ,
                "logRequestProtocol": {
                    "description": "Indicates whether request log messages should include information about the HTTP version specified in the request.",
                    "type": "boolean"
                }
                ,
                "defaultOmitMethodReturnValue": {
                    "description": "Indicates whether to include the return value in debug messages logged by default.",
                    "type": "boolean"
                }
                ,
                "minIncludedOperationProcessingTime": {
                    "description": "The minimum processing time (i.e., \"etime\") for operations that should be logged by this Operation Timing Access Log Publisher",
                    "type": "string"
                }
                ,
                "logFile": {
                    "description": "The file name to use for the log files generated by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.",
                    "type": "string"
                }
                ,
                "logFilePermissions": {
                    "description": "The UNIX permissions of the log files created by this Third Party File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "timestampPrecision": {
                    "description": "Specifies the smallest time unit to be included in timestamps.",
                    "type": "string"
                    , "enum": [
                        "seconds"
                        ,
                        "milliseconds"
                    ]
                }
                ,
                "logRedirectURI": {
                    "description": "Indicates whether the redirect URI (i.e., the value of the \"Location\" header from responses) should be included in response log messages.",
                    "type": "boolean"
                }
                ,
                "suppressedRequestParameterName": {
                    "description": "Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "logRequestParameters": {
                    "description": "Indicates what (if any) information about request parameters should be included in request log messages. Note that this will only be used for requests with a method other than GET, since GET request parameters will be included in the request URL.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "parameter-names"
                        ,
                        "parameter-names-and-values"
                    ]
                }
                ,
                "logConnects": {
                    "description": "Indicates whether to log information about connections established to the server.",
                    "type": "boolean"
                }
                ,
                "defaultDebugCategory": {
                    "description": "The debug message categories to be logged when none of the defined targets match the message.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "caught"
                            ,
                            "constructor"
                            ,
                            "data"
                            ,
                            "database-access"
                            ,
                            "enter"
                            ,
                            "exit"
                            ,
                            "message"
                            ,
                            "protocol"
                            ,
                            "thrown"
                        ]
                    }
                }
                ,
                "includeProductName": {
                    "description": "Indicates whether log messages should include the product name for the Directory Server.",
                    "type": "boolean"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "includeRequestDetailsInSearchEntryMessages": {
                    "description": "Indicates whether log messages for search result entries should include information about the associated search request.",
                    "type": "boolean"
                }
                ,
                "logSearchEntries": {
                    "description": "Indicates whether to log information about search result entries sent to the client.",
                    "type": "boolean"
                }
                ,
                "syslogMessageHostName": {
                    "description": "The local host name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                }
                ,
                "excludeAttribute": {
                    "description": "Specifies the names of any attribute types that should be excluded from the audit log.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this Log Publisher",
                    "type": "string"
                }
                ,
                "softDeleteEntryAuditBehavior": {
                    "description": "Specifies the audit behavior for delete and modify operations on soft-deleted entries.",
                    "type": "string"
                    , "enum": [
                        "included"
                        ,
                        "excluded"
                    ]
                }
                ,
                "includeRequesterIPAddress": {
                    "description": "Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.",
                    "type": "boolean"
                }
                ,
                "searchEntryCriteria": {
                    "description": "Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.",
                    "type": "string"
                }
                ,
                "excludePathPattern": {
                    "description": "Specifies a set of HTTP request URL paths to determine whether log messages are excluded for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "asynchronous": {
                    "description": "Indicates whether the Syslog Based Error Log Publisher will publish records asynchronously.",
                    "type": "boolean"
                }
                ,
                "timeInterval": {
                    "description": "Specifies the interval at which to check whether the log files need to be rotated.",
                    "type": "string"
                }
                ,
                "logRequestCookieNames": {
                    "description": "Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).",
                    "type": "boolean"
                }
                ,
                "scimMessageType": {
                    "description": "Specifies the SCIM message types which can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "request"
                            ,
                            "result"
                            ,
                            "internal-request"
                            ,
                            "internal-result"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeExtendedSearchRequestDetails": {
                    "description": "Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.",
                    "type": "boolean"
                }
                ,
                "queueSize": {
                    "description": "The maximum number of log records that can be stored in the asynchronous queue.",
                    "type": "integer"
                }
                ,
                "accessTokenValidatorMessageType": {
                    "description": "Specifies the access token validator message types that can be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "subject-lookup"
                            ,
                            "external-server-request"
                            ,
                            "external-server-response"
                            ,
                            "validation"
                            ,
                            "error"
                        ]
                    }
                }
                ,
                "includeSearchEntryAttributeNames": {
                    "description": "Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.",
                    "type": "boolean"
                }
                ,
                "syslogFacility": {
                    "description": "The syslog facility to use for the messages that are logged by this Syslog JSON Audit Log Publisher.",
                    "type": "string"
                    , "enum": [
                        "user-level-messages"
                        ,
                        "system-daemons"
                        ,
                        "security-and-authorization"
                        ,
                        "security-and-authorization-alternative"
                        ,
                        "log-audit"
                        ,
                        "log-alert"
                        ,
                        "local-use-0"
                        ,
                        "local-use-1"
                        ,
                        "local-use-2"
                        ,
                        "local-use-3"
                        ,
                        "local-use-4"
                        ,
                        "local-use-5"
                        ,
                        "local-use-6"
                        ,
                        "local-use-7"
                        ,
                        "kernel-messages"
                        ,
                        "mail-system"
                        ,
                        "syslogd-internal-messages"
                        ,
                        "line-printer"
                        ,
                        "network-news"
                        ,
                        "uucp"
                        ,
                        "clock-daemon"
                        ,
                        "ftp-daemon"
                        ,
                        "ntp-daemon"
                        ,
                        "clock-daemon-alternative"
                    ]
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Access Log Publisher.",
                    "type": "string"
                }
                ,
                "debugACIEnabled": {
                    "description": "Indicates whether to include debugging information about ACIs being used by the operations being logged.",
                    "type": "boolean"
                }
                ,
                "syslogExternalServer": {
                    "description": "The syslog server to which messages should be sent.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "defaultDebugLevel": {
                    "description": "The lowest severity level of debug messages to log when none of the defined targets match the message.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "verbose"
                        ,
                        "all"
                    ]
                }
                ,
                "logClientCertificates": {
                    "description": "Indicates whether to log information about any client certificates presented to the server.",
                    "type": "boolean"
                }
                ,
                "logResults": {
                    "description": "Indicates whether to log information about the results of client requests.",
                    "type": "boolean"
                }
                ,
                "includeRequestDetailsInResultMessages": {
                    "description": "Indicates whether log messages for operation results should include information about both the request and the result.",
                    "type": "boolean"
                }
                ,
                "logFieldBehavior": {
                    "description": "The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.",
                    "type": "string"
                }
                ,
                "append": {
                    "description": "Specifies whether to append to existing log files.",
                    "type": "boolean"
                }
                ,
                "useReversibleForm": {
                    "description": "Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.",
                    "type": "boolean"
                }
                ,
                "bufferSize": {
                    "description": "Specifies the log file buffer size.",
                    "type": "string"
                }
            }
        }
        ,
        "debug-target-list-response": {
            "id": "debug-target-list-response",
            "description": "Debug Target list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "debug-target-response"
                    }
                }
            }
        },
        "add-debug-target-request": {
            "id": "add-debug-target-request",
            "description": "A Debug Target resource request",
            "required": [
                "targetName"
            ],
            "properties": {
                "targetName": {
                    "type": "string",
                    "description": "Name of the new Debug Target"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:debug-target"
                        ]
                    }
                },
                "omitMethodEntryArguments": {
                    "description": "Specifies the property to indicate whether to include method arguments in debug messages.",
                    "type": "boolean"
                }
                ,
                "debugCategory": {
                    "description": "Specifies the debug message categories to be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "caught"
                            ,
                            "constructor"
                            ,
                            "data"
                            ,
                            "database-access"
                            ,
                            "enter"
                            ,
                            "exit"
                            ,
                            "message"
                            ,
                            "protocol"
                            ,
                            "thrown"
                        ]
                    }
                }
                ,
                "omitMethodReturnValue": {
                    "description": "Specifies the property to indicate whether to include the return value in debug messages.",
                    "type": "boolean"
                }
                ,
                "includeThrowableCause": {
                    "description": "Specifies the property to indicate whether to include the cause of exceptions in exception thrown and caught messages.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this Debug Target",
                    "type": "string"
                }
                ,
                "throwableStackFrames": {
                    "description": "Specifies the property to indicate the number of stack frames to include in the stack trace for method entry and exception thrown messages.",
                    "type": "integer"
                }
                ,
                "debugScope": {
                    "description": "Specifies the fully-qualified Java package, class, or method affected by the settings in this target definition. Use the number character (#) to separate the class name and the method name (that is, com.unboundid.directory.server.core.DirectoryServer#startUp).",
                    "type": "string"
                }
                ,
                "debugLevel": {
                    "description": "Specifies the lowest severity level of debug messages to log.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "verbose"
                        ,
                        "all"
                    ]
                }
            }
        },
        "debug-target-response": {
            "id": "debug-target-response",
            "description": "A Debug Target resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:debug-target"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Debug Target"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "omitMethodEntryArguments": {
                    "description": "Specifies the property to indicate whether to include method arguments in debug messages.",
                    "type": "boolean"
                }
                ,
                "debugCategory": {
                    "description": "Specifies the debug message categories to be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "caught"
                            ,
                            "constructor"
                            ,
                            "data"
                            ,
                            "database-access"
                            ,
                            "enter"
                            ,
                            "exit"
                            ,
                            "message"
                            ,
                            "protocol"
                            ,
                            "thrown"
                        ]
                    }
                }
                ,
                "omitMethodReturnValue": {
                    "description": "Specifies the property to indicate whether to include the return value in debug messages.",
                    "type": "boolean"
                }
                ,
                "includeThrowableCause": {
                    "description": "Specifies the property to indicate whether to include the cause of exceptions in exception thrown and caught messages.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this Debug Target",
                    "type": "string"
                }
                ,
                "throwableStackFrames": {
                    "description": "Specifies the property to indicate the number of stack frames to include in the stack trace for method entry and exception thrown messages.",
                    "type": "integer"
                }
                ,
                "debugScope": {
                    "description": "Specifies the fully-qualified Java package, class, or method affected by the settings in this target definition. Use the number character (#) to separate the class name and the method name (that is, com.unboundid.directory.server.core.DirectoryServer#startUp).",
                    "type": "string"
                }
                ,
                "debugLevel": {
                    "description": "Specifies the lowest severity level of debug messages to log.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "verbose"
                        ,
                        "all"
                    ]
                }
            }
        },
        "debug-target-properties": {
            "id": "debug-target-properties",
            "description": "Debug Target properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:debug-target"
                        ]
                    }
                },
                "omitMethodEntryArguments": {
                    "description": "Specifies the property to indicate whether to include method arguments in debug messages.",
                    "type": "boolean"
                }
                ,
                "debugCategory": {
                    "description": "Specifies the debug message categories to be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "caught"
                            ,
                            "constructor"
                            ,
                            "data"
                            ,
                            "database-access"
                            ,
                            "enter"
                            ,
                            "exit"
                            ,
                            "message"
                            ,
                            "protocol"
                            ,
                            "thrown"
                        ]
                    }
                }
                ,
                "omitMethodReturnValue": {
                    "description": "Specifies the property to indicate whether to include the return value in debug messages.",
                    "type": "boolean"
                }
                ,
                "includeThrowableCause": {
                    "description": "Specifies the property to indicate whether to include the cause of exceptions in exception thrown and caught messages.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this Debug Target",
                    "type": "string"
                }
                ,
                "throwableStackFrames": {
                    "description": "Specifies the property to indicate the number of stack frames to include in the stack trace for method entry and exception thrown messages.",
                    "type": "integer"
                }
                ,
                "debugScope": {
                    "description": "Specifies the fully-qualified Java package, class, or method affected by the settings in this target definition. Use the number character (#) to separate the class name and the method name (that is, com.unboundid.directory.server.core.DirectoryServer#startUp).",
                    "type": "string"
                }
                ,
                "debugLevel": {
                    "description": "Specifies the lowest severity level of debug messages to log.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "error"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "verbose"
                        ,
                        "all"
                    ]
                }
            }
        }
    }
}
