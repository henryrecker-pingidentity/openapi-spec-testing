{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/json-attribute-constraints",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all JSON Attribute Constraints objects",
                    "type": "json-attribute-constraints-list-response",
                    "nickname": "list-json-attribute-constraints",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new JSON Attribute Constraints to the config",
                    "nickname": "add-json-attribute-constraints",
                    "type": "json-attribute-constraints-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "JSON Attribute Constraints to add",
                            "name": "add-json-attribute-constraints-request",
                            "type": "add-json-attribute-constraints-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/json-attribute-constraints/{json-attribute-constraints-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single JSON Attribute Constraints",
                    "type": "json-attribute-constraints-response",
                    "nickname": "get-json-attribute-constraints",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "json-attribute-constraints-name",
                          "description": "Name of the JSON Attribute Constraints",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing JSON Attribute Constraints by name, replacing any attributes specified in the request body",
                    "type": "json-attribute-constraints-response",
                    "nickname": "put-json-attribute-constraints",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "json-attribute-constraints-name",
                          "description": "Name of the JSON Attribute Constraints",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "JSON Attribute Constraints attributes to update",
                            "name": "json-attribute-constraints-properties",
                            "type": "json-attribute-constraints-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing JSON Attribute Constraints by name, using a SCIM patch request",
                    "type": "json-attribute-constraints-response",
                    "nickname": "patch-json-attribute-constraints",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "json-attribute-constraints-name",
                          "description": "Name of the JSON Attribute Constraints",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the JSON Attribute Constraints",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a JSON Attribute Constraints",
                    "nickname": "delete-json-attribute-constraints",
                    "parameters": [
                        {
                          "name": "json-attribute-constraints-name",
                          "description": "Name of the JSON Attribute Constraints",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/json-attribute-constraints/{json-attribute-constraints-name}/json-field-constraints",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all JSON Field Constraints objects",
                    "type": "json-field-constraints-list-response",
                    "nickname": "list-json-field-constraints",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "json-attribute-constraints-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new JSON Field Constraints to the config",
                    "nickname": "add-json-field-constraints",
                    "type": "json-field-constraints-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "json-attribute-constraints-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "JSON Field Constraints to add",
                            "name": "add-json-field-constraints-request",
                            "type": "add-json-field-constraints-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/json-attribute-constraints/{json-attribute-constraints-name}/json-field-constraints/{json-field-constraints-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single JSON Field Constraints",
                    "type": "json-field-constraints-response",
                    "nickname": "get-json-field-constraints",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "json-attribute-constraints-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "json-field-constraints-name",
                          "description": "Name of the JSON Field Constraints",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing JSON Field Constraints by name, replacing any attributes specified in the request body",
                    "type": "json-field-constraints-response",
                    "nickname": "put-json-field-constraints",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "json-attribute-constraints-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "json-field-constraints-name",
                          "description": "Name of the JSON Field Constraints",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "JSON Field Constraints attributes to update",
                            "name": "json-field-constraints-properties",
                            "type": "json-field-constraints-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing JSON Field Constraints by name, using a SCIM patch request",
                    "type": "json-field-constraints-response",
                    "nickname": "patch-json-field-constraints",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "json-attribute-constraints-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "json-field-constraints-name",
                          "description": "Name of the JSON Field Constraints",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the JSON Field Constraints",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a JSON Field Constraints",
                    "nickname": "delete-json-field-constraints",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "json-attribute-constraints-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "json-field-constraints-name",
                          "description": "Name of the JSON Field Constraints",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "json-attribute-constraints-list-response": {
            "id": "json-attribute-constraints-list-response",
            "description": "JSON Attribute Constraints list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "json-attribute-constraints-response"
                    }
                }
            }
        },
        "add-json-attribute-constraints-request": {
            "id": "add-json-attribute-constraints-request",
            "description": "A JSON Attribute Constraints resource request",
            "required": [
                "attributeType"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:json-attribute-constraints"
                        ]
                    }
                },
                "attributeType": {
                    "description": "The name or OID of the LDAP attribute type whose values will be subject to the associated field constraints. This attribute type must be defined in the server schema, and it must have a \"JSON object\" syntax.",
                    "type": "string"
                }
                ,
                "allowUnnamedFields": {
                    "description": "Indicates whether JSON objects stored as values of attributes with the associated attribute-type will be permitted to include fields for which there is no subordinate json-field-constraints definition. If unnamed fields are allowed, then no constraints will be imposed on the values of those fields. However, if unnamed fields are not allowed, then the server will reject any attempt to store a JSON object with a field for which there is no corresponding json-fields-constraints definition.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this JSON Attribute Constraints",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this JSON Attribute Constraints is enabled.",
                    "type": "boolean"
                }
            }
        },
        "json-attribute-constraints-response": {
            "id": "json-attribute-constraints-response",
            "description": "A JSON Attribute Constraints resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:json-attribute-constraints"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the JSON Attribute Constraints"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "attributeType": {
                    "description": "The name or OID of the LDAP attribute type whose values will be subject to the associated field constraints. This attribute type must be defined in the server schema, and it must have a \"JSON object\" syntax.",
                    "type": "string"
                }
                ,
                "allowUnnamedFields": {
                    "description": "Indicates whether JSON objects stored as values of attributes with the associated attribute-type will be permitted to include fields for which there is no subordinate json-field-constraints definition. If unnamed fields are allowed, then no constraints will be imposed on the values of those fields. However, if unnamed fields are not allowed, then the server will reject any attempt to store a JSON object with a field for which there is no corresponding json-fields-constraints definition.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this JSON Attribute Constraints",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this JSON Attribute Constraints is enabled.",
                    "type": "boolean"
                }
            }
        },
        "json-attribute-constraints-properties": {
            "id": "json-attribute-constraints-properties",
            "description": "JSON Attribute Constraints properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:json-attribute-constraints"
                        ]
                    }
                },
                "attributeType": {
                    "description": "The name or OID of the LDAP attribute type whose values will be subject to the associated field constraints. This attribute type must be defined in the server schema, and it must have a \"JSON object\" syntax.",
                    "type": "string"
                }
                ,
                "allowUnnamedFields": {
                    "description": "Indicates whether JSON objects stored as values of attributes with the associated attribute-type will be permitted to include fields for which there is no subordinate json-field-constraints definition. If unnamed fields are allowed, then no constraints will be imposed on the values of those fields. However, if unnamed fields are not allowed, then the server will reject any attempt to store a JSON object with a field for which there is no corresponding json-fields-constraints definition.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this JSON Attribute Constraints",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this JSON Attribute Constraints is enabled.",
                    "type": "boolean"
                }
            }
        }
        ,
        "json-field-constraints-list-response": {
            "id": "json-field-constraints-list-response",
            "description": "JSON Field Constraints list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "json-field-constraints-response"
                    }
                }
            }
        },
        "add-json-field-constraints-request": {
            "id": "add-json-field-constraints-request",
            "description": "A JSON Field Constraints resource request",
            "required": [
                "jsonField"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:json-field-constraints"
                        ]
                    }
                },
                "isRequired": {
                    "description": "Indicates whether the target field must be present in JSON objects stored as values of the associated attribute type.",
                    "type": "boolean"
                }
                ,
                "jsonField": {
                    "description": "The full name of the JSON field to which these constraints apply.",
                    "type": "string"
                }
                ,
                "tokenizeValues": {
                    "description": "Indicates whether the backend should attempt to assign a compact token for each distinct value for the target field in an attempt to reduce the encoded size of the field in JSON objects. These tokens would be assigned prior to using any from the token set used for automatic compaction of some JSON string values.",
                    "type": "boolean"
                }
                ,
                "allowEmptyObject": {
                    "description": "Indicates whether the target field may have a value that is an empty JSON object (i.e., a JSON object with zero fields). This may only be set to true if value-type property is set to object.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this JSON Field Constraints",
                    "type": "string"
                }
                ,
                "allowNullValue": {
                    "description": "Indicates whether the target field may have a value that is the JSON null value as an alternative to a value (or array of values) of the specified value-type.",
                    "type": "boolean"
                }
                ,
                "maximumValueCount": {
                    "description": "Specifies the largest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with more than this number of elements.",
                    "type": "integer"
                }
                ,
                "allowedValue": {
                    "description": "Specifies an explicit set of string values that will be the only values permitted for the target field. If a set of allowed values is defined, then the server will reject any attempt to store a JSON object with a value for the target field that is not included in that set.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "minimumValueLength": {
                    "description": "Specifies the smallest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is shorter than that minimum value length.",
                    "type": "integer"
                }
                ,
                "minimumNumericValue": {
                    "description": "Specifies the smallest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is less than that minimum numeric value.",
                    "type": "string"
                }
                ,
                "indexValues": {
                    "description": "Indicates whether backends that support JSON indexing should maintain an index for values of the target field.",
                    "type": "boolean"
                }
                ,
                "maximumValueLength": {
                    "description": "Specifies the largest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is longer than that maximum value length.",
                    "type": "integer"
                }
                ,
                "allowedValueRegularExpression": {
                    "description": "Specifies an explicit set of regular expressions that may be used to restrict the set of values that may be used for the target field. If a set of allowed value regular expressions is defined, then the server will reject any attempt to store a JSON object with a value for the target field that does not match at least one of those regular expressions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "maximumNumericValue": {
                    "description": "Specifies the largest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is greater than that maximum numeric value.",
                    "type": "string"
                }
                ,
                "valueType": {
                    "description": "The data type that will be required for values of the target field.",
                    "type": "string"
                    , "enum": [
                        "any"
                        ,
                        "boolean"
                        ,
                        "integer"
                        ,
                        "null"
                        ,
                        "number"
                        ,
                        "object"
                        ,
                        "string"
                    ]
                }
                ,
                "cacheMode": {
                    "description": "Specifies the behavior that the server should exhibit when caching data for the associated JSON index. This can be useful in environments in which the system does not have enough memory to fully cache the entire data set, as it makes it possible to prioritize which data is the most important to keep in memory.",
                    "type": "string"
                    , "enum": [
                        "cache-keys-and-values"
                        ,
                        "cache-keys-only"
                        ,
                        "no-caching"
                    ]
                }
                ,
                "isArray": {
                    "description": "Indicates whether the value of the target field may be an array of values rather than a single value. If this property is set to \"required\" or \"optional\", then the constraints defined for this field will be applied to each element of the array.",
                    "type": "string"
                    , "enum": [
                        "required"
                        ,
                        "optional"
                        ,
                        "prohibited"
                    ]
                }
                ,
                "indexEntryLimit": {
                    "description": "The maximum number of entries that may contain a particular value for the target field before the server will stop maintaining the index for that value.",
                    "type": "integer"
                }
                ,
                "primeIndex": {
                    "description": "Indicates whether backends that support database priming should load the contents of the associated JSON index into memory whenever the backend is opened.",
                    "type": "boolean"
                }
                ,
                "minimumValueCount": {
                    "description": "Specifies the smallest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with fewer than this number of elements.",
                    "type": "integer"
                }
            }
        },
        "json-field-constraints-response": {
            "id": "json-field-constraints-response",
            "description": "A JSON Field Constraints resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:json-field-constraints"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the JSON Field Constraints"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "isRequired": {
                    "description": "Indicates whether the target field must be present in JSON objects stored as values of the associated attribute type.",
                    "type": "boolean"
                }
                ,
                "jsonField": {
                    "description": "The full name of the JSON field to which these constraints apply.",
                    "type": "string"
                }
                ,
                "tokenizeValues": {
                    "description": "Indicates whether the backend should attempt to assign a compact token for each distinct value for the target field in an attempt to reduce the encoded size of the field in JSON objects. These tokens would be assigned prior to using any from the token set used for automatic compaction of some JSON string values.",
                    "type": "boolean"
                }
                ,
                "allowEmptyObject": {
                    "description": "Indicates whether the target field may have a value that is an empty JSON object (i.e., a JSON object with zero fields). This may only be set to true if value-type property is set to object.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this JSON Field Constraints",
                    "type": "string"
                }
                ,
                "allowNullValue": {
                    "description": "Indicates whether the target field may have a value that is the JSON null value as an alternative to a value (or array of values) of the specified value-type.",
                    "type": "boolean"
                }
                ,
                "maximumValueCount": {
                    "description": "Specifies the largest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with more than this number of elements.",
                    "type": "integer"
                }
                ,
                "allowedValue": {
                    "description": "Specifies an explicit set of string values that will be the only values permitted for the target field. If a set of allowed values is defined, then the server will reject any attempt to store a JSON object with a value for the target field that is not included in that set.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "minimumValueLength": {
                    "description": "Specifies the smallest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is shorter than that minimum value length.",
                    "type": "integer"
                }
                ,
                "minimumNumericValue": {
                    "description": "Specifies the smallest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is less than that minimum numeric value.",
                    "type": "string"
                }
                ,
                "indexValues": {
                    "description": "Indicates whether backends that support JSON indexing should maintain an index for values of the target field.",
                    "type": "boolean"
                }
                ,
                "maximumValueLength": {
                    "description": "Specifies the largest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is longer than that maximum value length.",
                    "type": "integer"
                }
                ,
                "allowedValueRegularExpression": {
                    "description": "Specifies an explicit set of regular expressions that may be used to restrict the set of values that may be used for the target field. If a set of allowed value regular expressions is defined, then the server will reject any attempt to store a JSON object with a value for the target field that does not match at least one of those regular expressions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "maximumNumericValue": {
                    "description": "Specifies the largest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is greater than that maximum numeric value.",
                    "type": "string"
                }
                ,
                "valueType": {
                    "description": "The data type that will be required for values of the target field.",
                    "type": "string"
                    , "enum": [
                        "any"
                        ,
                        "boolean"
                        ,
                        "integer"
                        ,
                        "null"
                        ,
                        "number"
                        ,
                        "object"
                        ,
                        "string"
                    ]
                }
                ,
                "cacheMode": {
                    "description": "Specifies the behavior that the server should exhibit when caching data for the associated JSON index. This can be useful in environments in which the system does not have enough memory to fully cache the entire data set, as it makes it possible to prioritize which data is the most important to keep in memory.",
                    "type": "string"
                    , "enum": [
                        "cache-keys-and-values"
                        ,
                        "cache-keys-only"
                        ,
                        "no-caching"
                    ]
                }
                ,
                "isArray": {
                    "description": "Indicates whether the value of the target field may be an array of values rather than a single value. If this property is set to \"required\" or \"optional\", then the constraints defined for this field will be applied to each element of the array.",
                    "type": "string"
                    , "enum": [
                        "required"
                        ,
                        "optional"
                        ,
                        "prohibited"
                    ]
                }
                ,
                "indexEntryLimit": {
                    "description": "The maximum number of entries that may contain a particular value for the target field before the server will stop maintaining the index for that value.",
                    "type": "integer"
                }
                ,
                "primeIndex": {
                    "description": "Indicates whether backends that support database priming should load the contents of the associated JSON index into memory whenever the backend is opened.",
                    "type": "boolean"
                }
                ,
                "minimumValueCount": {
                    "description": "Specifies the smallest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with fewer than this number of elements.",
                    "type": "integer"
                }
            }
        },
        "json-field-constraints-properties": {
            "id": "json-field-constraints-properties",
            "description": "JSON Field Constraints properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:json-field-constraints"
                        ]
                    }
                },
                "isRequired": {
                    "description": "Indicates whether the target field must be present in JSON objects stored as values of the associated attribute type.",
                    "type": "boolean"
                }
                ,
                "jsonField": {
                    "description": "The full name of the JSON field to which these constraints apply.",
                    "type": "string"
                }
                ,
                "tokenizeValues": {
                    "description": "Indicates whether the backend should attempt to assign a compact token for each distinct value for the target field in an attempt to reduce the encoded size of the field in JSON objects. These tokens would be assigned prior to using any from the token set used for automatic compaction of some JSON string values.",
                    "type": "boolean"
                }
                ,
                "allowEmptyObject": {
                    "description": "Indicates whether the target field may have a value that is an empty JSON object (i.e., a JSON object with zero fields). This may only be set to true if value-type property is set to object.",
                    "type": "boolean"
                }
                ,
                "description": {
                    "description": "A description for this JSON Field Constraints",
                    "type": "string"
                }
                ,
                "allowNullValue": {
                    "description": "Indicates whether the target field may have a value that is the JSON null value as an alternative to a value (or array of values) of the specified value-type.",
                    "type": "boolean"
                }
                ,
                "maximumValueCount": {
                    "description": "Specifies the largest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with more than this number of elements.",
                    "type": "integer"
                }
                ,
                "allowedValue": {
                    "description": "Specifies an explicit set of string values that will be the only values permitted for the target field. If a set of allowed values is defined, then the server will reject any attempt to store a JSON object with a value for the target field that is not included in that set.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "minimumValueLength": {
                    "description": "Specifies the smallest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is shorter than that minimum value length.",
                    "type": "integer"
                }
                ,
                "minimumNumericValue": {
                    "description": "Specifies the smallest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is less than that minimum numeric value.",
                    "type": "string"
                }
                ,
                "indexValues": {
                    "description": "Indicates whether backends that support JSON indexing should maintain an index for values of the target field.",
                    "type": "boolean"
                }
                ,
                "maximumValueLength": {
                    "description": "Specifies the largest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is longer than that maximum value length.",
                    "type": "integer"
                }
                ,
                "allowedValueRegularExpression": {
                    "description": "Specifies an explicit set of regular expressions that may be used to restrict the set of values that may be used for the target field. If a set of allowed value regular expressions is defined, then the server will reject any attempt to store a JSON object with a value for the target field that does not match at least one of those regular expressions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "maximumNumericValue": {
                    "description": "Specifies the largest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is greater than that maximum numeric value.",
                    "type": "string"
                }
                ,
                "valueType": {
                    "description": "The data type that will be required for values of the target field.",
                    "type": "string"
                    , "enum": [
                        "any"
                        ,
                        "boolean"
                        ,
                        "integer"
                        ,
                        "null"
                        ,
                        "number"
                        ,
                        "object"
                        ,
                        "string"
                    ]
                }
                ,
                "cacheMode": {
                    "description": "Specifies the behavior that the server should exhibit when caching data for the associated JSON index. This can be useful in environments in which the system does not have enough memory to fully cache the entire data set, as it makes it possible to prioritize which data is the most important to keep in memory.",
                    "type": "string"
                    , "enum": [
                        "cache-keys-and-values"
                        ,
                        "cache-keys-only"
                        ,
                        "no-caching"
                    ]
                }
                ,
                "isArray": {
                    "description": "Indicates whether the value of the target field may be an array of values rather than a single value. If this property is set to \"required\" or \"optional\", then the constraints defined for this field will be applied to each element of the array.",
                    "type": "string"
                    , "enum": [
                        "required"
                        ,
                        "optional"
                        ,
                        "prohibited"
                    ]
                }
                ,
                "indexEntryLimit": {
                    "description": "The maximum number of entries that may contain a particular value for the target field before the server will stop maintaining the index for that value.",
                    "type": "integer"
                }
                ,
                "primeIndex": {
                    "description": "Indicates whether backends that support database priming should load the contents of the associated JSON index into memory whenever the backend is opened.",
                    "type": "boolean"
                }
                ,
                "minimumValueCount": {
                    "description": "Specifies the smallest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with fewer than this number of elements.",
                    "type": "integer"
                }
            }
        }
    }
}
