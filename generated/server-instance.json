{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/server-instances",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Server Instance objects",
                    "type": "server-instance-list-response",
                    "nickname": "list-server-instances",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                }
            ]
        },
        {
            "path": "/server-instances/{server-instance-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Server Instance",
                    "type": "server-instance-response",
                    "nickname": "get-server-instance",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "server-instance-name",
                          "description": "Name of the Server Instance",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Server Instance by name, replacing any attributes specified in the request body",
                    "type": "server-instance-response",
                    "nickname": "put-server-instance",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "server-instance-name",
                          "description": "Name of the Server Instance",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Server Instance attributes to update",
                            "name": "server-instance-properties",
                            "type": "server-instance-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Server Instance by name, using a SCIM patch request",
                    "type": "server-instance-response",
                    "nickname": "patch-server-instance",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "server-instance-name",
                          "description": "Name of the Server Instance",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Server Instance",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/server-instances/{server-instance-name}/server-instance-listeners",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Server Instance Listener objects",
                    "type": "server-instance-listener-list-response",
                    "nickname": "list-server-instance-listeners",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                }
            ]
        },
        {
            "path": "/server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Server Instance Listener",
                    "type": "server-instance-listener-response",
                    "nickname": "get-server-instance-listener",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "server-instance-listener-name",
                          "description": "Name of the Server Instance Listener",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Server Instance Listener by name, replacing any attributes specified in the request body",
                    "type": "server-instance-listener-response",
                    "nickname": "put-server-instance-listener",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "server-instance-listener-name",
                          "description": "Name of the Server Instance Listener",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Server Instance Listener attributes to update",
                            "name": "server-instance-listener-properties",
                            "type": "server-instance-listener-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Server Instance Listener by name, using a SCIM patch request",
                    "type": "server-instance-listener-response",
                    "nickname": "patch-server-instance-listener",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "server-instance-listener-name",
                          "description": "Name of the Server Instance Listener",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Server Instance Listener",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/server-instances/{server-instance-name}/mac-secret-keys",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Mac Secret Key objects",
                    "type": "mac-secret-key-list-response",
                    "nickname": "list-mac-secret-keys",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                }
            ]
        },
        {
            "path": "/server-instances/{server-instance-name}/mac-secret-keys/{mac-secret-key-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Mac Secret Key",
                    "type": "mac-secret-key-response",
                    "nickname": "get-mac-secret-key",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "mac-secret-key-name",
                          "description": "Name of the Mac Secret Key",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Mac Secret Key by name, replacing any attributes specified in the request body",
                    "type": "mac-secret-key-response",
                    "nickname": "put-mac-secret-key",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "mac-secret-key-name",
                          "description": "Name of the Mac Secret Key",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Mac Secret Key attributes to update",
                            "name": "mac-secret-key-properties",
                            "type": "mac-secret-key-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Mac Secret Key by name, using a SCIM patch request",
                    "type": "mac-secret-key-response",
                    "nickname": "patch-mac-secret-key",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "mac-secret-key-name",
                          "description": "Name of the Mac Secret Key",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Mac Secret Key",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/server-instances/{server-instance-name}/cipher-secret-keys",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Cipher Secret Key objects",
                    "type": "cipher-secret-key-list-response",
                    "nickname": "list-cipher-secret-keys",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                }
            ]
        },
        {
            "path": "/server-instances/{server-instance-name}/cipher-secret-keys/{cipher-secret-key-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Cipher Secret Key",
                    "type": "cipher-secret-key-response",
                    "nickname": "get-cipher-secret-key",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "cipher-secret-key-name",
                          "description": "Name of the Cipher Secret Key",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Cipher Secret Key by name, replacing any attributes specified in the request body",
                    "type": "cipher-secret-key-response",
                    "nickname": "put-cipher-secret-key",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "cipher-secret-key-name",
                          "description": "Name of the Cipher Secret Key",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Cipher Secret Key attributes to update",
                            "name": "cipher-secret-key-properties",
                            "type": "cipher-secret-key-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Cipher Secret Key by name, using a SCIM patch request",
                    "type": "cipher-secret-key-response",
                    "nickname": "patch-cipher-secret-key",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "cipher-secret-key-name",
                          "description": "Name of the Cipher Secret Key",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Cipher Secret Key",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}/inter-server-authentication-info",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Inter Server Authentication Info objects",
                    "type": "inter-server-authentication-info-list-response",
                    "nickname": "list-inter-server-authentication-info",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-listener-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                }
            ]
        },
        {
            "path": "/server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}/inter-server-authentication-info/{inter-server-authentication-info-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Inter Server Authentication Info",
                    "type": "inter-server-authentication-info-response",
                    "nickname": "get-inter-server-authentication-info",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-listener-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "inter-server-authentication-info-name",
                          "description": "Name of the Inter Server Authentication Info",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Inter Server Authentication Info by name, replacing any attributes specified in the request body",
                    "type": "inter-server-authentication-info-response",
                    "nickname": "put-inter-server-authentication-info",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-listener-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "inter-server-authentication-info-name",
                          "description": "Name of the Inter Server Authentication Info",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Inter Server Authentication Info attributes to update",
                            "name": "inter-server-authentication-info-properties",
                            "type": "inter-server-authentication-info-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Inter Server Authentication Info by name, using a SCIM patch request",
                    "type": "inter-server-authentication-info-response",
                    "nickname": "patch-inter-server-authentication-info",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "server-instance-listener-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "path",
                            "name": "server-instance-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "inter-server-authentication-info-name",
                          "description": "Name of the Inter Server Authentication Info",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Inter Server Authentication Info",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "server-instance-list-response": {
            "id": "server-instance-list-response",
            "description": "Server Instance list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "server-instance-response"
                    }
                }
            }
        },
        "add-server-instance-request": {
            "id": "add-server-instance-request",
            "description": "A Server Instance resource request",
            "required": [
                "instanceName"
            ],
            "properties": {
                "instanceName": {
                    "type": "string",
                    "description": "Name of the new Server Instance"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:proxy"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:metrics-engine"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:authorize"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:sync"
                        ]
                    }
                },
                "replicationServerID": {
                    "description": "Specifies a unique identifier for the replication server on this server instance.",
                    "type": "integer"
                }
                ,
                "serverVersion": {
                    "description": "The version of the server.",
                    "type": "string"
                }
                ,
                "serverInstanceType": {
                    "description": "Specifies the type of server installation.",
                    "type": "string"
                    , "enum": [
                        "ds"
                        ,
                        "proxy"
                        ,
                        "authorize"
                        ,
                        "metrics"
                        ,
                        "sync"
                    ]
                }
                ,
                "jmxPort": {
                    "description": "The TCP port on which this server is listening for JMX connections.",
                    "type": "integer"
                }
                ,
                "memberOfServerGroup": {
                    "description": "The set of groups of which this server is a member.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "interServerCertificate": {
                    "description": "The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.",
                    "type": "string"
                }
                ,
                "replicationSetName": {
                    "description": "The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within instances using the same replication set name.",
                    "type": "string"
                }
                ,
                "httpPort": {
                    "description": "The TCP port on which this server is listening for HTTP connections.",
                    "type": "integer"
                }
                ,
                "ldapsPort": {
                    "description": "The TCP port on which this server is listening for LDAP secure connections.",
                    "type": "integer"
                }
                ,
                "replicationDomainServerID": {
                    "description": "Specifies a unique identifier for the Directory Server within the replication domain.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
                ,
                "serverRoot": {
                    "description": "The file system path where this Server Instance is installed.",
                    "type": "string"
                }
                ,
                "ldapPort": {
                    "description": "The TCP port on which this server is listening for LDAP connections.",
                    "type": "integer"
                }
                ,
                "serverInstanceName": {
                    "description": "The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.",
                    "type": "string"
                }
                ,
                "httpsPort": {
                    "description": "The TCP port on which this server is listening for HTTPS connections.",
                    "type": "integer"
                }
                ,
                "startTLSEnabled": {
                    "description": "Indicates whether StartTLS is enabled on this server.",
                    "type": "boolean"
                }
                ,
                "loadBalancingAlgorithmName": {
                    "description": "The name of the configuration object for a load-balancing algorithm that should include this server.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "hostname": {
                    "description": "The name of the host where this Server Instance is installed.",
                    "type": "string"
                }
                ,
                "serverInstanceLocation": {
                    "description": "Specifies the location for the Server Instance.",
                    "type": "string"
                }
                ,
                "clusterName": {
                    "description": "The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.",
                    "type": "string"
                }
                ,
                "preferredSecurity": {
                    "description": "Specifies the preferred mechanism to use for securing connections to the server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "replicationPort": {
                    "description": "The replication TCP port.",
                    "type": "integer"
                }
                ,
                "jmxsPort": {
                    "description": "The TCP port on which this server is listening for JMX secure connections.",
                    "type": "integer"
                }
                ,
                "baseDN": {
                    "description": "The set of base DNs under the root DSE.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "server-instance-response": {
            "id": "server-instance-response",
            "description": "A Server Instance resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:proxy"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:metrics-engine"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:authorize"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:sync"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Server Instance"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "replicationServerID": {
                    "description": "Specifies a unique identifier for the replication server on this server instance.",
                    "type": "integer"
                }
                ,
                "serverVersion": {
                    "description": "The version of the server.",
                    "type": "string"
                }
                ,
                "serverInstanceType": {
                    "description": "Specifies the type of server installation.",
                    "type": "string"
                    , "enum": [
                        "ds"
                        ,
                        "proxy"
                        ,
                        "authorize"
                        ,
                        "metrics"
                        ,
                        "sync"
                    ]
                }
                ,
                "jmxPort": {
                    "description": "The TCP port on which this server is listening for JMX connections.",
                    "type": "integer"
                }
                ,
                "memberOfServerGroup": {
                    "description": "The set of groups of which this server is a member.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "interServerCertificate": {
                    "description": "The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.",
                    "type": "string"
                }
                ,
                "replicationSetName": {
                    "description": "The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within instances using the same replication set name.",
                    "type": "string"
                }
                ,
                "httpPort": {
                    "description": "The TCP port on which this server is listening for HTTP connections.",
                    "type": "integer"
                }
                ,
                "ldapsPort": {
                    "description": "The TCP port on which this server is listening for LDAP secure connections.",
                    "type": "integer"
                }
                ,
                "replicationDomainServerID": {
                    "description": "Specifies a unique identifier for the Directory Server within the replication domain.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
                ,
                "serverRoot": {
                    "description": "The file system path where this Server Instance is installed.",
                    "type": "string"
                }
                ,
                "ldapPort": {
                    "description": "The TCP port on which this server is listening for LDAP connections.",
                    "type": "integer"
                }
                ,
                "serverInstanceName": {
                    "description": "The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.",
                    "type": "string"
                }
                ,
                "httpsPort": {
                    "description": "The TCP port on which this server is listening for HTTPS connections.",
                    "type": "integer"
                }
                ,
                "startTLSEnabled": {
                    "description": "Indicates whether StartTLS is enabled on this server.",
                    "type": "boolean"
                }
                ,
                "loadBalancingAlgorithmName": {
                    "description": "The name of the configuration object for a load-balancing algorithm that should include this server.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "hostname": {
                    "description": "The name of the host where this Server Instance is installed.",
                    "type": "string"
                }
                ,
                "serverInstanceLocation": {
                    "description": "Specifies the location for the Server Instance.",
                    "type": "string"
                }
                ,
                "clusterName": {
                    "description": "The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.",
                    "type": "string"
                }
                ,
                "preferredSecurity": {
                    "description": "Specifies the preferred mechanism to use for securing connections to the server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "replicationPort": {
                    "description": "The replication TCP port.",
                    "type": "integer"
                }
                ,
                "jmxsPort": {
                    "description": "The TCP port on which this server is listening for JMX secure connections.",
                    "type": "integer"
                }
                ,
                "baseDN": {
                    "description": "The set of base DNs under the root DSE.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "server-instance-properties": {
            "id": "server-instance-properties",
            "description": "Server Instance properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:proxy"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:metrics-engine"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:authorize"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:directory"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance:sync"
                        ]
                    }
                },
                "replicationServerID": {
                    "description": "Specifies a unique identifier for the replication server on this server instance.",
                    "type": "integer"
                }
                ,
                "serverVersion": {
                    "description": "The version of the server.",
                    "type": "string"
                }
                ,
                "serverInstanceType": {
                    "description": "Specifies the type of server installation.",
                    "type": "string"
                    , "enum": [
                        "ds"
                        ,
                        "proxy"
                        ,
                        "authorize"
                        ,
                        "metrics"
                        ,
                        "sync"
                    ]
                }
                ,
                "jmxPort": {
                    "description": "The TCP port on which this server is listening for JMX connections.",
                    "type": "integer"
                }
                ,
                "memberOfServerGroup": {
                    "description": "The set of groups of which this server is a member.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "interServerCertificate": {
                    "description": "The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.",
                    "type": "string"
                }
                ,
                "replicationSetName": {
                    "description": "The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within instances using the same replication set name.",
                    "type": "string"
                }
                ,
                "httpPort": {
                    "description": "The TCP port on which this server is listening for HTTP connections.",
                    "type": "integer"
                }
                ,
                "ldapsPort": {
                    "description": "The TCP port on which this server is listening for LDAP secure connections.",
                    "type": "integer"
                }
                ,
                "replicationDomainServerID": {
                    "description": "Specifies a unique identifier for the Directory Server within the replication domain.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
                ,
                "serverRoot": {
                    "description": "The file system path where this Server Instance is installed.",
                    "type": "string"
                }
                ,
                "ldapPort": {
                    "description": "The TCP port on which this server is listening for LDAP connections.",
                    "type": "integer"
                }
                ,
                "serverInstanceName": {
                    "description": "The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.",
                    "type": "string"
                }
                ,
                "httpsPort": {
                    "description": "The TCP port on which this server is listening for HTTPS connections.",
                    "type": "integer"
                }
                ,
                "startTLSEnabled": {
                    "description": "Indicates whether StartTLS is enabled on this server.",
                    "type": "boolean"
                }
                ,
                "loadBalancingAlgorithmName": {
                    "description": "The name of the configuration object for a load-balancing algorithm that should include this server.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "hostname": {
                    "description": "The name of the host where this Server Instance is installed.",
                    "type": "string"
                }
                ,
                "serverInstanceLocation": {
                    "description": "Specifies the location for the Server Instance.",
                    "type": "string"
                }
                ,
                "clusterName": {
                    "description": "The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.",
                    "type": "string"
                }
                ,
                "preferredSecurity": {
                    "description": "Specifies the preferred mechanism to use for securing connections to the server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "replicationPort": {
                    "description": "The replication TCP port.",
                    "type": "integer"
                }
                ,
                "jmxsPort": {
                    "description": "The TCP port on which this server is listening for JMX secure connections.",
                    "type": "integer"
                }
                ,
                "baseDN": {
                    "description": "The set of base DNs under the root DSE.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
        ,
        "server-instance-listener-list-response": {
            "id": "server-instance-listener-list-response",
            "description": "Server Instance Listener list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "server-instance-listener-response"
                    }
                }
            }
        },
        "add-server-instance-listener-request": {
            "id": "add-server-instance-listener-request",
            "description": "A Server Instance Listener resource request",
            "required": [
                "listenerName"
            ],
            "properties": {
                "listenerName": {
                    "type": "string",
                    "description": "Name of the new Server Instance Listener"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:http"
                        ]
                    }
                },
                "listenerCertificate": {
                    "description": "The public component of the certificate that the listener is expected to present to clients. When establishing a connection to this server, only the certificate(s) listed here will be trusted.",
                    "type": "string"
                }
                ,
                "connectionSecurity": {
                    "description": "Specifies the mechanism to use for securing connections to the server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "purpose": {
                    "description": "Identifies the purpose of this Server Instance Listener.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "mirrored-config"
                        ]
                    }
                }
                ,
                "listenAddress": {
                    "description": "If the server is listening on a particular address different from the hostname, then this property may be used to specify the address on which to listen for connections from HTTP clients.",
                    "type": "string"
                }
                ,
                "serverHTTPPort": {
                    "description": "The TCP port number on which the HTTP server is listening.",
                    "type": "integer"
                }
                ,
                "serverLDAPPort": {
                    "description": "The TCP port number on which the LDAP server is listening.",
                    "type": "integer"
                }
            }
        },
        "server-instance-listener-response": {
            "id": "server-instance-listener-response",
            "description": "A Server Instance Listener resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:http"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Server Instance Listener"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "listenerCertificate": {
                    "description": "The public component of the certificate that the listener is expected to present to clients. When establishing a connection to this server, only the certificate(s) listed here will be trusted.",
                    "type": "string"
                }
                ,
                "connectionSecurity": {
                    "description": "Specifies the mechanism to use for securing connections to the server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "purpose": {
                    "description": "Identifies the purpose of this Server Instance Listener.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "mirrored-config"
                        ]
                    }
                }
                ,
                "listenAddress": {
                    "description": "If the server is listening on a particular address different from the hostname, then this property may be used to specify the address on which to listen for connections from HTTP clients.",
                    "type": "string"
                }
                ,
                "serverHTTPPort": {
                    "description": "The TCP port number on which the HTTP server is listening.",
                    "type": "integer"
                }
                ,
                "serverLDAPPort": {
                    "description": "The TCP port number on which the LDAP server is listening.",
                    "type": "integer"
                }
            }
        },
        "server-instance-listener-properties": {
            "id": "server-instance-listener-properties",
            "description": "Server Instance Listener properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:ldap"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:http"
                        ]
                    }
                },
                "listenerCertificate": {
                    "description": "The public component of the certificate that the listener is expected to present to clients. When establishing a connection to this server, only the certificate(s) listed here will be trusted.",
                    "type": "string"
                }
                ,
                "connectionSecurity": {
                    "description": "Specifies the mechanism to use for securing connections to the server.",
                    "type": "string"
                    , "enum": [
                        "none"
                        ,
                        "ssl"
                        ,
                        "starttls"
                    ]
                }
                ,
                "purpose": {
                    "description": "Identifies the purpose of this Server Instance Listener.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "mirrored-config"
                        ]
                    }
                }
                ,
                "listenAddress": {
                    "description": "If the server is listening on a particular address different from the hostname, then this property may be used to specify the address on which to listen for connections from HTTP clients.",
                    "type": "string"
                }
                ,
                "serverHTTPPort": {
                    "description": "The TCP port number on which the HTTP server is listening.",
                    "type": "integer"
                }
                ,
                "serverLDAPPort": {
                    "description": "The TCP port number on which the LDAP server is listening.",
                    "type": "integer"
                }
            }
        }
        ,
        "mac-secret-key-list-response": {
            "id": "mac-secret-key-list-response",
            "description": "Mac Secret Key list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "mac-secret-key-response"
                    }
                }
            }
        },
        "add-mac-secret-key-request": {
            "id": "add-mac-secret-key-request",
            "description": "A Mac Secret Key resource request",
            "required": [
                "keyName"
            ],
            "properties": {
                "keyName": {
                    "type": "string",
                    "description": "Name of the new Mac Secret Key"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:mac-secret-key"
                        ]
                    }
                },
                "macAlgorithmName": {
                    "description": "The algorithm name used to generate this MAC key, e.g. HmacMD5, HmacSHA1, HMacSHA256, etc.",
                    "type": "string"
                }
                ,
                "keyLengthBits": {
                    "description": "The length of the key in bits.",
                    "type": "integer"
                }
                ,
                "isCompromised": {
                    "description": "If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.",
                    "type": "boolean"
                }
                ,
                "keyID": {
                    "description": "The unique system-generated identifier for the Secret Key.",
                    "type": "string"
                }
                ,
                "symmetricKey": {
                    "description": "The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "mac-secret-key-response": {
            "id": "mac-secret-key-response",
            "description": "A Mac Secret Key resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:mac-secret-key"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Mac Secret Key"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "macAlgorithmName": {
                    "description": "The algorithm name used to generate this MAC key, e.g. HmacMD5, HmacSHA1, HMacSHA256, etc.",
                    "type": "string"
                }
                ,
                "keyLengthBits": {
                    "description": "The length of the key in bits.",
                    "type": "integer"
                }
                ,
                "isCompromised": {
                    "description": "If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.",
                    "type": "boolean"
                }
                ,
                "keyID": {
                    "description": "The unique system-generated identifier for the Secret Key.",
                    "type": "string"
                }
                ,
                "symmetricKey": {
                    "description": "The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "mac-secret-key-properties": {
            "id": "mac-secret-key-properties",
            "description": "Mac Secret Key properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:mac-secret-key"
                        ]
                    }
                },
                "macAlgorithmName": {
                    "description": "The algorithm name used to generate this MAC key, e.g. HmacMD5, HmacSHA1, HMacSHA256, etc.",
                    "type": "string"
                }
                ,
                "keyLengthBits": {
                    "description": "The length of the key in bits.",
                    "type": "integer"
                }
                ,
                "isCompromised": {
                    "description": "If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.",
                    "type": "boolean"
                }
                ,
                "keyID": {
                    "description": "The unique system-generated identifier for the Secret Key.",
                    "type": "string"
                }
                ,
                "symmetricKey": {
                    "description": "The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
        ,
        "cipher-secret-key-list-response": {
            "id": "cipher-secret-key-list-response",
            "description": "Cipher Secret Key list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "cipher-secret-key-response"
                    }
                }
            }
        },
        "add-cipher-secret-key-request": {
            "id": "add-cipher-secret-key-request",
            "description": "A Cipher Secret Key resource request",
            "required": [
                "keyName"
            ],
            "properties": {
                "keyName": {
                    "type": "string",
                    "description": "Name of the new Cipher Secret Key"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:cipher-secret-key"
                        ]
                    }
                },
                "cipherTransformationName": {
                    "description": "The algorithm name used to produce this cipher, e.g. AES/CBC/PKCS5Padding.",
                    "type": "string"
                }
                ,
                "keyLengthBits": {
                    "description": "The length of the key in bits.",
                    "type": "integer"
                }
                ,
                "isCompromised": {
                    "description": "If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.",
                    "type": "boolean"
                }
                ,
                "keyID": {
                    "description": "The unique system-generated identifier for the Secret Key.",
                    "type": "string"
                }
                ,
                "initializationVectorLengthBits": {
                    "description": "The initialization vector length of the cipher in bits.",
                    "type": "integer"
                }
                ,
                "symmetricKey": {
                    "description": "The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cipher-secret-key-response": {
            "id": "cipher-secret-key-response",
            "description": "A Cipher Secret Key resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:cipher-secret-key"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Cipher Secret Key"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "cipherTransformationName": {
                    "description": "The algorithm name used to produce this cipher, e.g. AES/CBC/PKCS5Padding.",
                    "type": "string"
                }
                ,
                "keyLengthBits": {
                    "description": "The length of the key in bits.",
                    "type": "integer"
                }
                ,
                "isCompromised": {
                    "description": "If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.",
                    "type": "boolean"
                }
                ,
                "keyID": {
                    "description": "The unique system-generated identifier for the Secret Key.",
                    "type": "string"
                }
                ,
                "initializationVectorLengthBits": {
                    "description": "The initialization vector length of the cipher in bits.",
                    "type": "integer"
                }
                ,
                "symmetricKey": {
                    "description": "The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cipher-secret-key-properties": {
            "id": "cipher-secret-key-properties",
            "description": "Cipher Secret Key properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:cipher-secret-key"
                        ]
                    }
                },
                "cipherTransformationName": {
                    "description": "The algorithm name used to produce this cipher, e.g. AES/CBC/PKCS5Padding.",
                    "type": "string"
                }
                ,
                "keyLengthBits": {
                    "description": "The length of the key in bits.",
                    "type": "integer"
                }
                ,
                "isCompromised": {
                    "description": "If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.",
                    "type": "boolean"
                }
                ,
                "keyID": {
                    "description": "The unique system-generated identifier for the Secret Key.",
                    "type": "string"
                }
                ,
                "initializationVectorLengthBits": {
                    "description": "The initialization vector length of the cipher in bits.",
                    "type": "integer"
                }
                ,
                "symmetricKey": {
                    "description": "The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
        ,
        "inter-server-authentication-info-list-response": {
            "id": "inter-server-authentication-info-list-response",
            "description": "Inter Server Authentication Info list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "inter-server-authentication-info-response"
                    }
                }
            }
        },
        "add-inter-server-authentication-info-request": {
            "id": "add-inter-server-authentication-info-request",
            "description": "A Inter Server Authentication Info resource request",
            "required": [
                "infoName"
            ],
            "properties": {
                "infoName": {
                    "type": "string",
                    "description": "Name of the new Inter Server Authentication Info"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:password"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:certificate"
                        ]
                    }
                },
                "bindDN": {
                    "description": "A DN of the username that should be used for the bind request.",
                    "type": "string"
                }
                ,
                "password": {
                    "description": "The password for the username or bind-dn.",
                    "type": "string"
                }
                ,
                "purpose": {
                    "description": "Identifies the purpose of this Inter Server Authentication Info.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "mirrored-config"
                        ]
                    }
                }
                ,
                "authenticationType": {
                    "description": "Identifies the type of password authentication that will be used.",
                    "type": "string"
                    , "enum": [
                        "simple"
                        ,
                        "sasl-plain"
                    ]
                }
                ,
                "username": {
                    "description": "The username that should be used for the bind request.",
                    "type": "string"
                }
            }
        },
        "inter-server-authentication-info-response": {
            "id": "inter-server-authentication-info-response",
            "description": "A Inter Server Authentication Info resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:password"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:certificate"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Inter Server Authentication Info"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "bindDN": {
                    "description": "A DN of the username that should be used for the bind request.",
                    "type": "string"
                }
                ,
                "password": {
                    "description": "The password for the username or bind-dn.",
                    "type": "string"
                }
                ,
                "purpose": {
                    "description": "Identifies the purpose of this Inter Server Authentication Info.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "mirrored-config"
                        ]
                    }
                }
                ,
                "authenticationType": {
                    "description": "Identifies the type of password authentication that will be used.",
                    "type": "string"
                    , "enum": [
                        "simple"
                        ,
                        "sasl-plain"
                    ]
                }
                ,
                "username": {
                    "description": "The username that should be used for the bind request.",
                    "type": "string"
                }
            }
        },
        "inter-server-authentication-info-properties": {
            "id": "inter-server-authentication-info-properties",
            "description": "Inter Server Authentication Info properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:password"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:certificate"
                        ]
                    }
                },
                "bindDN": {
                    "description": "A DN of the username that should be used for the bind request.",
                    "type": "string"
                }
                ,
                "password": {
                    "description": "The password for the username or bind-dn.",
                    "type": "string"
                }
                ,
                "purpose": {
                    "description": "Identifies the purpose of this Inter Server Authentication Info.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "mirrored-config"
                        ]
                    }
                }
                ,
                "authenticationType": {
                    "description": "Identifies the type of password authentication that will be used.",
                    "type": "string"
                    , "enum": [
                        "simple"
                        ,
                        "sasl-plain"
                    ]
                }
                ,
                "username": {
                    "description": "The username that should be used for the bind request.",
                    "type": "string"
                }
            }
        }
    }
}
