{
    "apiVersion": "9.2.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://localhost:1443/config",
    "authorizations": {
        "basic": {
            "type": "basicAuth"
        }
    },
    "apis": [
        {
            "path": "/http-servlet-extensions",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all HTTP Servlet Extension objects",
                    "type": "http-servlet-extension-list-response",
                    "nickname": "list-http-servlet-extensions",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new HTTP Servlet Extension to the config",
                    "nickname": "add-http-servlet-extension",
                    "type": "http-servlet-extension-response",
                    "parameters": [
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "HTTP Servlet Extension to add",
                            "name": "add-http-servlet-extension-request",
                            "type": "add-http-servlet-extension-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/http-servlet-extensions/{http-servlet-extension-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single HTTP Servlet Extension",
                    "type": "http-servlet-extension-response",
                    "nickname": "get-http-servlet-extension",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "http-servlet-extension-name",
                          "description": "Name of the HTTP Servlet Extension",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing HTTP Servlet Extension by name, replacing any attributes specified in the request body",
                    "type": "http-servlet-extension-response",
                    "nickname": "put-http-servlet-extension",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "http-servlet-extension-name",
                          "description": "Name of the HTTP Servlet Extension",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "HTTP Servlet Extension attributes to update",
                            "name": "http-servlet-extension-properties",
                            "type": "http-servlet-extension-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing HTTP Servlet Extension by name, using a SCIM patch request",
                    "type": "http-servlet-extension-response",
                    "nickname": "patch-http-servlet-extension",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "http-servlet-extension-name",
                          "description": "Name of the HTTP Servlet Extension",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the HTTP Servlet Extension",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a HTTP Servlet Extension",
                    "nickname": "delete-http-servlet-extension",
                    "parameters": [
                        {
                          "name": "http-servlet-extension-name",
                          "description": "Name of the HTTP Servlet Extension",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/http-servlet-extensions/{http-servlet-extension-name}/prometheus-monitor-attribute-metrics",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Prometheus Monitor Attribute Metric objects",
                    "type": "prometheus-monitor-attribute-metric-list-response",
                    "nickname": "list-prometheus-monitor-attribute-metrics",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Prometheus Monitor Attribute Metric to the config",
                    "nickname": "add-prometheus-monitor-attribute-metric",
                    "type": "prometheus-monitor-attribute-metric-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Prometheus Monitor Attribute Metric to add",
                            "name": "add-prometheus-monitor-attribute-metric-request",
                            "type": "add-prometheus-monitor-attribute-metric-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/http-servlet-extensions/{http-servlet-extension-name}/prometheus-monitor-attribute-metrics/{prometheus-monitor-attribute-metric-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Prometheus Monitor Attribute Metric",
                    "type": "prometheus-monitor-attribute-metric-response",
                    "nickname": "get-prometheus-monitor-attribute-metric",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "prometheus-monitor-attribute-metric-name",
                          "description": "Name of the Prometheus Monitor Attribute Metric",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Prometheus Monitor Attribute Metric by name, replacing any attributes specified in the request body",
                    "type": "prometheus-monitor-attribute-metric-response",
                    "nickname": "put-prometheus-monitor-attribute-metric",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "prometheus-monitor-attribute-metric-name",
                          "description": "Name of the Prometheus Monitor Attribute Metric",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Prometheus Monitor Attribute Metric attributes to update",
                            "name": "prometheus-monitor-attribute-metric-properties",
                            "type": "prometheus-monitor-attribute-metric-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Prometheus Monitor Attribute Metric by name, using a SCIM patch request",
                    "type": "prometheus-monitor-attribute-metric-response",
                    "nickname": "patch-prometheus-monitor-attribute-metric",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "prometheus-monitor-attribute-metric-name",
                          "description": "Name of the Prometheus Monitor Attribute Metric",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Prometheus Monitor Attribute Metric",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Prometheus Monitor Attribute Metric",
                    "nickname": "delete-prometheus-monitor-attribute-metric",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "prometheus-monitor-attribute-metric-name",
                          "description": "Name of the Prometheus Monitor Attribute Metric",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/http-servlet-extensions/{http-servlet-extension-name}/velocity-context-providers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Velocity Context Provider objects",
                    "type": "velocity-context-provider-list-response",
                    "nickname": "list-velocity-context-providers",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Velocity Context Provider to the config",
                    "nickname": "add-velocity-context-provider",
                    "type": "velocity-context-provider-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Velocity Context Provider to add",
                            "name": "add-velocity-context-provider-request",
                            "type": "add-velocity-context-provider-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/http-servlet-extensions/{http-servlet-extension-name}/velocity-context-providers/{velocity-context-provider-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Velocity Context Provider",
                    "type": "velocity-context-provider-response",
                    "nickname": "get-velocity-context-provider",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "velocity-context-provider-name",
                          "description": "Name of the Velocity Context Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Velocity Context Provider by name, replacing any attributes specified in the request body",
                    "type": "velocity-context-provider-response",
                    "nickname": "put-velocity-context-provider",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "velocity-context-provider-name",
                          "description": "Name of the Velocity Context Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Velocity Context Provider attributes to update",
                            "name": "velocity-context-provider-properties",
                            "type": "velocity-context-provider-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Velocity Context Provider by name, using a SCIM patch request",
                    "type": "velocity-context-provider-response",
                    "nickname": "patch-velocity-context-provider",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "velocity-context-provider-name",
                          "description": "Name of the Velocity Context Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Velocity Context Provider",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Velocity Context Provider",
                    "nickname": "delete-velocity-context-provider",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "velocity-context-provider-name",
                          "description": "Name of the Velocity Context Provider",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

        ,
        {
            "path": "/http-servlet-extensions/{http-servlet-extension-name}/velocity-template-loaders",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a list of all Velocity Template Loader objects",
                    "type": "velocity-template-loader-list-response",
                    "nickname": "list-velocity-template-loaders",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "filter",
                            "description": "SCIM filter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortBy",
                            "description": "Specifies a property value by which to sort",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "sortOrder",
                            "description": "Specifies either ascending or descending alphabetical order",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "ascending",
                                "descending"
                            ]
                        },
                        {
                            "paramType": "query",
                            "name": "startIndex",
                            "description": "1-based index of the first result to return",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "count",
                            "description": "Indicates the number of results per page",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Add a new Velocity Template Loader to the config",
                    "nickname": "add-velocity-template-loader",
                    "type": "velocity-template-loader-response",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Velocity Template Loader to add",
                            "name": "add-velocity-template-loader-request",
                            "type": "add-velocity-template-loader-request"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        },
        {
            "path": "/http-servlet-extensions/{http-servlet-extension-name}/velocity-template-loaders/{velocity-template-loader-name}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Returns a single Velocity Template Loader",
                    "type": "velocity-template-loader-response",
                    "nickname": "get-velocity-template-loader",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                          "name": "velocity-template-loader-name",
                          "description": "Name of the Velocity Template Loader",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update an existing Velocity Template Loader by name, replacing any attributes specified in the request body",
                    "type": "velocity-template-loader-response",
                    "nickname": "put-velocity-template-loader",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "velocity-template-loader-name",
                          "description": "Name of the Velocity Template Loader",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "Velocity Template Loader attributes to update",
                            "name": "velocity-template-loader-properties",
                            "type": "velocity-template-loader-properties"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "PATCH",
                    "summary": "Update an existing Velocity Template Loader by name, using a SCIM patch request",
                    "type": "velocity-template-loader-response",
                    "nickname": "patch-velocity-template-loader",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "attributes",
                            "description": "Comma-separated list of attributes to include in the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "excludeAttributes",
                            "description": "Comma-separated list of attributes to exclude from the response",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "paramType": "query",
                            "name": "applyChangeTo",
                            "description": "Specify whether to apply this configuration change to a single server or the whole server group. This does not apply to mirrored subtree objects",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "singleServer",
                                "serverGroup"
                            ]
                        },
                        {
                          "name": "velocity-template-loader-name",
                          "description": "Name of the Velocity Template Loader",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        },
                        {
                            "paramType": "body",
                            "required": true,
                            "description": "SCIM operations to apply to the Velocity Template Loader",
                            "name": "Operations",
                            "type": "Operations"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a Velocity Template Loader",
                    "nickname": "delete-velocity-template-loader",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "http-servlet-extension-name",
                            "required": true,
                            "type": "string"
                        },
                        {
                          "name": "velocity-template-loader-name",
                          "description": "Name of the Velocity Template Loader",
                          "required": true,
                          "type": "string",
                          "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested operation succeeded"
                        },
                        {
                            "code": 204,
                            "message": "The requested operation succeeded and no further information has been provided, such as in the case of a DELETE operation."
                        },
                        {
                            "code": 400,
                            "message": "The request contents are incorrectly formatted or the request was made for an invalid API version."
                        },
                        {
                            "code": 401,
                            "message": "The requester cannot be authenticated"
                        },
                        {
                            "code": 403,
                            "message": "The requester does not have the required privileges or another constraint failed, such as attempting to delete an edit-only object."
                        },
                        {
                            "code": 404,
                            "message": "The requested path does not refer to an existing object or object relation."
                        },
                        {
                            "code": 409,
                            "message": "The requested operation could not be performed due to the current state of the configuration. For example, an attempt was made to create an object that already exists or an attempt was made to delete an object that is referred to by another object."
                        },
                        {
                            "code": 415,
                            "message": "The request is such that the Accept header does not indicate that JSON is an acceptable format for a response."
                        },
                        {
                            "code": 500,
                            "message": "The server encountered an unexpected error."
                        }
                    ]
                }
            ]
        }

    ],
    "models": {
        "Meta": {
            "id": "Meta",
            "properties": {
                "resourceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "Messages": {
            "id": "Messages",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requiredActions": {
                    "type": "array",
                    "items": {
                        "$ref": "RequiredAction"
                    }
                }
            }
        },
        "RequiredAction": {
            "id": "RequiredAction",
            "required": [
                "type",
                "synopsis"
            ],
            "properties": {
                "property": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                }
            }
        },
        "Operations": {
            "id": "Operations",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "Operation"
                    }
                }
            }
        },
        "Operation": {
            "id": "Operation",
            "required": [
                "op",
                "path"
            ],
            "properties": {
                "op": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "replace"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "http-servlet-extension-list-response": {
            "id": "http-servlet-extension-list-response",
            "description": "HTTP Servlet Extension list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "http-servlet-extension-response"
                    }
                }
            }
        },
        "add-http-servlet-extension-request": {
            "id": "add-http-servlet-extension-request",
            "description": "A HTTP Servlet Extension resource request",
            "required": [
                "extensionName"
            ],
            "properties": {
                "extensionName": {
                    "type": "string",
                    "description": "Name of the new HTTP Servlet Extension"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:delegated-admin"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:quickstart"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:availability-state"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:prometheus-monitoring"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:velocity"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:consent"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:ldap-mapped-scim"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:file-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:config"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:scim2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:directory-rest-api"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:third-party"
                        ]
                    }
                },
                "debugType": {
                    "description": "The types of debug messages that should be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "coding-error"
                            ,
                            "exception"
                            ,
                            "other"
                        ]
                    }
                }
                ,
                "includeMonitorAttributeNameLabel": {
                    "description": "Indicates whether generated metrics should include a "monitor_attribute" label whose value is the name of the monitor attribute from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for all requests.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "debugEnabled": {
                    "description": "Enables debug logging of the SCIM SDK. Debug messages will be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.server.extensions.scim.SCIMHTTPServletExtension.",
                    "type": "boolean"
                }
                ,
                "excludeLDAPObjectclass": {
                    "description": "Specifies the LDAP object classes that should be not be exposed directly as SCIM resources.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeInstanceNameLabel": {
                    "description": "Indicates whether generated metrics should include an "instance" label whose value is the instance name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "bulkMaxOperations": {
                    "description": "The maximum number of operations that are permitted in a bulk request.",
                    "type": "integer"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accessTokenScope": {
                    "description": "The name of a scope that must be present in an access token accepted by the Delegated Admin HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "includeMonitorObjectClassNameLabel": {
                    "description": "Indicates whether generated metrics should include a "monitor_object_class" label whose value is the name of the object class for the monitor entry from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "maxResults": {
                    "description": "The maximum number of resources that are returned in a response.",
                    "type": "integer"
                }
                ,
                "basicAuthEnabled": {
                    "description": "Enables HTTP Basic authentication, using a username and password. The Identity Mapper specified by the identity-mapper property will be used to map the username to a DN.",
                    "type": "boolean"
                }
                ,
                "unavailableStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be unavailable.",
                    "type": "integer"
                }
                ,
                "staticContentDirectory": {
                    "description": "Specifies the base directory in which static, non-template content such as images, CSS, and Javascript files are stored on the filesystem.",
                    "type": "string"
                }
                ,
                "includeLocationNameLabel": {
                    "description": "Indicates whether generated metrics should include a "location" label whose value is the location name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "allowContextOverride": {
                    "description": "Indicates whether context providers may override existing context objects with new values.",
                    "type": "boolean"
                }
                ,
                "idTokenValidator": {
                    "description": "The ID token validators that may be used to verify the authenticity of an of an OpenID Connect ID token.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "swaggerEnabled": {
                    "description": "Indicates whether the SCIM2 HTTP Servlet Extension will generate a Swagger specification document.",
                    "type": "boolean"
                }
                ,
                "additionalResponseContents": {
                    "description": "A JSON-formatted string containing additional fields to be returned in the response body. For example, an additional-response-contents value of '{ "key": "value" }' would add the key and value to the root of the JSON response body.",
                    "type": "string"
                }
                ,
                "audience": {
                    "description": "A string or URI that identifies the Delegated Admin HTTP Servlet Extension in the context of OAuth2 authorization.",
                    "type": "string"
                }
                ,
                "baseContextPath": {
                    "description": "Specifies the base context path that HTTP clients should use to access this servlet. The value must start with a forward slash and must represent a valid HTTP context path.",
                    "type": "string"
                }
                ,
                "OAuthTokenHandler": {
                    "description": "Specifies the OAuth Token Handler implementation that should be used to validate OAuth 2.0 bearer tokens when they are included in a SCIM request.",
                    "type": "string"
                }
                ,
                "alwaysIncludeMonitorEntryNameLabel": {
                    "description": "Indicates whether generated metrics should always include a "monitor_entry" label whose value is the name of the monitor entry from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "mimeTypesFile": {
                    "description": "Specifies the path to a file that contains MIME type mappings that will be used to determine the appropriate value to return for the Content-Type header based on the extension of the requested static content file.",
                    "type": "string"
                }
                ,
                "templateDirectory": {
                    "description": "Specifies an ordered list of directories in which to search for the template files.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "temporaryDirectory": {
                    "description": "Specifies the location of the directory that is used to create temporary files containing SCIM request data.",
                    "type": "string"
                }
                ,
                "schemasEndpointObjectclass": {
                    "description": "The list of object classes which will be returned by the schemas endpoint.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "resourceMappingFile": {
                    "description": "The path to an XML file defining the resources supported by the SCIM interface and the SCIM-to-LDAP attribute mappings to use.",
                    "type": "string"
                }
                ,
                "bulkMaxConcurrentRequests": {
                    "description": "The maximum number of bulk requests that may be processed concurrently by the server. Any bulk request that would cause this limit to be exceeded is rejected with HTTP status code 503.",
                    "type": "integer"
                }
                ,
                "defaultOperationalAttribute": {
                    "description": "A set of operational attributes that will be returned with entries by default.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "defaultMIMEType": {
                    "description": "Specifies the default value that will be used in the response's Content-Type header that indicates the type of content to return.",
                    "type": "string"
                }
                ,
                "includeResponseBody": {
                    "description": "Indicates whether the response should include a body that is a JSON object.",
                    "type": "boolean"
                }
                ,
                "indexFile": {
                    "description": "Specifies the name of a file whose contents may be returned to the client if the requested path refers to a directory rather than a file.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "identityMapper": {
                    "description": "Specifies the Identity Mapper that is to be used for associating user entries with basic authentication user names.",
                    "type": "string"
                }
                ,
                "includeLDAPObjectclass": {
                    "description": "Specifies the LDAP object classes that should be exposed directly as SCIM resources.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeStackTrace": {
                    "description": "Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.",
                    "type": "boolean"
                }
                ,
                "exposeServerContext": {
                    "description": "Specifies whether a server context will be exposed under context key 'ubid_server' for all template contexts.",
                    "type": "boolean"
                }
                ,
                "characterEncoding": {
                    "description": "Specifies the value that will be used for all responses' Content-Type headers' charset parameter that indicates the character encoding of the document.",
                    "type": "string"
                }
                ,
                "rejectExpansionAttribute": {
                    "description": "A set of attributes which the client is not allowed to provide for the expand query parameters. This should be used for attributes that could either have a large number of values or that reference entries that are very large like groups.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "server": {
                    "description": "Specifies the PingFederate server to be configured.",
                    "type": "string"
                }
                ,
                "staticCustomDirectory": {
                    "description": "Specifies the base directory in which custom static, non-template content such as images, CSS, and Javascript files are stored on the filesystem. Files in this directory will override those with the same name in the directory specified by the static-content-directory property.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "requireAuthentication": {
                    "description": "Require authentication when accessing Velocity templates.",
                    "type": "boolean"
                }
                ,
                "includeLDAPBaseDN": {
                    "description": "Specifies the base DNs for the branches of the DIT that should be exposed via the Identity Access API.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this HTTP Servlet Extension",
                    "type": "string"
                }
                ,
                "bearerTokenAuthEnabled": {
                    "description": "Enables HTTP bearer token authentication.",
                    "type": "boolean"
                }
                ,
                "labelNameValuePair": {
                    "description": "A set of name-value pairs for labels that should be included in all metrics exposed by this Directory Server instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "debugLevel": {
                    "description": "The minimum debug level that should be used for messages to be logged.",
                    "type": "string"
                    , "enum": [
                        "severe"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "config"
                        ,
                        "fine"
                        ,
                        "finer"
                        ,
                        "finest"
                    ]
                }
                ,
                "degradedStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be degraded.",
                    "type": "integer"
                }
                ,
                "includeProductNameLabel": {
                    "description": "Indicates whether generated metrics should include a "product" label whose value is the product name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "correlationIDResponseHeader": {
                    "description": "Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "string"
                }
                ,
                "availableStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be available.",
                    "type": "integer"
                }
                ,
                "allowedAuthenticationType": {
                    "description": "The types of authentication that may be used to authenticate to the file servlet.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "basic"
                            ,
                            "access-token"
                            ,
                            "id-token"
                        ]
                    }
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "bulkMaxPayloadSize": {
                    "description": "The maximum payload size in bytes of a bulk request.",
                    "type": "string"
                }
                ,
                "exposeRequestAttributes": {
                    "description": "Specifies whether the HTTP request will be exposed to templates.",
                    "type": "boolean"
                }
                ,
                "allowedControl": {
                    "description": "Specifies the names of any request controls that should be allowed by the Directory REST API. Any request that contains a critical control not in this list will be rejected. Any non-critical request control which is not supported by the Directory REST API will be removed from the request.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "assertion"
                            ,
                            "assured-replication"
                            ,
                            "exclude-branch"
                            ,
                            "generate-password"
                            ,
                            "get-effective-rights"
                            ,
                            "ignore-no-user-modification"
                            ,
                            "intermediate-client"
                            ,
                            "join"
                            ,
                            "manage-dsa-it"
                            ,
                            "matched-values"
                            ,
                            "matching-entry-count"
                            ,
                            "name-with-entryuuid"
                            ,
                            "no-op"
                            ,
                            "operation-purpose"
                            ,
                            "password-update-behavior"
                            ,
                            "password-validation-details"
                            ,
                            "permissive-modify"
                            ,
                            "permit-unindexed-search"
                            ,
                            "post-read"
                            ,
                            "pre-read"
                            ,
                            "proxied-authorization-v1"
                            ,
                            "proxied-authorization-v2"
                            ,
                            "purge-password"
                            ,
                            "real-attributes-only"
                            ,
                            "reject-unindexed-search"
                            ,
                            "retire-password"
                            ,
                            "suppress-referential-integrity"
                            ,
                            "uniqueness"
                            ,
                            "virtual-attributes-only"
                        ]
                    }
                }
                ,
                "exposeSessionAttributes": {
                    "description": "Specifies whether the HTTP session will be exposed to templates.",
                    "type": "boolean"
                }
                ,
                "enableDirectoryIndexing": {
                    "description": "Indicates whether to generate a default HTML page with a listing of available files if the requested path refers to a directory rather than a file, and that directory does not contain an index file.",
                    "type": "boolean"
                }
                ,
                "requireFileServletAccessPrivilege": {
                    "description": "Indicates whether the servlet extension should only accept requests from authenticated clients that have the file-servlet-access privilege.",
                    "type": "boolean"
                }
                ,
                "staticContextPath": {
                    "description": "The path below the base context path by which static, non-template content such as images, CSS, and Javascript files are accessible.",
                    "type": "string"
                }
                ,
                "maxPageSize": {
                    "description": "The maximum number of entries to be returned in one page of search results.",
                    "type": "integer"
                }
                ,
                "overrideStatusCode": {
                    "description": "Specifies a HTTP status code that the servlet should always return, regardless of the server's availability. If this value is defined, it will override the availability-based return codes.",
                    "type": "integer"
                }
                ,
                "crossOriginPolicy": {
                    "description": "The cross-origin request policy to use for the HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "excludeLDAPBaseDN": {
                    "description": "Specifies the base DNs for the branches of the DIT that should not be exposed via the Identity Access API.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "mapAccessTokensToLocalUsers": {
                    "description": "Indicates whether the SCIM2 servlet should attempt to map the presented access token to a local user.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "optional"
                        ,
                        "required"
                    ]
                }
                ,
                "documentRootDirectory": {
                    "description": "Specifies the path to the directory on the local filesystem containing the files to be served by this File Server HTTP Servlet Extension. The path must exist, and it must be a directory.",
                    "type": "string"
                }
                ,
                "entityTagLDAPAttribute": {
                    "description": "Specifies the LDAP attribute whose value should be used as the entity tag value to enable SCIM resource versioning support.",
                    "type": "string"
                }
                ,
                "temporaryDirectoryPermissions": {
                    "description": "Specifies the permissions that should be applied to the directory that is used to create temporary files.",
                    "type": "string"
                }
                ,
                "accessTokenValidator": {
                    "description": "If specified, the Access Token Validator(s) that may be used to validate access tokens for requests submitted to this Delegated Admin HTTP Servlet Extension.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "requireGroup": {
                    "description": "The DN of a group whose members will be permitted to access to the associated files. If multiple group DNs are configured, then anyone who is a member of at least one of those groups will be granted access.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "staticResponseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for static content requests such as images and scripts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http-servlet-extension-response": {
            "id": "http-servlet-extension-response",
            "description": "A HTTP Servlet Extension resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:delegated-admin"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:quickstart"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:availability-state"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:prometheus-monitoring"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:velocity"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:consent"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:ldap-mapped-scim"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:file-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:config"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:scim2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:directory-rest-api"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:third-party"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the HTTP Servlet Extension"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "debugType": {
                    "description": "The types of debug messages that should be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "coding-error"
                            ,
                            "exception"
                            ,
                            "other"
                        ]
                    }
                }
                ,
                "includeMonitorAttributeNameLabel": {
                    "description": "Indicates whether generated metrics should include a "monitor_attribute" label whose value is the name of the monitor attribute from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for all requests.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "debugEnabled": {
                    "description": "Enables debug logging of the SCIM SDK. Debug messages will be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.server.extensions.scim.SCIMHTTPServletExtension.",
                    "type": "boolean"
                }
                ,
                "excludeLDAPObjectclass": {
                    "description": "Specifies the LDAP object classes that should be not be exposed directly as SCIM resources.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeInstanceNameLabel": {
                    "description": "Indicates whether generated metrics should include an "instance" label whose value is the instance name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "bulkMaxOperations": {
                    "description": "The maximum number of operations that are permitted in a bulk request.",
                    "type": "integer"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accessTokenScope": {
                    "description": "The name of a scope that must be present in an access token accepted by the Delegated Admin HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "includeMonitorObjectClassNameLabel": {
                    "description": "Indicates whether generated metrics should include a "monitor_object_class" label whose value is the name of the object class for the monitor entry from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "maxResults": {
                    "description": "The maximum number of resources that are returned in a response.",
                    "type": "integer"
                }
                ,
                "basicAuthEnabled": {
                    "description": "Enables HTTP Basic authentication, using a username and password. The Identity Mapper specified by the identity-mapper property will be used to map the username to a DN.",
                    "type": "boolean"
                }
                ,
                "unavailableStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be unavailable.",
                    "type": "integer"
                }
                ,
                "staticContentDirectory": {
                    "description": "Specifies the base directory in which static, non-template content such as images, CSS, and Javascript files are stored on the filesystem.",
                    "type": "string"
                }
                ,
                "includeLocationNameLabel": {
                    "description": "Indicates whether generated metrics should include a "location" label whose value is the location name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "allowContextOverride": {
                    "description": "Indicates whether context providers may override existing context objects with new values.",
                    "type": "boolean"
                }
                ,
                "idTokenValidator": {
                    "description": "The ID token validators that may be used to verify the authenticity of an of an OpenID Connect ID token.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "swaggerEnabled": {
                    "description": "Indicates whether the SCIM2 HTTP Servlet Extension will generate a Swagger specification document.",
                    "type": "boolean"
                }
                ,
                "additionalResponseContents": {
                    "description": "A JSON-formatted string containing additional fields to be returned in the response body. For example, an additional-response-contents value of '{ "key": "value" }' would add the key and value to the root of the JSON response body.",
                    "type": "string"
                }
                ,
                "audience": {
                    "description": "A string or URI that identifies the Delegated Admin HTTP Servlet Extension in the context of OAuth2 authorization.",
                    "type": "string"
                }
                ,
                "baseContextPath": {
                    "description": "Specifies the base context path that HTTP clients should use to access this servlet. The value must start with a forward slash and must represent a valid HTTP context path.",
                    "type": "string"
                }
                ,
                "OAuthTokenHandler": {
                    "description": "Specifies the OAuth Token Handler implementation that should be used to validate OAuth 2.0 bearer tokens when they are included in a SCIM request.",
                    "type": "string"
                }
                ,
                "alwaysIncludeMonitorEntryNameLabel": {
                    "description": "Indicates whether generated metrics should always include a "monitor_entry" label whose value is the name of the monitor entry from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "mimeTypesFile": {
                    "description": "Specifies the path to a file that contains MIME type mappings that will be used to determine the appropriate value to return for the Content-Type header based on the extension of the requested static content file.",
                    "type": "string"
                }
                ,
                "templateDirectory": {
                    "description": "Specifies an ordered list of directories in which to search for the template files.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "temporaryDirectory": {
                    "description": "Specifies the location of the directory that is used to create temporary files containing SCIM request data.",
                    "type": "string"
                }
                ,
                "schemasEndpointObjectclass": {
                    "description": "The list of object classes which will be returned by the schemas endpoint.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "resourceMappingFile": {
                    "description": "The path to an XML file defining the resources supported by the SCIM interface and the SCIM-to-LDAP attribute mappings to use.",
                    "type": "string"
                }
                ,
                "bulkMaxConcurrentRequests": {
                    "description": "The maximum number of bulk requests that may be processed concurrently by the server. Any bulk request that would cause this limit to be exceeded is rejected with HTTP status code 503.",
                    "type": "integer"
                }
                ,
                "defaultOperationalAttribute": {
                    "description": "A set of operational attributes that will be returned with entries by default.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "defaultMIMEType": {
                    "description": "Specifies the default value that will be used in the response's Content-Type header that indicates the type of content to return.",
                    "type": "string"
                }
                ,
                "includeResponseBody": {
                    "description": "Indicates whether the response should include a body that is a JSON object.",
                    "type": "boolean"
                }
                ,
                "indexFile": {
                    "description": "Specifies the name of a file whose contents may be returned to the client if the requested path refers to a directory rather than a file.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "identityMapper": {
                    "description": "Specifies the Identity Mapper that is to be used for associating user entries with basic authentication user names.",
                    "type": "string"
                }
                ,
                "includeLDAPObjectclass": {
                    "description": "Specifies the LDAP object classes that should be exposed directly as SCIM resources.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeStackTrace": {
                    "description": "Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.",
                    "type": "boolean"
                }
                ,
                "exposeServerContext": {
                    "description": "Specifies whether a server context will be exposed under context key 'ubid_server' for all template contexts.",
                    "type": "boolean"
                }
                ,
                "characterEncoding": {
                    "description": "Specifies the value that will be used for all responses' Content-Type headers' charset parameter that indicates the character encoding of the document.",
                    "type": "string"
                }
                ,
                "rejectExpansionAttribute": {
                    "description": "A set of attributes which the client is not allowed to provide for the expand query parameters. This should be used for attributes that could either have a large number of values or that reference entries that are very large like groups.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "server": {
                    "description": "Specifies the PingFederate server to be configured.",
                    "type": "string"
                }
                ,
                "staticCustomDirectory": {
                    "description": "Specifies the base directory in which custom static, non-template content such as images, CSS, and Javascript files are stored on the filesystem. Files in this directory will override those with the same name in the directory specified by the static-content-directory property.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "requireAuthentication": {
                    "description": "Require authentication when accessing Velocity templates.",
                    "type": "boolean"
                }
                ,
                "includeLDAPBaseDN": {
                    "description": "Specifies the base DNs for the branches of the DIT that should be exposed via the Identity Access API.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this HTTP Servlet Extension",
                    "type": "string"
                }
                ,
                "bearerTokenAuthEnabled": {
                    "description": "Enables HTTP bearer token authentication.",
                    "type": "boolean"
                }
                ,
                "labelNameValuePair": {
                    "description": "A set of name-value pairs for labels that should be included in all metrics exposed by this Directory Server instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "debugLevel": {
                    "description": "The minimum debug level that should be used for messages to be logged.",
                    "type": "string"
                    , "enum": [
                        "severe"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "config"
                        ,
                        "fine"
                        ,
                        "finer"
                        ,
                        "finest"
                    ]
                }
                ,
                "degradedStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be degraded.",
                    "type": "integer"
                }
                ,
                "includeProductNameLabel": {
                    "description": "Indicates whether generated metrics should include a "product" label whose value is the product name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "correlationIDResponseHeader": {
                    "description": "Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "string"
                }
                ,
                "availableStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be available.",
                    "type": "integer"
                }
                ,
                "allowedAuthenticationType": {
                    "description": "The types of authentication that may be used to authenticate to the file servlet.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "basic"
                            ,
                            "access-token"
                            ,
                            "id-token"
                        ]
                    }
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "bulkMaxPayloadSize": {
                    "description": "The maximum payload size in bytes of a bulk request.",
                    "type": "string"
                }
                ,
                "exposeRequestAttributes": {
                    "description": "Specifies whether the HTTP request will be exposed to templates.",
                    "type": "boolean"
                }
                ,
                "allowedControl": {
                    "description": "Specifies the names of any request controls that should be allowed by the Directory REST API. Any request that contains a critical control not in this list will be rejected. Any non-critical request control which is not supported by the Directory REST API will be removed from the request.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "assertion"
                            ,
                            "assured-replication"
                            ,
                            "exclude-branch"
                            ,
                            "generate-password"
                            ,
                            "get-effective-rights"
                            ,
                            "ignore-no-user-modification"
                            ,
                            "intermediate-client"
                            ,
                            "join"
                            ,
                            "manage-dsa-it"
                            ,
                            "matched-values"
                            ,
                            "matching-entry-count"
                            ,
                            "name-with-entryuuid"
                            ,
                            "no-op"
                            ,
                            "operation-purpose"
                            ,
                            "password-update-behavior"
                            ,
                            "password-validation-details"
                            ,
                            "permissive-modify"
                            ,
                            "permit-unindexed-search"
                            ,
                            "post-read"
                            ,
                            "pre-read"
                            ,
                            "proxied-authorization-v1"
                            ,
                            "proxied-authorization-v2"
                            ,
                            "purge-password"
                            ,
                            "real-attributes-only"
                            ,
                            "reject-unindexed-search"
                            ,
                            "retire-password"
                            ,
                            "suppress-referential-integrity"
                            ,
                            "uniqueness"
                            ,
                            "virtual-attributes-only"
                        ]
                    }
                }
                ,
                "exposeSessionAttributes": {
                    "description": "Specifies whether the HTTP session will be exposed to templates.",
                    "type": "boolean"
                }
                ,
                "enableDirectoryIndexing": {
                    "description": "Indicates whether to generate a default HTML page with a listing of available files if the requested path refers to a directory rather than a file, and that directory does not contain an index file.",
                    "type": "boolean"
                }
                ,
                "requireFileServletAccessPrivilege": {
                    "description": "Indicates whether the servlet extension should only accept requests from authenticated clients that have the file-servlet-access privilege.",
                    "type": "boolean"
                }
                ,
                "staticContextPath": {
                    "description": "The path below the base context path by which static, non-template content such as images, CSS, and Javascript files are accessible.",
                    "type": "string"
                }
                ,
                "maxPageSize": {
                    "description": "The maximum number of entries to be returned in one page of search results.",
                    "type": "integer"
                }
                ,
                "overrideStatusCode": {
                    "description": "Specifies a HTTP status code that the servlet should always return, regardless of the server's availability. If this value is defined, it will override the availability-based return codes.",
                    "type": "integer"
                }
                ,
                "crossOriginPolicy": {
                    "description": "The cross-origin request policy to use for the HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "excludeLDAPBaseDN": {
                    "description": "Specifies the base DNs for the branches of the DIT that should not be exposed via the Identity Access API.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "mapAccessTokensToLocalUsers": {
                    "description": "Indicates whether the SCIM2 servlet should attempt to map the presented access token to a local user.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "optional"
                        ,
                        "required"
                    ]
                }
                ,
                "documentRootDirectory": {
                    "description": "Specifies the path to the directory on the local filesystem containing the files to be served by this File Server HTTP Servlet Extension. The path must exist, and it must be a directory.",
                    "type": "string"
                }
                ,
                "entityTagLDAPAttribute": {
                    "description": "Specifies the LDAP attribute whose value should be used as the entity tag value to enable SCIM resource versioning support.",
                    "type": "string"
                }
                ,
                "temporaryDirectoryPermissions": {
                    "description": "Specifies the permissions that should be applied to the directory that is used to create temporary files.",
                    "type": "string"
                }
                ,
                "accessTokenValidator": {
                    "description": "If specified, the Access Token Validator(s) that may be used to validate access tokens for requests submitted to this Delegated Admin HTTP Servlet Extension.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "requireGroup": {
                    "description": "The DN of a group whose members will be permitted to access to the associated files. If multiple group DNs are configured, then anyone who is a member of at least one of those groups will be granted access.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "staticResponseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for static content requests such as images and scripts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http-servlet-extension-properties": {
            "id": "http-servlet-extension-properties",
            "description": "HTTP Servlet Extension properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:delegated-admin"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:quickstart"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:availability-state"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:prometheus-monitoring"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:velocity"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:consent"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:ldap-mapped-scim"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:groovy-scripted"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:file-server"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:config"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:scim2"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:directory-rest-api"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:third-party"
                        ]
                    }
                },
                "debugType": {
                    "description": "The types of debug messages that should be logged.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "coding-error"
                            ,
                            "exception"
                            ,
                            "other"
                        ]
                    }
                }
                ,
                "includeMonitorAttributeNameLabel": {
                    "description": "Indicates whether generated metrics should include a "monitor_attribute" label whose value is the name of the monitor attribute from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for all requests.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "debugEnabled": {
                    "description": "Enables debug logging of the SCIM SDK. Debug messages will be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.server.extensions.scim.SCIMHTTPServletExtension.",
                    "type": "boolean"
                }
                ,
                "excludeLDAPObjectclass": {
                    "description": "Specifies the LDAP object classes that should be not be exposed directly as SCIM resources.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeInstanceNameLabel": {
                    "description": "Indicates whether generated metrics should include an "instance" label whose value is the instance name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "bulkMaxOperations": {
                    "description": "The maximum number of operations that are permitted in a bulk request.",
                    "type": "integer"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "accessTokenScope": {
                    "description": "The name of a scope that must be present in an access token accepted by the Delegated Admin HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "includeMonitorObjectClassNameLabel": {
                    "description": "Indicates whether generated metrics should include a "monitor_object_class" label whose value is the name of the object class for the monitor entry from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "maxResults": {
                    "description": "The maximum number of resources that are returned in a response.",
                    "type": "integer"
                }
                ,
                "basicAuthEnabled": {
                    "description": "Enables HTTP Basic authentication, using a username and password. The Identity Mapper specified by the identity-mapper property will be used to map the username to a DN.",
                    "type": "boolean"
                }
                ,
                "unavailableStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be unavailable.",
                    "type": "integer"
                }
                ,
                "staticContentDirectory": {
                    "description": "Specifies the base directory in which static, non-template content such as images, CSS, and Javascript files are stored on the filesystem.",
                    "type": "string"
                }
                ,
                "includeLocationNameLabel": {
                    "description": "Indicates whether generated metrics should include a "location" label whose value is the location name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "allowContextOverride": {
                    "description": "Indicates whether context providers may override existing context objects with new values.",
                    "type": "boolean"
                }
                ,
                "idTokenValidator": {
                    "description": "The ID token validators that may be used to verify the authenticity of an of an OpenID Connect ID token.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "swaggerEnabled": {
                    "description": "Indicates whether the SCIM2 HTTP Servlet Extension will generate a Swagger specification document.",
                    "type": "boolean"
                }
                ,
                "additionalResponseContents": {
                    "description": "A JSON-formatted string containing additional fields to be returned in the response body. For example, an additional-response-contents value of '{ "key": "value" }' would add the key and value to the root of the JSON response body.",
                    "type": "string"
                }
                ,
                "audience": {
                    "description": "A string or URI that identifies the Delegated Admin HTTP Servlet Extension in the context of OAuth2 authorization.",
                    "type": "string"
                }
                ,
                "baseContextPath": {
                    "description": "Specifies the base context path that HTTP clients should use to access this servlet. The value must start with a forward slash and must represent a valid HTTP context path.",
                    "type": "string"
                }
                ,
                "OAuthTokenHandler": {
                    "description": "Specifies the OAuth Token Handler implementation that should be used to validate OAuth 2.0 bearer tokens when they are included in a SCIM request.",
                    "type": "string"
                }
                ,
                "alwaysIncludeMonitorEntryNameLabel": {
                    "description": "Indicates whether generated metrics should always include a "monitor_entry" label whose value is the name of the monitor entry from which the metric was obtained.",
                    "type": "boolean"
                }
                ,
                "mimeTypesFile": {
                    "description": "Specifies the path to a file that contains MIME type mappings that will be used to determine the appropriate value to return for the Content-Type header based on the extension of the requested static content file.",
                    "type": "string"
                }
                ,
                "templateDirectory": {
                    "description": "Specifies an ordered list of directories in which to search for the template files.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "temporaryDirectory": {
                    "description": "Specifies the location of the directory that is used to create temporary files containing SCIM request data.",
                    "type": "string"
                }
                ,
                "schemasEndpointObjectclass": {
                    "description": "The list of object classes which will be returned by the schemas endpoint.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "resourceMappingFile": {
                    "description": "The path to an XML file defining the resources supported by the SCIM interface and the SCIM-to-LDAP attribute mappings to use.",
                    "type": "string"
                }
                ,
                "bulkMaxConcurrentRequests": {
                    "description": "The maximum number of bulk requests that may be processed concurrently by the server. Any bulk request that would cause this limit to be exceeded is rejected with HTTP status code 503.",
                    "type": "integer"
                }
                ,
                "defaultOperationalAttribute": {
                    "description": "A set of operational attributes that will be returned with entries by default.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "defaultMIMEType": {
                    "description": "Specifies the default value that will be used in the response's Content-Type header that indicates the type of content to return.",
                    "type": "string"
                }
                ,
                "includeResponseBody": {
                    "description": "Indicates whether the response should include a body that is a JSON object.",
                    "type": "boolean"
                }
                ,
                "indexFile": {
                    "description": "Specifies the name of a file whose contents may be returned to the client if the requested path refers to a directory rather than a file.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "identityMapper": {
                    "description": "Specifies the Identity Mapper that is to be used for associating user entries with basic authentication user names.",
                    "type": "string"
                }
                ,
                "includeLDAPObjectclass": {
                    "description": "Specifies the LDAP object classes that should be exposed directly as SCIM resources.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "includeStackTrace": {
                    "description": "Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.",
                    "type": "boolean"
                }
                ,
                "exposeServerContext": {
                    "description": "Specifies whether a server context will be exposed under context key 'ubid_server' for all template contexts.",
                    "type": "boolean"
                }
                ,
                "characterEncoding": {
                    "description": "Specifies the value that will be used for all responses' Content-Type headers' charset parameter that indicates the character encoding of the document.",
                    "type": "string"
                }
                ,
                "rejectExpansionAttribute": {
                    "description": "A set of attributes which the client is not allowed to provide for the expand query parameters. This should be used for attributes that could either have a large number of values or that reference entries that are very large like groups.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "server": {
                    "description": "Specifies the PingFederate server to be configured.",
                    "type": "string"
                }
                ,
                "staticCustomDirectory": {
                    "description": "Specifies the base directory in which custom static, non-template content such as images, CSS, and Javascript files are stored on the filesystem. Files in this directory will override those with the same name in the directory specified by the static-content-directory property.",
                    "type": "string"
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "requireAuthentication": {
                    "description": "Require authentication when accessing Velocity templates.",
                    "type": "boolean"
                }
                ,
                "includeLDAPBaseDN": {
                    "description": "Specifies the base DNs for the branches of the DIT that should be exposed via the Identity Access API.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "description": {
                    "description": "A description for this HTTP Servlet Extension",
                    "type": "string"
                }
                ,
                "bearerTokenAuthEnabled": {
                    "description": "Enables HTTP bearer token authentication.",
                    "type": "boolean"
                }
                ,
                "labelNameValuePair": {
                    "description": "A set of name-value pairs for labels that should be included in all metrics exposed by this Directory Server instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "debugLevel": {
                    "description": "The minimum debug level that should be used for messages to be logged.",
                    "type": "string"
                    , "enum": [
                        "severe"
                        ,
                        "warning"
                        ,
                        "info"
                        ,
                        "config"
                        ,
                        "fine"
                        ,
                        "finer"
                        ,
                        "finest"
                    ]
                }
                ,
                "degradedStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be degraded.",
                    "type": "integer"
                }
                ,
                "includeProductNameLabel": {
                    "description": "Indicates whether generated metrics should include a "product" label whose value is the product name for this Directory Server instance.",
                    "type": "boolean"
                }
                ,
                "correlationIDResponseHeader": {
                    "description": "Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".",
                    "type": "string"
                }
                ,
                "availableStatusCode": {
                    "description": "Specifies the HTTP status code that the servlet should return if the server considers itself to be available.",
                    "type": "integer"
                }
                ,
                "allowedAuthenticationType": {
                    "description": "The types of authentication that may be used to authenticate to the file servlet.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "basic"
                            ,
                            "access-token"
                            ,
                            "id-token"
                        ]
                    }
                }
                ,
                "scriptArgument": {
                    "description": "The set of arguments used to customize the behavior for the Scripted HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "bulkMaxPayloadSize": {
                    "description": "The maximum payload size in bytes of a bulk request.",
                    "type": "string"
                }
                ,
                "exposeRequestAttributes": {
                    "description": "Specifies whether the HTTP request will be exposed to templates.",
                    "type": "boolean"
                }
                ,
                "allowedControl": {
                    "description": "Specifies the names of any request controls that should be allowed by the Directory REST API. Any request that contains a critical control not in this list will be rejected. Any non-critical request control which is not supported by the Directory REST API will be removed from the request.",
                    "type": "array",
                    "items": {
                        "type": "string"
                        , "enum": [
                            "assertion"
                            ,
                            "assured-replication"
                            ,
                            "exclude-branch"
                            ,
                            "generate-password"
                            ,
                            "get-effective-rights"
                            ,
                            "ignore-no-user-modification"
                            ,
                            "intermediate-client"
                            ,
                            "join"
                            ,
                            "manage-dsa-it"
                            ,
                            "matched-values"
                            ,
                            "matching-entry-count"
                            ,
                            "name-with-entryuuid"
                            ,
                            "no-op"
                            ,
                            "operation-purpose"
                            ,
                            "password-update-behavior"
                            ,
                            "password-validation-details"
                            ,
                            "permissive-modify"
                            ,
                            "permit-unindexed-search"
                            ,
                            "post-read"
                            ,
                            "pre-read"
                            ,
                            "proxied-authorization-v1"
                            ,
                            "proxied-authorization-v2"
                            ,
                            "purge-password"
                            ,
                            "real-attributes-only"
                            ,
                            "reject-unindexed-search"
                            ,
                            "retire-password"
                            ,
                            "suppress-referential-integrity"
                            ,
                            "uniqueness"
                            ,
                            "virtual-attributes-only"
                        ]
                    }
                }
                ,
                "exposeSessionAttributes": {
                    "description": "Specifies whether the HTTP session will be exposed to templates.",
                    "type": "boolean"
                }
                ,
                "enableDirectoryIndexing": {
                    "description": "Indicates whether to generate a default HTML page with a listing of available files if the requested path refers to a directory rather than a file, and that directory does not contain an index file.",
                    "type": "boolean"
                }
                ,
                "requireFileServletAccessPrivilege": {
                    "description": "Indicates whether the servlet extension should only accept requests from authenticated clients that have the file-servlet-access privilege.",
                    "type": "boolean"
                }
                ,
                "staticContextPath": {
                    "description": "The path below the base context path by which static, non-template content such as images, CSS, and Javascript files are accessible.",
                    "type": "string"
                }
                ,
                "maxPageSize": {
                    "description": "The maximum number of entries to be returned in one page of search results.",
                    "type": "integer"
                }
                ,
                "overrideStatusCode": {
                    "description": "Specifies a HTTP status code that the servlet should always return, regardless of the server's availability. If this value is defined, it will override the availability-based return codes.",
                    "type": "integer"
                }
                ,
                "crossOriginPolicy": {
                    "description": "The cross-origin request policy to use for the HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "excludeLDAPBaseDN": {
                    "description": "Specifies the base DNs for the branches of the DIT that should not be exposed via the Identity Access API.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "scriptClass": {
                    "description": "The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted HTTP Servlet Extension.",
                    "type": "string"
                }
                ,
                "mapAccessTokensToLocalUsers": {
                    "description": "Indicates whether the SCIM2 servlet should attempt to map the presented access token to a local user.",
                    "type": "string"
                    , "enum": [
                        "disabled"
                        ,
                        "optional"
                        ,
                        "required"
                    ]
                }
                ,
                "documentRootDirectory": {
                    "description": "Specifies the path to the directory on the local filesystem containing the files to be served by this File Server HTTP Servlet Extension. The path must exist, and it must be a directory.",
                    "type": "string"
                }
                ,
                "entityTagLDAPAttribute": {
                    "description": "Specifies the LDAP attribute whose value should be used as the entity tag value to enable SCIM resource versioning support.",
                    "type": "string"
                }
                ,
                "temporaryDirectoryPermissions": {
                    "description": "Specifies the permissions that should be applied to the directory that is used to create temporary files.",
                    "type": "string"
                }
                ,
                "accessTokenValidator": {
                    "description": "If specified, the Access Token Validator(s) that may be used to validate access tokens for requests submitted to this Delegated Admin HTTP Servlet Extension.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "requireGroup": {
                    "description": "The DN of a group whose members will be permitted to access to the associated files. If multiple group DNs are configured, then anyone who is a member of at least one of those groups will be granted access.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "staticResponseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for static content requests such as images and scripts.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
        ,
        "prometheus-monitor-attribute-metric-list-response": {
            "id": "prometheus-monitor-attribute-metric-list-response",
            "description": "Prometheus Monitor Attribute Metric list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "prometheus-monitor-attribute-metric-response"
                    }
                }
            }
        },
        "add-prometheus-monitor-attribute-metric-request": {
            "id": "add-prometheus-monitor-attribute-metric-request",
            "description": "A Prometheus Monitor Attribute Metric resource request",
            "required": [
                "metricName"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:prometheus-monitor-attribute-metric"
                        ]
                    }
                },
                "filter": {
                    "description": "A filter that may be used to restrict the set of monitor entries for which the metric should be generated.",
                    "type": "string"
                }
                ,
                "metricType": {
                    "description": "The metric type that should be used for the value of the specified monitor attribute.",
                    "type": "string"
                    , "enum": [
                        "counter"
                        ,
                        "gauge"
                    ]
                }
                ,
                "metricName": {
                    "description": "The name that will be used in the metric to be consumed by Prometheus.",
                    "type": "string"
                }
                ,
                "metricDescription": {
                    "description": "A human-readable description that should be published as part of the metric definition.",
                    "type": "string"
                }
                ,
                "monitorObjectClassName": {
                    "description": "The name of the object class for monitor entries that contain the monitor attribute.",
                    "type": "string"
                }
                ,
                "monitorAttributeName": {
                    "description": "The name of the monitor attribute that contains the numeric value to be published.",
                    "type": "string"
                }
                ,
                "labelNameValuePair": {
                    "description": "A set of name-value pairs for labels that should be included in the published metric for the target attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "prometheus-monitor-attribute-metric-response": {
            "id": "prometheus-monitor-attribute-metric-response",
            "description": "A Prometheus Monitor Attribute Metric resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:prometheus-monitor-attribute-metric"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Prometheus Monitor Attribute Metric"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "filter": {
                    "description": "A filter that may be used to restrict the set of monitor entries for which the metric should be generated.",
                    "type": "string"
                }
                ,
                "metricType": {
                    "description": "The metric type that should be used for the value of the specified monitor attribute.",
                    "type": "string"
                    , "enum": [
                        "counter"
                        ,
                        "gauge"
                    ]
                }
                ,
                "metricName": {
                    "description": "The name that will be used in the metric to be consumed by Prometheus.",
                    "type": "string"
                }
                ,
                "metricDescription": {
                    "description": "A human-readable description that should be published as part of the metric definition.",
                    "type": "string"
                }
                ,
                "monitorObjectClassName": {
                    "description": "The name of the object class for monitor entries that contain the monitor attribute.",
                    "type": "string"
                }
                ,
                "monitorAttributeName": {
                    "description": "The name of the monitor attribute that contains the numeric value to be published.",
                    "type": "string"
                }
                ,
                "labelNameValuePair": {
                    "description": "A set of name-value pairs for labels that should be included in the published metric for the target attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "prometheus-monitor-attribute-metric-properties": {
            "id": "prometheus-monitor-attribute-metric-properties",
            "description": "Prometheus Monitor Attribute Metric properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:prometheus-monitor-attribute-metric"
                        ]
                    }
                },
                "filter": {
                    "description": "A filter that may be used to restrict the set of monitor entries for which the metric should be generated.",
                    "type": "string"
                }
                ,
                "metricType": {
                    "description": "The metric type that should be used for the value of the specified monitor attribute.",
                    "type": "string"
                    , "enum": [
                        "counter"
                        ,
                        "gauge"
                    ]
                }
                ,
                "metricName": {
                    "description": "The name that will be used in the metric to be consumed by Prometheus.",
                    "type": "string"
                }
                ,
                "metricDescription": {
                    "description": "A human-readable description that should be published as part of the metric definition.",
                    "type": "string"
                }
                ,
                "monitorObjectClassName": {
                    "description": "The name of the object class for monitor entries that contain the monitor attribute.",
                    "type": "string"
                }
                ,
                "monitorAttributeName": {
                    "description": "The name of the monitor attribute that contains the numeric value to be published.",
                    "type": "string"
                }
                ,
                "labelNameValuePair": {
                    "description": "A set of name-value pairs for labels that should be included in the published metric for the target attribute.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
        ,
        "velocity-context-provider-list-response": {
            "id": "velocity-context-provider-list-response",
            "description": "Velocity Context Provider list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "velocity-context-provider-response"
                    }
                }
            }
        },
        "add-velocity-context-provider-request": {
            "id": "add-velocity-context-provider-request",
            "description": "A Velocity Context Provider resource request",
            "required": [
                "providerName"
            ],
            "properties": {
                "providerName": {
                    "type": "string",
                    "description": "Name of the new Velocity Context Provider"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:velocity-tools"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:third-party"
                        ]
                    }
                },
                "applicationTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Velocity Context Provider.",
                    "type": "string"
                }
                ,
                "includedView": {
                    "description": "The name of a view for which this Velocity Context Provider will contribute content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "excludedView": {
                    "description": "The name of a view for which this Velocity Context Provider will not contribute content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sessionTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity Context Provider contributes content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "requestTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "objectScope": {
                    "description": "Scope for context objects contributed by this Velocity Context Provider. Must be either 'request' or 'session' or 'application'.",
                    "type": "string"
                    , "enum": [
                        "application"
                        ,
                        "session"
                        ,
                        "request"
                    ]
                }
                ,
                "httpMethod": {
                    "description": "Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to fulfill the request before updating the context for the response. The values of this property are not case-sensitive.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "enabled": {
                    "description": "Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not contribute context content for any requests.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Velocity Context Provider. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "velocity-context-provider-response": {
            "id": "velocity-context-provider-response",
            "description": "A Velocity Context Provider resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:velocity-tools"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:third-party"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Velocity Context Provider"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "applicationTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Velocity Context Provider.",
                    "type": "string"
                }
                ,
                "includedView": {
                    "description": "The name of a view for which this Velocity Context Provider will contribute content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "excludedView": {
                    "description": "The name of a view for which this Velocity Context Provider will not contribute content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sessionTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity Context Provider contributes content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "requestTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "objectScope": {
                    "description": "Scope for context objects contributed by this Velocity Context Provider. Must be either 'request' or 'session' or 'application'.",
                    "type": "string"
                    , "enum": [
                        "application"
                        ,
                        "session"
                        ,
                        "request"
                    ]
                }
                ,
                "httpMethod": {
                    "description": "Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to fulfill the request before updating the context for the response. The values of this property are not case-sensitive.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "enabled": {
                    "description": "Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not contribute context content for any requests.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Velocity Context Provider. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "velocity-context-provider-properties": {
            "id": "velocity-context-provider-properties",
            "description": "Velocity Context Provider properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:velocity-tools"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:custom"
                            ,
                            "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:third-party"
                        ]
                    }
                },
                "applicationTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "extensionClass": {
                    "description": "The fully-qualified name of the Java class providing the logic for the Third Party Velocity Context Provider.",
                    "type": "string"
                }
                ,
                "includedView": {
                    "description": "The name of a view for which this Velocity Context Provider will contribute content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "excludedView": {
                    "description": "The name of a view for which this Velocity Context Provider will not contribute content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "sessionTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "responseHeader": {
                    "description": "Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity Context Provider contributes content.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "requestTool": {
                    "description": "The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "objectScope": {
                    "description": "Scope for context objects contributed by this Velocity Context Provider. Must be either 'request' or 'session' or 'application'.",
                    "type": "string"
                    , "enum": [
                        "application"
                        ,
                        "session"
                        ,
                        "request"
                    ]
                }
                ,
                "httpMethod": {
                    "description": "Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to fulfill the request before updating the context for the response. The values of this property are not case-sensitive.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
                ,
                "enabled": {
                    "description": "Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not contribute context content for any requests.",
                    "type": "boolean"
                }
                ,
                "extensionArgument": {
                    "description": "The set of arguments used to customize the behavior for the Third Party Velocity Context Provider. Each configuration property should be given in the form 'name=value'.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
        ,
        "velocity-template-loader-list-response": {
            "id": "velocity-template-loader-list-response",
            "description": "Velocity Template Loader list response",
            "required": [
                "schemas",
                "totalResults"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ]
                    }
                },
                "totalResults": {
                    "type": "integer"
                },
                "Resources": {
                    "type": "array",
                    "items": {
                        "$ref": "velocity-template-loader-response"
                    }
                }
            }
        },
        "add-velocity-template-loader-request": {
            "id": "add-velocity-template-loader-request",
            "description": "A Velocity Template Loader resource request",
            "required": [
                "loaderName"
            ],
            "properties": {
                "loaderName": {
                    "type": "string",
                    "description": "Name of the new Velocity Template Loader"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:velocity-template-loader"
                        ]
                    }
                },
                "mimeTypeMatcher": {
                    "description": "Specifies a media type for matching Accept request-header values.",
                    "type": "string"
                }
                ,
                "templateSuffix": {
                    "description": "Specifies the suffix to append to the requested resource name when searching for the template file with which to form a response.",
                    "type": "string"
                }
                ,
                "evaluationOrderIndex": {
                    "description": "This property determines the evaluation order for determining the correct Velocity Template Loader to load a template for generating content for a particular request.",
                    "type": "integer"
                }
                ,
                "mimeType": {
                    "description": "Specifies a the value that will be used in the response's Content-Type header that indicates the type of content to return.",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this Velocity Template Loader is enabled.",
                    "type": "boolean"
                }
                ,
                "templateDirectory": {
                    "description": "Specifies the directory in which to search for the template files.",
                    "type": "string"
                }
            }
        },
        "velocity-template-loader-response": {
            "id": "velocity-template-loader-response",
            "description": "A Velocity Template Loader resource response",
            "required": [
                "id"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:velocity-template-loader"
                        ]
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Name of the Velocity Template Loader"
                },
                "meta": {
                    "$ref": "Meta"
                },
                "urn:pingidentity:schemas:configuration:messages:2.0": {
                    "$ref": "Messages"
                },
                "mimeTypeMatcher": {
                    "description": "Specifies a media type for matching Accept request-header values.",
                    "type": "string"
                }
                ,
                "templateSuffix": {
                    "description": "Specifies the suffix to append to the requested resource name when searching for the template file with which to form a response.",
                    "type": "string"
                }
                ,
                "evaluationOrderIndex": {
                    "description": "This property determines the evaluation order for determining the correct Velocity Template Loader to load a template for generating content for a particular request.",
                    "type": "integer"
                }
                ,
                "mimeType": {
                    "description": "Specifies a the value that will be used in the response's Content-Type header that indicates the type of content to return.",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this Velocity Template Loader is enabled.",
                    "type": "boolean"
                }
                ,
                "templateDirectory": {
                    "description": "Specifies the directory in which to search for the template files.",
                    "type": "string"
                }
            }
        },
        "velocity-template-loader-properties": {
            "id": "velocity-template-loader-properties",
            "description": "Velocity Template Loader properties",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "urn:pingidentity:schemas:configuration:2.0:velocity-template-loader"
                        ]
                    }
                },
                "mimeTypeMatcher": {
                    "description": "Specifies a media type for matching Accept request-header values.",
                    "type": "string"
                }
                ,
                "templateSuffix": {
                    "description": "Specifies the suffix to append to the requested resource name when searching for the template file with which to form a response.",
                    "type": "string"
                }
                ,
                "evaluationOrderIndex": {
                    "description": "This property determines the evaluation order for determining the correct Velocity Template Loader to load a template for generating content for a particular request.",
                    "type": "integer"
                }
                ,
                "mimeType": {
                    "description": "Specifies a the value that will be used in the response's Content-Type header that indicates the type of content to return.",
                    "type": "string"
                }
                ,
                "enabled": {
                    "description": "Indicates whether this Velocity Template Loader is enabled.",
                    "type": "boolean"
                }
                ,
                "templateDirectory": {
                    "description": "Specifies the directory in which to search for the template files.",
                    "type": "string"
                }
            }
        }
    }
}
